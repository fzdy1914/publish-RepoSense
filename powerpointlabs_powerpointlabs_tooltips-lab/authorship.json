[
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/ColorsLab/ColorsLabActionHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using Microsoft.Office.Tools;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ColorsLab;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ActionFramework.ColorsLab"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    [ExportActionRibbonId(ColorsLabText.PaneTag)]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    class ColorsLabActionHandler : ActionHandler"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override void ExecuteAction(string ribbonId)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            this.RegisterTaskPane(typeof(ColorsLabPane), ColorsLabText.TaskPanelTitle);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            CustomTaskPane colorPane \u003d this.GetTaskPane(typeof(ColorsLabPane));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // if currently the pane is hidden, show the pane, vice versa."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            colorPane.Visible \u003d !colorPane.Visible;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 5,
      "-": 18
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/PictureSlidesLab/PictureSlidesEnabledHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "﻿using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "namespace PowerPointLabs.ActionFramework.PictureSlidesLab"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    [ExportEnabledRibbonId(PictureSlidesLabText.PaneTag)]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    class PictureSlidesEnabledHandler : EnabledHandler"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        protected override bool GetEnabled(string ribbonId)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            return PowerPointLabs.PictureSlidesLab.PictureSlidesLab.IsPictureSlidesEnabled;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 15
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/ShapesLab/ShapesLabActionHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using Microsoft.Office.Tools;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ShapesLab;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ActionFramework.ShapesLab"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    [ExportActionRibbonId(ShapesLabText.PaneTag)]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    class ShapesLabActionHandler : ActionHandler"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        public CustomShapePane InitCustomShapePane()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            ThisAddIn addIn \u003d this.GetAddIn();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            addIn.InitializeShapesLabConfig();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            addIn.InitializeShapeGallery();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            addIn.RegisterShapesLabPane(this.GetCurrentPresentation().Presentation);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomTaskPane customShapePane \u003d GetShapesLabPane();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            if (customShapePane \u003d\u003d null)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomShapePane customShape \u003d customShapePane.Control as CustomShapePane;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            customShape.UpdateOnSelectionChange(this.GetCurrentSelection());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            Logger.Log("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Before Visible: \" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                string.Format(\"Pane Width \u003d {0}, Pane Height \u003d {1}, Control Width \u003d {2}, Control Height {3}\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                              customShapePane.Width, customShapePane.Height, customShape.Width, customShape.Height));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            return customShape;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        public Microsoft.Office.Tools.CustomTaskPane GetShapesLabPane()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomTaskPane customShapePane \u003d this.GetAddIn().GetActivePane(typeof(CustomShapePane));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            if (customShapePane \u003d\u003d null || !(customShapePane.Control is CustomShapePane))"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            return customShapePane;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        public void TogglePaneVisibility()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomTaskPane customShapePane \u003d GetShapesLabPane();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            if (customShapePane \u003d\u003d null)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            SetPaneVisibility(!customShapePane.Visible);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SetPaneVisibility(bool visibility)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomTaskPane customShapePane \u003d GetShapesLabPane();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            if (customShapePane \u003d\u003d null)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            customShapePane.Visible \u003d visibility;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            if (customShapePane.Visible)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                CustomShapePane customShape \u003d customShapePane.Control as CustomShapePane;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                customShape.Width \u003d customShapePane.Width - 16;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                customShape.PaneReload();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override void ExecuteAction(string ribbonId)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            InitCustomShapePane();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            TogglePaneVisibility();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 2,
      "-": 88
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/ShortcutsLab/EditName/EditNameActionHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ShortcutsLab.Views;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ActionFramework.ShortcutsLab"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    [ExportActionRibbonId(ShortcutsLabText.EditNameTag)]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    class EditNameActionHandler : ActionHandler"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override void ExecuteAction(string ribbonId)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            Selection selection \u003d this.GetCurrentSelection();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape selectedShape \u003d selection.ShapeRange[1];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            if (selection.HasChildShapeRange)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                selectedShape \u003d selection.ChildShapeRange[1];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            EditNameDialogBox editForm \u003d new EditNameDialogBox(selectedShape);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            editForm.ShowDialog();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            if (!this.GetApplication().CommandBars.GetPressedMso(\"SelectionPane\"))"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                this.GetApplication().CommandBars.ExecuteMso(\"SelectionPane\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 5,
      "-": 27
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/TooltipsLab/AssignTooltip/AssignTooltipActionHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "using PowerPointLabs.TooltipsLab;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "using PowerPointLabs.Views;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ActionFramework.TooltipsLab"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    [ExportActionRibbonId(TooltipsLabText.AssignTooltipTag)]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    class AssignTooltipActionHandler : ActionHandler"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        protected override void ExecuteAction(string ribbonId)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            Selection selection \u003d this.GetCurrentSelection();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            PowerPointSlide currentSlide \u003d this.GetCurrentSlide();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (currentSlide \u003d\u003d null)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            if (!ShapeUtil.IsSelectionShape(selection))"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            try"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                bool success \u003d AssignTooltip.AddTriggerAnimation(currentSlide, selection);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                if (success)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                    // Open the animation custom pane if it is not opened"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                    if (!this.GetApplication().CommandBars.GetPressedMso(\"AnimationCustom\"))"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                        this.GetApplication().CommandBars.ExecuteMso(\"AnimationCustom\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                ErrorDialogBox.ShowDialog(\"PowerPointLabs\", e.Message, e);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 31,
      "blewjy": 20
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/TooltipsLab/AssignTooltip/AssignTooltipEnabledHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ActionFramework.TooltipsLab"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    [ExportEnabledRibbonId(TooltipsLabText.AssignTooltipTag)]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    class AssignTooltipEnabledHandler : EnabledHandler"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        protected override bool GetEnabled(string ribbonId)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Selection currentSelection \u003d this.GetCurrentSelection();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            return ShapeUtil.IsSelectionShape(currentSelection);      "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 1,
      "blewjy": 19
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/TooltipsLab/AssignTooltip/AssignTooltipImageHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿using System.Drawing;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ActionFramework.TooltipsLab"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    [ExportImageRibbonId(TooltipsLabText.AssignTooltipTag)]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    class AssignTooltipImageHandler : ImageHandler"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        protected override Bitmap GetImage(string ribbonId)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return new Bitmap(Properties.Resources.InSlideAnimation);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 17
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/TooltipsLab/AssignTooltip/AssignTooltipLabelHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ActionFramework.TooltipsLab"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    [ExportLabelRibbonId(TooltipsLabText.AssignTooltipTag)]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    class AssignTooltipLabelHandler : LabelHandler"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        protected override string GetLabel(string ribbonId)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return TooltipsLabText.AssignTooltipButtonLabel;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 15
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/TooltipsLab/AssignTooltip/AssignTooltipSupertipHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ActionFramework.TooltipsLab"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    [ExportSupertipRibbonId(TooltipsLabText.AssignTooltipTag)]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    class AssignTooltipSupertipHandler : SupertipHandler"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        protected override string GetSupertip(string ribbonId)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            return TooltipsLabText.AssignTooltipButtonSupertip;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 1,
      "blewjy": 14
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/TooltipsLab/Create/CreateCallout/CreateCalloutActionHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.TooltipsLab;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPoint \u003d Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ActionFramework.TooltipsLab"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    [ExportActionRibbonId(TooltipsLabText.CreateCalloutTag)]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    class CreateCalloutActionHandler : ActionHandler"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        protected override void ExecuteAction(string ribbonId)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            this.StartNewUndoEntry();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PowerPointSlide currentSlide \u003d this.GetCurrentSlide();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (currentSlide \u003d\u003d null)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PowerPoint.Selection selection \u003d this.GetCurrentSelection();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (selection.Type !\u003d PowerPoint.PpSelectionType.ppSelectionShapes)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                MessageBox.Show(TooltipsLabText.ErrorNoTriggerShapeSelected);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            foreach (PowerPoint.Shape selectedShape in selection.ShapeRange)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                PowerPoint.Shape callout \u003d CreateTooltip.GenerateCalloutWithReferenceTriggerShape(currentSlide, selectedShape);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                PowerPoint.Shape calloutGroup \u003d AddTextbox.AddTextboxToCallout(currentSlide, callout);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                AssignTooltip.AddTriggerAnimation(currentSlide, selectedShape, calloutGroup);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (!this.GetApplication().CommandBars.GetPressedMso(TooltipsLabConstants.AnimationPaneName))"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                this.GetApplication().CommandBars.ExecuteMso(TooltipsLabConstants.AnimationPaneName);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 49
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/TooltipsLab/Create/CreateCallout/CreateCalloutImageHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿using System.Drawing;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ActionFramework.TooltipsLab"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    [ExportImageRibbonId(TooltipsLabText.CreateCalloutTag)]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    class CreateCalloutImageHandler : ImageHandler"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        protected override Bitmap GetImage(string ribbonId)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return new Bitmap(Properties.Resources.AddAnimation);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 17
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/TooltipsLab/Create/CreateCallout/CreateCalloutLabelHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ActionFramework.TooltipsLab"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    [ExportLabelRibbonId(TooltipsLabText.CreateCalloutTag)]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    class CreateCalloutLabelHandler : LabelHandler"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        protected override string GetLabel(string ribbonId)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return TooltipsLabText.CreateCalloutButtonLabel;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 15
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/TooltipsLab/Create/CreateCallout/CreateCalloutSupertipHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ActionFramework.TooltipsLab"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    [ExportSupertipRibbonId(TooltipsLabText.CreateCalloutTag)]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    class CreateCalloutSupertipHandler : SupertipHandler"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        protected override string GetSupertip(string ribbonId)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return TooltipsLabText.CreateCalloutButtonSupertip;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 15
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/TooltipsLab/Create/CreateMenu/CreateMenuEnabledHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "﻿"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "namespace PowerPointLabs.ActionFramework.TooltipsLab"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    [ExportEnabledRibbonId(TooltipsLabText.CreateMenuTag)]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    class CreateMenuEnabledHandler : EnabledHandler"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        protected override bool GetEnabled(string ribbonId)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            PowerPointSlide currentSlide \u003d this.GetCurrentSlide();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            return currentSlide !\u003d null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 17,
      "blewjy": 2
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/TooltipsLab/Create/CreateMenu/CreateMenuImageHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿using System.Drawing;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ActionFramework.TooltipsLab"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    [ExportImageRibbonId(TooltipsLabText.CreateMenuTag)]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    class CreateMenuImageHandler : ImageHandler"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        protected override Bitmap GetImage(string ribbonId)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return new Bitmap(Properties.Resources.AddAnimation);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 17
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/TooltipsLab/Create/CreateMenu/CreateMenuLabelHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ActionFramework.TooltipsLab"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    [ExportLabelRibbonId(TooltipsLabText.CreateMenuTag)]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    class CreateMenuLabelHandler : LabelHandler"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        protected override string GetLabel(string ribbonId)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return TooltipsLabText.CreateMenuLabel;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 15
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/TooltipsLab/Create/CreateTooltip/CreateTooltipActionHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.TooltipsLab;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPoint \u003d Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ActionFramework.TooltipsLab"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    [ExportActionRibbonId(TooltipsLabText.CreateTooltipTag)]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    class CreateTooltipActionHandler : ActionHandler"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        protected override void ExecuteAction(string ribbonId)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            this.StartNewUndoEntry();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PowerPointSlide currentSlide \u003d this.GetCurrentSlide();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (currentSlide \u003d\u003d null)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PowerPoint.Shape triggerShape \u003d CreateTooltip.GenerateTriggerShape(currentSlide);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PowerPoint.Shape callout \u003d CreateTooltip.GenerateCalloutWithReferenceTriggerShape(currentSlide, triggerShape);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PowerPoint.Shape calloutGroup \u003d AddTextbox.AddTextboxToCallout(currentSlide, callout);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            AssignTooltip.AddTriggerAnimation(currentSlide, triggerShape, calloutGroup);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (!this.GetApplication().CommandBars.GetPressedMso(TooltipsLabConstants.AnimationPaneName))"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                this.GetApplication().CommandBars.ExecuteMso(TooltipsLabConstants.AnimationPaneName);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 38
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/TooltipsLab/Create/CreateTooltip/CreateTooltipImageHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿using System.Drawing;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ActionFramework.TooltipsLab"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    [ExportImageRibbonId(TooltipsLabText.CreateTooltipTag)]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    class CreateTooltipImageHandler : ImageHandler"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        protected override Bitmap GetImage(string ribbonId)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return new Bitmap(Properties.Resources.AddAnimation);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 17
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/TooltipsLab/Create/CreateTooltip/CreateTooltipLabelHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ActionFramework.TooltipsLab"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    [ExportLabelRibbonId(TooltipsLabText.CreateTooltipTag)]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    class CreateTooltipLabelHandler : LabelHandler"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        protected override string GetLabel(string ribbonId)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return TooltipsLabText.CreateTooltipButtonLabel;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 15
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/TooltipsLab/Create/CreateTooltip/CreateTooltipSupertipHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ActionFramework.TooltipsLab"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    [ExportSupertipRibbonId(TooltipsLabText.CreateTooltipTag)]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    class CreateTooltipSupertipHandler : SupertipHandler"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        protected override string GetSupertip(string ribbonId)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            return TooltipsLabText.CreateTooltipButtonSupertip;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 1,
      "blewjy": 14
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/TooltipsLab/Create/CreateTrigger/CreateTriggerActionHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.TooltipsLab;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPoint \u003d Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ActionFramework.TooltipsLab"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    [ExportActionRibbonId(TooltipsLabText.CreateTriggerTag)]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    class CreateTriggerActionHandler : ActionHandler"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        protected override void ExecuteAction(string ribbonId)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            this.StartNewUndoEntry();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PowerPointSlide currentSlide \u003d this.GetCurrentSlide();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (currentSlide \u003d\u003d null)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PowerPoint.Selection selection \u003d this.GetCurrentSelection();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (selection.Type !\u003d PowerPoint.PpSelectionType.ppSelectionShapes)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                MessageBox.Show(TooltipsLabText.ErrorNoCalloutShapeSelected);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            foreach (PowerPoint.Shape selectedShape in selection.ShapeRange)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                PowerPoint.Shape triggerShape \u003d CreateTooltip.GenerateTriggerShapeWithReferenceCallout(currentSlide, selectedShape);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                AssignTooltip.AddTriggerAnimation(currentSlide, triggerShape, selectedShape);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (!this.GetApplication().CommandBars.GetPressedMso(TooltipsLabConstants.AnimationPaneName))"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                this.GetApplication().CommandBars.ExecuteMso(TooltipsLabConstants.AnimationPaneName);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 47
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/TooltipsLab/Create/CreateTrigger/CreateTriggerImageHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿using System.Drawing;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ActionFramework.TooltipsLab"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    [ExportImageRibbonId(TooltipsLabText.CreateTriggerTag)]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    class CreateTriggerImageHandler : ImageHandler"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        protected override Bitmap GetImage(string ribbonId)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return new Bitmap(Properties.Resources.AddAnimation);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 17
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/TooltipsLab/Create/CreateTrigger/CreateTriggerLabelHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ActionFramework.TooltipsLab"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    [ExportLabelRibbonId(TooltipsLabText.CreateTriggerTag)]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    class CreateTriggerLabelHandler : LabelHandler"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        protected override string GetLabel(string ribbonId)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return TooltipsLabText.CreateTriggerButtonLabel;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 15
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/TooltipsLab/Create/CreateTrigger/CreateTriggerSupertipHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ActionFramework.TooltipsLab"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    [ExportSupertipRibbonId(TooltipsLabText.CreateTriggerTag)]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    class CreateTriggerSupertipHandler : SupertipHandler"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        protected override string GetSupertip(string ribbonId)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return TooltipsLabText.CreateTriggerButtonSupertip;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 15
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/TooltipsLab/TooltipsLabMenu/TooltipsLabMenuImageHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿using System.Drawing;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ActionFramework.TooltipsLab"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    [ExportImageRibbonId(TooltipsLabText.RibbonMenuId)]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    class TooltipsLabMenuImageHandler : ImageHandler"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        protected override Bitmap GetImage(string ribbonId)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return new Bitmap(Properties.Resources.AnimationLab);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 17
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/TooltipsLab/TooltipsLabMenu/TooltipsLabMenuLabelHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ActionFramework.TooltipsLab"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    [ExportLabelRibbonId(TooltipsLabText.RibbonMenuId)]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    class TooltipsLabMenuLabelHandler : LabelHandler"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        protected override string GetLabel(string ribbonId)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return TooltipsLabText.RibbonMenuLabel;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 15
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/TooltipsLab/TooltipsLabMenu/TooltipsLabMenuSupertipHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ActionFramework.TooltipsLab"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    [ExportSupertipRibbonId(TooltipsLabText.RibbonMenuId)]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    class TooltipsLabMenuSupertipHandler : SupertipHandler"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        protected override string GetSupertip(string ribbonId)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return AnimationLabText.RibbonMenuSupertip;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 15
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/TooltipsLab/TooltipsLabSettings/TooltipsLabSettingsActionHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "﻿using System.Windows.Forms;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ActionFramework.TooltipsLab"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    [ExportActionRibbonId(TooltipsLabText.SettingsTag)]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    class TooltipsLabSettingsActionHandler : ActionHandler"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        protected override void ExecuteAction(string ribbonId)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            // TODO: Settings for Tooltips Lab"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            MessageBox.Show(\"No settings for Tooltips Lab yet. Will be implemented soon!\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            return; "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 6,
      "blewjy": 13
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/TooltipsLab/TooltipsLabSettings/TooltipsLabSettingsImageHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿using System.Drawing;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ActionFramework.TooltipsLab"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    [ExportImageRibbonId(TooltipsLabText.SettingsTag)]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    class TooltipsLabSettingsImageHandler : ImageHandler"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        protected override Bitmap GetImage(string ribbonId)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return new Bitmap(Properties.Resources.AgendaSettings);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 17
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/TooltipsLab/TooltipsLabSettings/TooltipsLabSettingsLabelHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ActionFramework.TooltipsLab"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    [ExportLabelRibbonId(TooltipsLabText.SettingsTag)]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    class TooltipsLabSettingsLabelHandler : LabelHandler"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        protected override string GetLabel(string ribbonId)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return TooltipsLabText.SettingsButtonLabel;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 15
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/TooltipsLab/TooltipsLabSettings/TooltipsLabSettingsSupertipHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ActionFramework.TooltipsLab"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    [ExportSupertipRibbonId(TooltipsLabText.SettingsTag)]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    class TooltipsLabSettingsSupertipHandler : SupertipHandler"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        protected override string GetSupertip(string ribbonId)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            return TooltipsLabText.SettingsButtonSupertip;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 1,
      "blewjy": 14
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ColorsLab/ColorHelper.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System.Collections.Generic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ColorsLab"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    class ColorHelper"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        public static int ReverseRGBToArgb(int x)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "            int r \u003d 0xff \u0026 x;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "            int g \u003d (0xff00 \u0026 x) \u003e\u003e 8;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "            int b \u003d (0xff0000 \u0026 x) \u003e\u003e 16;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "            return (int)(0xff \u003c\u003c 24 | r \u003c\u003c 16 | g \u003c\u003c 8 | b);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public static string ColorToHexString(Color color)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return \"#\" + color.R.ToString(\"X2\") + color.G.ToString(\"X2\") + color.B.ToString(\"X2\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        public static Color GetColorShiftedByAngle(HSLColor originalColor, float angle)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            if (angle \u003c 0)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                while (angle \u003c 0)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                    angle +\u003d 360.0f;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            float baseAngle \u003d (float) originalColor.Hue / 240.0f * 360.0f;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            float finalAngle \u003d baseAngle + angle;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            if (finalAngle \u003e 360.0f)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                finalAngle -\u003d 360.0f;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            Color finalColor \u003d new HSLColor(finalAngle / 360.0f * 240.0f, originalColor.Saturation, originalColor.Luminosity);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            return Color.FromArgb(255,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                    finalColor.R,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                    finalColor.G,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                    finalColor.B);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        public static Color GetComplementaryColor(HSLColor originalColor)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            return GetColorShiftedByAngle(originalColor, 180.0f);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        public static List\u003cColor\u003e GetAnalogousColorsForColor(HSLColor originalColor)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cColor\u003e analogousColors \u003d new List\u003cColor\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                GetColorShiftedByAngle(originalColor, -30.0f),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                GetColorShiftedByAngle(originalColor, 30.0f)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            return analogousColors;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        public static List\u003cColor\u003e GetTriadicColorsForColor(HSLColor originalColor)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cColor\u003e triadicColors \u003d new List\u003cColor\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                GetColorShiftedByAngle(originalColor, -120.0f),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                GetColorShiftedByAngle(originalColor, 120.0f)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            return triadicColors;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        public static List\u003cColor\u003e GetTetradicColorsForColor(HSLColor originalColor)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cColor\u003e tetradicColors \u003d new List\u003cColor\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                GetColorShiftedByAngle(originalColor, -90.0f),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                GetColorShiftedByAngle(originalColor, 90.0f),"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                GetComplementaryColor(originalColor)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            return tetradicColors;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        public static List\u003cColor\u003e GetSplitComplementaryColorsForColor(HSLColor originalColor)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cColor\u003e splitComplementaryColors \u003d new List\u003cColor\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                GetColorShiftedByAngle(originalColor, 150.0f),"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                GetColorShiftedByAngle(originalColor, 210.0f)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            return splitComplementaryColors;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 6,
      "-": 90
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ColorsLab/ColorInformationDialog.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Linq;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Text;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Threading.Tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Windows.Controls;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Windows.Data;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Windows.Documents;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Windows.Input;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Windows.Media;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Windows.Media.Imaging;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Windows.Navigation;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Windows.Shapes;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ColorsLab"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    /// Interaction logic for ColorInformationDialog.xaml"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    public partial class ColorInformationDialog : Window"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "blewjy"
        },
        "content": "      "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public ColorInformationDialog(System.Drawing.Color color)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            DataContext \u003d this;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            WindowStartupLocation \u003d WindowStartupLocation.CenterScreen;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            colorRectangle.Fill \u003d new SolidColorBrush(System.Windows.Media.Color.FromArgb(color.A, color.R, color.G, color.B));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            colorHexText.Text \u003d ((HSLColor)color).ToHexString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            colorRgbText.Text \u003d ((HSLColor)color).ToRGBString();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            colorHslText.Text \u003d ((HSLColor)color).ToString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 41
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ColorsLab/ColorsLabConstants.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ColorsLab"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    static class ColorsLabConstants"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 8
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ColorsLab/ColorsLabPane.Designer.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿namespace PowerPointLabs.ColorsLab"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    partial class ColorsLabPane"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Required designer variable."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private System.ComponentModel.IContainer components \u003d null;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Clean up any resources being used."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"disposing\"\u003etrue if managed resources should be disposed; otherwise, false.\u003c/param\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        protected override void Dispose(bool disposing)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (disposing \u0026\u0026 (components !\u003d null))"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                components.Dispose();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            base.Dispose(disposing);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #region Windows Form Designer generated code"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Required method for Designer support - do not modify"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// the contents of this method with the code editor."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void InitializeComponent()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            this.elementHost1 \u003d new System.Windows.Forms.Integration.ElementHost();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            this.ColorsLabPaneWPF1 \u003d new PowerPointLabs.ColorsLab.ColorsLabPaneWPF();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            this.SuspendLayout();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // elementHost1"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            this.elementHost1.Dock \u003d System.Windows.Forms.DockStyle.Fill;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            this.elementHost1.Location \u003d new System.Drawing.Point(0, 0);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            this.elementHost1.Name \u003d \"elementHost1\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            this.elementHost1.Size \u003d new System.Drawing.Size(300, 833);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            this.elementHost1.TabIndex \u003d 0;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            this.elementHost1.Text \u003d \"elementHost1\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            this.elementHost1.Child \u003d this.ColorsLabPaneWPF1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // ColorsLabPaneWPF"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            this.AutoScaleDimensions \u003d new System.Drawing.SizeF(6F, 13F);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            this.AutoScaleMode \u003d System.Windows.Forms.AutoScaleMode.Font;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            this.Controls.Add(this.elementHost1);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            this.Name \u003d \"ColorsLabPane\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            this.Size \u003d new System.Drawing.Size(300, 833);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            this.ResumeLayout(false);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private System.Windows.Forms.Integration.ElementHost elementHost1;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public ColorsLabPaneWPF ColorsLabPaneWPF1 { get; private set; }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 60
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ColorsLab/ColorsLabPane.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿using System.Windows.Forms;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ColorsLab"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    public partial class ColorsLabPane : UserControl"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public ColorsLabPane()"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 12
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ColorsLab/ColorsLabPaneWPF.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.IO;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Windows.Controls;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Windows.Input;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Windows.Media;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Windows.Media.Imaging;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using Microsoft.Office.Core;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ColorsLab;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.DataSources;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.Views;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using Color \u003d System.Drawing.Color;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPoint \u003d Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ColorsLab"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    /// Interaction logic for TimerLabPaneWPF.xaml"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    public partial class ColorsLabPaneWPF : UserControl"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #region Functional Test API"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public Point GetApplyTextButtonLocationAsPoint()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Point locationFromWindow \u003d applyTextColorButton.TranslatePoint(new Point(0, 0), this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Point topLeftOfButton \u003d PointToScreen(locationFromWindow);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return new Point("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                topLeftOfButton.X + applyTextColorButton.ActualWidth / 2, "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                topLeftOfButton.Y + applyTextColorButton.ActualHeight / 2);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public Point GetApplyLineButtonLocationAsPoint()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Point locationFromWindow \u003d applyLineColorButton.TranslatePoint(new Point(0, 0), this);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Point topLeftOfButton \u003d PointToScreen(locationFromWindow);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return new Point("
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                topLeftOfButton.X + applyLineColorButton.ActualWidth / 2,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                topLeftOfButton.Y + applyLineColorButton.ActualHeight / 2);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public Point GetApplyFillButtonLocationAsPoint()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Point locationFromWindow \u003d applyFillColorButton.TranslatePoint(new Point(0, 0), this);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Point topLeftOfButton \u003d PointToScreen(locationFromWindow);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return new Point("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                topLeftOfButton.X + applyFillColorButton.ActualWidth / 2,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                topLeftOfButton.Y + applyFillColorButton.ActualHeight / 2);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public Point GetMainColorRectangleLocationAsPoint()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Point locationFromWindow \u003d selectedColorRectangle.TranslatePoint(new Point(0, 0), this);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Point topLeftOfButton \u003d PointToScreen(locationFromWindow);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return new Point("
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                topLeftOfButton.X + selectedColorRectangle.ActualWidth / 2,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                topLeftOfButton.Y + selectedColorRectangle.ActualHeight / 2);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public Point GetEyeDropperButtonLocationAsPoint()"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Point locationFromWindow \u003d eyeDropperButton.TranslatePoint(new Point(0, 0), this);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Point topLeftOfButton \u003d PointToScreen(locationFromWindow);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return new Point("
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                topLeftOfButton.X + eyeDropperButton.ActualWidth / 2,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                topLeftOfButton.Y + eyeDropperButton.ActualHeight / 2);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public List\u003cColor\u003e GetFavoriteColorsPanelAsList()"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            List\u003cColor\u003e list \u003d new List\u003cColor\u003e();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            list.Add(dataSource.ThemeColorOne);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            list.Add(dataSource.ThemeColorTwo);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            list.Add(dataSource.ThemeColorThree);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            list.Add(dataSource.ThemeColorFour);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            list.Add(dataSource.ThemeColorFive);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            list.Add(dataSource.ThemeColorSix);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            list.Add(dataSource.ThemeColorSeven);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            list.Add(dataSource.ThemeColorEight);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            list.Add(dataSource.ThemeColorNine);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            list.Add(dataSource.ThemeColorTen);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            list.Add(dataSource.ThemeColorEleven);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            list.Add(dataSource.ThemeColorTwelve);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            list.Add(dataSource.ThemeColorThirteen);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public void LoadFavoriteColorsFromPath(string filePath)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            dataSource.LoadThemeColorsFromFile(filePath);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #region Private variables"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        // To set color mode"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private enum MODE"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            FILL,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            LINE,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            FONT,"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            MAIN,"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            NONE"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private MODE _eyedropperMode;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private Color _previousFillColor;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private Color _currentSelectedColor;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private PowerPoint.ShapeRange _selectedShapes;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private PowerPoint.TextRange _selectedText;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private bool _isEyedropperMode \u003d false;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private bool _shouldAllowDrag \u003d false;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        // Data-bindings datasource"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        ColorDataSource dataSource \u003d new ColorDataSource();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        // Eyedropper-related"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private const float MAGNIFICATION_FACTOR \u003d 2.5f;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private Cursor eyeDropperCursor \u003d new Cursor(new MemoryStream(Properties.Resources.EyeDropper));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private Magnifier magnifier \u003d new Magnifier(MAGNIFICATION_FACTOR);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private System.Windows.Forms.Timer eyeDropperTimer \u003d new System.Windows.Forms.Timer(new System.ComponentModel.Container());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private const int CLICK_THRESHOLD \u003d 2;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private int timer1Ticks;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        // Saving color themes"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private string _defaultThemeColorDirectory \u003d Path.Combine("
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments), "
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            \"PowerPointLabs.defaultThemeColor.thm\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #region Constructor"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public ColorsLabPaneWPF()"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // Set data context to data source for XAML to reference."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            DataContext \u003d dataSource;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // Do not remove. Default generated code."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // Setup code"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            SetupImageSources();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            SetupEyedropperTimer();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            SetDefaultColor(Color.CornflowerBlue);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            SetDefaultThemeColors();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // Hook the mouse process if it has not"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PPExtraEventHelper.PPMouse.TryStartHook();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #region Setup Code"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Function that handles the setting up of all the images in the pane."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void SetupImageSources()"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            textColorIcon.Source \u003d System.Windows.Interop.Imaging.CreateBitmapSourceFromHBitmap("
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    Properties.Resources.TextColor_icon.GetHbitmap(),"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    IntPtr.Zero,"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    Int32Rect.Empty,"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    BitmapSizeOptions.FromEmptyOptions());"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            lineColorIcon.Source \u003d System.Windows.Interop.Imaging.CreateBitmapSourceFromHBitmap("
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    Properties.Resources.LineColor_icon.GetHbitmap(),"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    IntPtr.Zero,"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    Int32Rect.Empty,"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    BitmapSizeOptions.FromEmptyOptions());"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            fillColorIcon.Source \u003d System.Windows.Interop.Imaging.CreateBitmapSourceFromHBitmap("
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    Properties.Resources.FillColor_icon.GetHbitmap(),"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    IntPtr.Zero,"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    Int32Rect.Empty,"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    BitmapSizeOptions.FromEmptyOptions());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            eyeDropperIcon.Source \u003d System.Windows.Interop.Imaging.CreateBitmapSourceFromHBitmap("
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    Properties.Resources.EyeDropper_icon.GetHbitmap(),"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    IntPtr.Zero,"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    Int32Rect.Empty,"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    BitmapSizeOptions.FromEmptyOptions());"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            brightnessIcon.Source \u003d System.Windows.Interop.Imaging.CreateBitmapSourceFromHBitmap("
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    Properties.Resources.Brightness_icon_25x25.GetHbitmap(),"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    IntPtr.Zero,"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    Int32Rect.Empty,"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    BitmapSizeOptions.FromEmptyOptions());"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            saturationIcon.Source \u003d System.Windows.Interop.Imaging.CreateBitmapSourceFromHBitmap("
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    Properties.Resources.Saturation_icon_18x18.GetHbitmap(),"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    IntPtr.Zero,"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    Int32Rect.Empty,"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    BitmapSizeOptions.FromEmptyOptions());"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            saveColorIcon.Source \u003d System.Windows.Interop.Imaging.CreateBitmapSourceFromHBitmap("
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    Properties.Resources.Save_icon.GetHbitmap(),"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    IntPtr.Zero,"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    Int32Rect.Empty,"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    BitmapSizeOptions.FromEmptyOptions());"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            loadColorIcon.Source \u003d System.Windows.Interop.Imaging.CreateBitmapSourceFromHBitmap("
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    Properties.Resources.Load_icon.GetHbitmap(),"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    IntPtr.Zero,"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    Int32Rect.Empty,"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    BitmapSizeOptions.FromEmptyOptions());"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            reloadColorIcon.Source \u003d System.Windows.Interop.Imaging.CreateBitmapSourceFromHBitmap("
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    Properties.Resources.Reload_icon.GetHbitmap(),"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    IntPtr.Zero,"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    Int32Rect.Empty,"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    BitmapSizeOptions.FromEmptyOptions());"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            clearColorIcon.Source \u003d System.Windows.Interop.Imaging.CreateBitmapSourceFromHBitmap("
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    Properties.Resources.Clear_icon.GetHbitmap(),"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    IntPtr.Zero,"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    Int32Rect.Empty,"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    BitmapSizeOptions.FromEmptyOptions());"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Set default color upon startup."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"color\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void SetDefaultColor(Color color)"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            dataSource.SelectedColor \u003d color;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Set default theme colors for favourite colors panel."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void SetDefaultThemeColors()"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            LoadDefaultThemePanel();"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Setup the timer tick handler."
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void SetupEyedropperTimer()"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            this.eyeDropperTimer.Tick +\u003d new System.EventHandler(this.Timer1_Tick);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #region Event Handlers"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #region ColorsLabPane Handlers"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// This method handles the loaded ColorsLabPane."
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void ColorsLabPaneWPF_Loaded(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Microsoft.Office.Tools.CustomTaskPane colorsLabPane \u003d this.GetAddIn().GetActivePane(typeof(ColorsLabPane));"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (colorsLabPane \u003d\u003d null || !(colorsLabPane.Control is ColorsLabPane))"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                MessageBox.Show(\"Error: ColorsLabPane not opened.\");"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            ColorsLabPane colorsLab \u003d colorsLabPane.Control as ColorsLabPane;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // Add handler for closing of ColorsLab"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            colorsLab.HandleDestroyed +\u003d ColorsLab_Closing;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// This handler is called when ColorsLab is destroyed, i.e. when PPTLabs closes."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Current colors in the panel are saved when this happens."
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void ColorsLab_Closing(Object sender, EventArgs e)"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            SaveDefaultColorPaneThemeColors();"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #region Button Handlers"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// On mouse down, init eyedropper mode."
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void ApplyColorButton_MouseDown(object sender, MouseButtonEventArgs e)"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (this.GetCurrentSelection().Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionNone)"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                MessageBox.Show(ColorsLabText.ErrorNoSelection, ColorsLabText.ErrorDialogTitle);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            CaptureMouse();"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            SetEyedropperMode(((Button)sender).Name);"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            BeginEyedropping();"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            this.GetApplication().StartNewUndoEntry();"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #region Slider Value Changed Handlers"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Updates selected color when brightness slider is moved."
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void BrightnessSlider_ValueChanged(object sender, RoutedPropertyChangedEventArgs\u003cdouble\u003e e)"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            double newBrightness \u003d e.NewValue;"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            HSLColor newColor \u003d new HSLColor();"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            newColor.Hue \u003d dataSource.SelectedColor.Hue;"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            newColor.Saturation \u003d dataSource.SelectedColor.Saturation;"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            newColor.Luminosity \u003d newBrightness;"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            dataSource.SelectedColor \u003d newColor;"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        "
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Updates selected color when saturation slider is moved."
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void SaturationSlider_ValueChanged(object sender, RoutedPropertyChangedEventArgs\u003cdouble\u003e e)"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            double newSaturation \u003d e.NewValue;"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            HSLColor newColor \u003d new HSLColor();"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            newColor.Hue \u003d dataSource.SelectedColor.Hue;"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            newColor.Saturation \u003d newSaturation;"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            newColor.Luminosity \u003d dataSource.SelectedColor.Luminosity;"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            dataSource.SelectedColor \u003d newColor;"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #region Color Rectangle Handlers"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Add MouseUp event to rectangle to simulate a click event."
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void SelectedColorRectangle_MouseDown(object sender, MouseButtonEventArgs e)"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (_isEyedropperMode)"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // We remove the MouseUp event first before adding it to ensure that at anytime there\u0027s only"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // one listener for the MouseUp event."
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            System.Windows.Shapes.Rectangle rect \u003d (System.Windows.Shapes.Rectangle)sender;"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            rect.MouseUp -\u003d SelectedColorRectangle_MouseUp;"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            rect.MouseUp +\u003d SelectedColorRectangle_MouseUp;"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Opens up a Windows.Forms ColorDialog upon click of the selectedColor rectangle."
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void SelectedColorRectangle_MouseUp(object sender, MouseButtonEventArgs e)"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            System.Windows.Shapes.Rectangle rect \u003d (System.Windows.Shapes.Rectangle)sender;"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            rect.MouseUp -\u003d SelectedColorRectangle_MouseUp;"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            System.Windows.Forms.ColorDialog colorPickerDialog \u003d new System.Windows.Forms.ColorDialog();"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            colorPickerDialog.FullOpen \u003d true;"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // Sets the initial color select to the current selected color."
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            colorPickerDialog.Color \u003d dataSource.SelectedColor;"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // Update the selected color if the user clicks OK"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (colorPickerDialog.ShowDialog() \u003d\u003d System.Windows.Forms.DialogResult.OK)"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                dataSource.SelectedColor \u003d colorPickerDialog.Color;"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Handles drag-and-drop functionality for color rects that can be dragged to favourite colors."
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void DraggableColorRectangle_MouseMove(object sender, MouseEventArgs e)"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (_isEyedropperMode)"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            System.Windows.Shapes.Rectangle rect \u003d (System.Windows.Shapes.Rectangle)sender;"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (rect !\u003d null \u0026\u0026 e.LeftButton \u003d\u003d MouseButtonState.Released)"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                _shouldAllowDrag \u003d true;"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (rect !\u003d null \u0026\u0026 e.LeftButton \u003d\u003d MouseButtonState.Pressed \u0026\u0026 _shouldAllowDrag)"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                try"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    DragDrop.DoDragDrop(rect, rect.Fill.ToString(), DragDropEffects.Copy);"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                } "
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                catch (System.Runtime.InteropServices.COMException)"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    // This exception occurs when user tries to drag the color rect to a textbox/shape on the slide."
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    // Due to lack of drag and drop support for some PowerPoint objects, exception will be thrown."
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    // When this is detected, to insert the data to the textbox instead."
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    // More info: https://social.msdn.microsoft.com/Forums/en-US/9925d6c7-e92f-40e7-9467-7b4e69174e9e/vsto-addin-gt-facing-problem-in-implementing-dragdrop-functionality-gt-need-help?forum\u003dvsto"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    PowerPoint.Selection currSelection \u003d this.GetCurrentSelection();"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    if (currSelection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionShapes ||"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                        currSelection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionText)"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                        currSelection.TextRange2.Text \u003d rect.Fill.ToString();"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                _shouldAllowDrag \u003d false;"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// This function prevents user to begin the drag from outside the rectangle."
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void DraggableColorRectangle_MouseLeave(object sender, MouseEventArgs e)"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (_isEyedropperMode)"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            _shouldAllowDrag \u003d false;"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            System.Windows.Shapes.Rectangle rect \u003d (System.Windows.Shapes.Rectangle)sender;"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (rect.Name \u003d\u003d \"selectedColorRectangle\")"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                rect.MouseUp -\u003d SelectedColorRectangle_MouseUp;"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Adds a MouseUp listener to the sender object when it detects a MouseDown."
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// The purpose of this is to simulate a click event on the Rectangle object."
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void ColorRectangle_MouseDown(object sender, MouseButtonEventArgs e)"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (_isEyedropperMode)"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // We remove the MouseUp event first before adding it to ensure that at anytime there\u0027s only"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // one listener for the MouseUp event."
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            System.Windows.Shapes.Rectangle rect \u003d (System.Windows.Shapes.Rectangle)sender;"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            rect.MouseUp -\u003d ColorRectangle_MouseUp;"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            rect.MouseUp +\u003d ColorRectangle_MouseUp;"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Change the selectedColor to the color of the matching color rect."
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void ColorRectangle_MouseUp(object sender, MouseButtonEventArgs e)"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            System.Windows.Shapes.Rectangle rect \u003d (System.Windows.Shapes.Rectangle)sender;"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            rect.MouseUp -\u003d ColorRectangle_MouseUp;"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            System.Windows.Media.Color color \u003d ((SolidColorBrush)rect.Fill).Color;"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color selectedColor \u003d Color.FromArgb(color.A, color.R, color.G, color.B);"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            dataSource.SelectedColor \u003d new HSLColor(selectedColor);"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Handles drag and drop functionality for favourtie color rectangles."
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void FavoriteRect_DragEnter(object sender, DragEventArgs e)"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (_isEyedropperMode)"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            System.Windows.Shapes.Rectangle rect \u003d (System.Windows.Shapes.Rectangle)sender;"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            System.Windows.Media.Color prevMediaColor \u003d ((SolidColorBrush)rect.Fill).Color;"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            _previousFillColor \u003d Color.FromArgb(prevMediaColor.A, prevMediaColor.R, prevMediaColor.G, prevMediaColor.B);"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (rect !\u003d null)"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                // If the DataObject contains string data, extract it."
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                if (e.Data.GetDataPresent(DataFormats.StringFormat))"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    string dataString \u003d (string)e.Data.GetData(DataFormats.StringFormat);"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    // If the string can be converted into a Color, "
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    // convert it and apply it to the rect."
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    ColorConverter converter \u003d new ColorConverter();"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    if (converter.IsValid(dataString))"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                        System.Windows.Media.Color mediaColor \u003d (System.Windows.Media.Color)ColorConverter.ConvertFromString(dataString);"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                        Color color \u003d Color.FromArgb(mediaColor.A, mediaColor.R, mediaColor.G, mediaColor.B);"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                        SetThemeColorRectangle(rect.Name, color);"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Handles drag and drop functionality for favourtie color rectangles."
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void FavoriteRect_DragOver(object sender, DragEventArgs e)"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (_isEyedropperMode)"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            e.Effects \u003d DragDropEffects.None;"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // If the DataObject contains string data, extract it."
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (e.Data.GetDataPresent(DataFormats.StringFormat))"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                string dataString \u003d (string)e.Data.GetData(DataFormats.StringFormat);"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                // If the string can be converted into a Brush, allow copying."
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                BrushConverter converter \u003d new BrushConverter();"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                if (converter.IsValid(dataString))"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    e.Effects \u003d DragDropEffects.Copy | DragDropEffects.Move;"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Handles drag and drop functionality for favourtie color rectangles."
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void FavoriteRect_DragLeave(object sender, DragEventArgs e)"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (_isEyedropperMode)"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            System.Windows.Shapes.Rectangle rect \u003d (System.Windows.Shapes.Rectangle)sender;"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (rect !\u003d null)"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                SetThemeColorRectangle(rect.Name, _previousFillColor);"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Handles drag and drop functionality for favourtie color rectangles."
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void FavoriteRect_Drop(object sender, DragEventArgs e)"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (_isEyedropperMode)"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            System.Windows.Shapes.Rectangle rect \u003d (System.Windows.Shapes.Rectangle)sender;"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (rect !\u003d null)"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                // If the DataObject contains string data, extract it."
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                if (e.Data.GetDataPresent(DataFormats.StringFormat))"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    string dataString \u003d (string)e.Data.GetData(DataFormats.StringFormat);"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    // If the string can be converted into a Color, "
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    // convert it and apply it to the rect."
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    ColorConverter converter \u003d new ColorConverter();"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    if (converter.IsValid(dataString))"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                        System.Windows.Media.Color mediaColor \u003d (System.Windows.Media.Color)ColorConverter.ConvertFromString(dataString);"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                        Color color \u003d Color.FromArgb(mediaColor.A, mediaColor.R, mediaColor.G, mediaColor.B);"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                        SetThemeColorRectangle(rect.Name, color);"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #region Eye Dropper Event Handlers"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Gets the mouse position and pixel color value every tick of the timer."
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void Timer1_Tick(object sender, EventArgs e)"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            timer1Ticks++;"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            System.Drawing.Point mousePos \u003d System.Windows.Forms.Control.MousePosition;"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            IntPtr deviceContext \u003d PPExtraEventHelper.Native.GetDC(IntPtr.Zero);"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color pickedColor \u003d System.Drawing.ColorTranslator.FromWin32(PPExtraEventHelper.Native.GetPixel(deviceContext, mousePos.X, mousePos.Y));"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // If button has not been held long enough to register as a drag, then don\u0027t pick a color."
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (timer1Ticks \u003c CLICK_THRESHOLD)"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (_eyedropperMode \u003d\u003d MODE.MAIN)"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                ColorMainColorRect(pickedColor);"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                _currentSelectedColor \u003d pickedColor;"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            else"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                ColorSelectedShapesWithColor(pickedColor, _eyedropperMode);"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Handles the end of eye dropper mode."
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        void LeftMouseButtonUpEventHandler()"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PPExtraEventHelper.PPMouse.LeftButtonUp -\u003d LeftMouseButtonUpEventHandler;"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            magnifier.Hide();"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            eyeDropperTimer.Stop();"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // Only change the actual datasource selectedColor at the end of eyedropping."
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (_eyedropperMode \u003d\u003d MODE.MAIN)"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                selectedColorRectangle.Opacity \u003d 1;"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                if (timer1Ticks \u003e CLICK_THRESHOLD)"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    dataSource.SelectedColor \u003d _currentSelectedColor;"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            _isEyedropperMode \u003d false;"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            _eyedropperMode \u003d MODE.NONE;"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Mouse.OverrideCursor \u003d null;"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Mouse.Capture(null);"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (timer1Ticks \u003c CLICK_THRESHOLD)"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                MessageBox.Show(\"To use this button, click and drag to desired color.\", ColorsLabText.ErrorDialogTitle);"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void EyeDropperButton_PreviewMouseDown(object sender, MouseButtonEventArgs e)"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            CaptureMouse();"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            SetEyedropperMode(((Button)sender).Name);"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            BeginEyedropping();"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            this.GetApplication().StartNewUndoEntry();"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #region Favourite Colors Button Handlers"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Saves the current theme panel as a custom theme file."
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void SaveColorButton_Click(object sender, EventArgs e)"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            System.Windows.Forms.SaveFileDialog saveFileDialog \u003d new System.Windows.Forms.SaveFileDialog();"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            saveFileDialog.DefaultExt \u003d \"thm\";"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            saveFileDialog.Filter \u003d \"PPTLabsThemes|*.thm\";"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            saveFileDialog.Title \u003d \"Save Theme\";"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            "
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            System.Windows.Forms.DialogResult result \u003d saveFileDialog.ShowDialog();"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (result \u003d\u003d System.Windows.Forms.DialogResult.OK \u0026\u0026"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                dataSource.SaveThemeColorsInFile(saveFileDialog.FileName))"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                SaveDefaultColorPaneThemeColors();"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Loads a theme panel from an existing theme file."
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void LoadColorButton_Click(object sender, EventArgs e)"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            System.Windows.Forms.OpenFileDialog openFileDialog \u003d new System.Windows.Forms.OpenFileDialog();"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            openFileDialog.DefaultExt \u003d \"thm\";"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            openFileDialog.Filter \u003d \"PPTLabsTheme|*.thm\";"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            openFileDialog.Title \u003d \"Load Theme\";"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            System.Windows.Forms.DialogResult result \u003d openFileDialog.ShowDialog();"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (result \u003d\u003d System.Windows.Forms.DialogResult.OK \u0026\u0026"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                dataSource.LoadThemeColorsFromFile(openFileDialog.FileName))"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                SaveDefaultColorPaneThemeColors();"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Reset to the last loaded theme panel."
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void ReloadColorButton_Click(object sender, EventArgs e)"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            ResetThemePanel();"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Clears the current theme panel, i.e. set all favourite colors to white."
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void ClearColorButton_Click(object sender, EventArgs e)"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            EmptyThemePanel();"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #region Context Menu Handlers"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void Color_Information_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            MenuItem menuItem \u003d sender as MenuItem;"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (menuItem \u003d\u003d null)"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            System.Windows.Shapes.Rectangle rect \u003d ((ContextMenu)(menuItem.Parent)).PlacementTarget as System.Windows.Shapes.Rectangle;"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            System.Windows.Media.Color color \u003d ((SolidColorBrush)rect.Fill).Color;"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color selectedColor \u003d Color.FromArgb(color.A, color.R, color.G, color.B);"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            ColorInformationDialog dialog \u003d new ColorInformationDialog(selectedColor);"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            dialog.Show();"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void Set_Main_Color_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            MenuItem menuItem \u003d sender as MenuItem;"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (menuItem \u003d\u003d null)"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            System.Windows.Shapes.Rectangle rect \u003d ((ContextMenu)(menuItem.Parent)).PlacementTarget as System.Windows.Shapes.Rectangle;"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            System.Windows.Media.Color color \u003d ((SolidColorBrush)rect.Fill).Color;"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color selectedColor \u003d Color.FromArgb(color.A, color.R, color.G, color.B);"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            dataSource.SelectedColor \u003d new HSLColor(selectedColor);"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void Add_Favorite_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            MenuItem menuItem \u003d sender as MenuItem;"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (menuItem \u003d\u003d null)"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            System.Windows.Shapes.Rectangle rect \u003d ((ContextMenu)(menuItem.Parent)).PlacementTarget as System.Windows.Shapes.Rectangle;"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            System.Windows.Media.Color color \u003d ((SolidColorBrush)rect.Fill).Color;"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            HSLColor clickedColor \u003d Color.FromArgb(color.A, color.R, color.G, color.B);"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            dataSource.AddColorToFavorites(clickedColor);"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #region Helpers"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #region Apply Colors (Text, Fill, Line)"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Color selected shapes with selected color, in the given mode."
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"selectedColor\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"colorMode\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void ColorSelectedShapesWithColor(HSLColor selectedColor, MODE colorMode)"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            SelectShapes();"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (_selectedShapes !\u003d null"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                \u0026\u0026 this.GetCurrentSelection().Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionShapes)"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                foreach (PowerPoint.Shape s in _selectedShapes)"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    try"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                        Byte r \u003d ((Color)selectedColor).R;"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                        Byte g \u003d ((Color)selectedColor).G;"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                        Byte b \u003d ((Color)selectedColor).B;"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                        int rgb \u003d (b \u003c\u003c 16) | (g \u003c\u003c 8) | (r);"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                        ColorShapeWithColor(s, rgb, colorMode);"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    catch (Exception)"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                        RecreateCorruptedShape(s);"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (_selectedText !\u003d null"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                \u0026\u0026 this.GetCurrentSelection().Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionText)"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                try"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    Byte r \u003d ((Color)selectedColor).R;"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    Byte g \u003d ((Color)selectedColor).G;"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    Byte b \u003d ((Color)selectedColor).B;"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    int rgb \u003d (b \u003c\u003c 16) | (g \u003c\u003c 8) | (r);"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    ColorTextWithColor(_selectedText, rgb, colorMode);"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                catch (Exception)"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Retrieves selected shapes or text."
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void SelectShapes()"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            try"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                PowerPoint.Selection selection \u003d this.GetCurrentSelection();"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                if (selection \u003d\u003d null)"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                if (selection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionShapes \u0026\u0026"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    selection.HasChildShapeRange)"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    _selectedShapes \u003d selection.ChildShapeRange;"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                else if (selection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionShapes)"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    _selectedShapes \u003d selection.ShapeRange;"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                else if (selection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionText)"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    _selectedText \u003d selection.TextRange;"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                else"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    _selectedShapes \u003d null;"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    _selectedText \u003d null;"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            catch (Exception)"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                _selectedShapes \u003d null;"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                _selectedText \u003d null;"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Colors specified text range with given color."
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"text\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"rgb\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"mode\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void ColorTextWithColor(PowerPoint.TextRange text, int rgb, MODE mode)"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PowerPoint.TextFrame frame \u003d text.Parent as PowerPoint.TextFrame;"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PowerPoint.Shape selectedShape \u003d frame.Parent as PowerPoint.Shape;"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (mode !\u003d MODE.NONE)"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                ColorShapeWithColor(selectedShape, rgb, mode);"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Colors specified shape with color, in the given mode."
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"s\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"rgb\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"mode\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void ColorShapeWithColor(PowerPoint.Shape s, int rgb, MODE mode)"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            switch (mode)"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case MODE.FILL:"
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    s.Fill.ForeColor.RGB \u003d rgb;"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case MODE.LINE:"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    s.Line.ForeColor.RGB \u003d rgb;"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    s.Line.Visible \u003d MsoTriState.msoTrue;"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case MODE.FONT:"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    ColorShapeFontWithColor(s, rgb);"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Colors specified shape with color."
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"s\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"rgb\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void ColorShapeFontWithColor(PowerPoint.Shape s, int rgb)"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (s.HasTextFrame \u003d\u003d MsoTriState.msoTrue)"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                PowerPoint.Selection selection \u003d this.GetCurrentSelection();"
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                if (selection \u003d\u003d null)"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                if (selection.ShapeRange.HasTextFrame \u003d\u003d MsoTriState.msoTrue)"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    if (selection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionText)"
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                        PowerPoint.TextRange selectedText \u003d selection.TextRange.TrimText();"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                        if (selectedText.Text !\u003d \"\" \u0026\u0026 selectedText !\u003d null)"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                            selectedText.Font.Color.RGB \u003d rgb;"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                        else"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                            s.TextFrame.TextRange.TrimText().Font.Color.RGB \u003d rgb;"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    else if (selection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionShapes)"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                        s.TextFrame.TextRange.TrimText().Font.Color.RGB \u003d rgb;"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Recreates any specified corrupted shape."
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"s\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void RecreateCorruptedShape(PowerPoint.Shape s)"
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            s.Copy();"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PowerPoint.Shape newShape \u003d this.GetCurrentSlide().Shapes.Paste()[1];"
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            newShape.Select();"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            newShape.Name \u003d s.Name;"
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            newShape.Left \u003d s.Left;"
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            newShape.Top \u003d s.Top;"
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            while (newShape.ZOrderPosition \u003e s.ZOrderPosition)"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                newShape.ZOrder(Microsoft.Office.Core.MsoZOrderCmd.msoSendBackward);"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            s.Delete();"
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Retrieves color of the selected shape(s)."
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"mode\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003creturns\u003e\u003c/returns\u003e"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private Color GetSelectedShapeColor(MODE mode)"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            SelectShapes();"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (_selectedShapes \u003d\u003d null \u0026\u0026 _selectedText \u003d\u003d null)"
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return dataSource.SelectedColor;"
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (this.GetCurrentSelection().Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionShapes)"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return GetSelectedShapeColor(_selectedShapes, mode);"
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (this.GetCurrentSelection().Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionText)"
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                PowerPoint.TextFrame frame \u003d _selectedText.Parent as PowerPoint.TextFrame;"
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                PowerPoint.Shape selectedShape \u003d frame.Parent as PowerPoint.Shape;"
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return GetSelectedShapeColor(selectedShape, mode);"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return dataSource.SelectedColor;"
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Retrieves color of the selected shapeRange, "
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// returning Black if shapeRange contains shapes with different colors."
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"selectedShapes\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"mode\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003creturns\u003e\u003c/returns\u003e"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private Color GetSelectedShapeColor(PowerPoint.ShapeRange selectedShapes, MODE mode)"
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color colorToReturn \u003d Color.Empty;"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            foreach (object selectedShape in selectedShapes)"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                Color color \u003d GetSelectedShapeColor(selectedShape as PowerPoint.Shape, mode);"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                if (colorToReturn.Equals(Color.Empty))"
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    colorToReturn \u003d color;"
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                else if (!colorToReturn.Equals(color))"
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    return Color.Black;"
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return colorToReturn;"
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Retrieves color of the selected shape."
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"selectedShape\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"mode\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003creturns\u003e\u003c/returns\u003e"
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private Color GetSelectedShapeColor(PowerPoint.Shape selectedShape, MODE mode)"
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            switch (mode)"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case MODE.FILL:"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    return Color.FromArgb(ColorHelper.ReverseRGBToArgb(selectedShape.Fill.ForeColor.RGB));"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case MODE.LINE:"
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    return Color.FromArgb(ColorHelper.ReverseRGBToArgb(selectedShape.Line.ForeColor.RGB));"
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case MODE.FONT:"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    if (selectedShape.HasTextFrame \u003d\u003d MsoTriState.msoTrue"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                        \u0026\u0026 this.GetApplication().ActiveWindow.Selection.ShapeRange.HasTextFrame"
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                        \u003d\u003d MsoTriState.msoTrue)"
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                        if (this.GetCurrentSelection().Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionText)"
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                            PowerPoint.TextRange selectedText"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                                \u003d this.GetApplication().ActiveWindow.Selection.TextRange.TrimText();"
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                            if (selectedText !\u003d null \u0026\u0026 selectedText.Text !\u003d \"\")"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                            {"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                                return Color.FromArgb(ColorHelper.ReverseRGBToArgb(selectedText.Font.Color.RGB));"
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                            else"
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                            {"
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                                return"
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                                Color.FromArgb("
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                                    ColorHelper.ReverseRGBToArgb(selectedShape.TextFrame.TextRange.Font.Color.RGB));"
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                        else if (this.GetCurrentSelection().Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionShapes)"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                            return"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                                Color.FromArgb("
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                                    ColorHelper.ReverseRGBToArgb(selectedShape.TextFrame.TextRange.Font.Color.RGB));"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return dataSource.SelectedColor;"
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #region Eye Dropper"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Sets the eyedropper mode given the name of the rectangle."
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"rectName\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void SetEyedropperMode(string rectName)"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            switch (rectName)"
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case \"applyTextColorButton\":"
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    _eyedropperMode \u003d MODE.FONT;"
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case \"applyLineColorButton\":"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    _eyedropperMode \u003d MODE.LINE;"
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case \"applyFillColorButton\":"
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    _eyedropperMode \u003d MODE.FILL;"
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case \"eyeDropperButton\":"
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    _eyedropperMode \u003d MODE.MAIN;"
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    _eyedropperMode \u003d MODE.NONE;"
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Show magnifier and begin eye dropping."
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void BeginEyedropping()"
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            _isEyedropperMode \u003d true;"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            timer1Ticks \u003d 0;"
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            eyeDropperTimer.Start();"
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Mouse.OverrideCursor \u003d eyeDropperCursor;"
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PPExtraEventHelper.PPMouse.LeftButtonUp +\u003d LeftMouseButtonUpEventHandler;"
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            magnifier.Show();"
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (_eyedropperMode \u003d\u003d MODE.MAIN)"
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                eyeDropperPreviewRectangle.Fill \u003d selectedColorRectangle.Fill;"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                selectedColorRectangle.Opacity \u003d 0;"
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void ColorMainColorRect(Color color)"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            eyeDropperPreviewRectangle.Fill \u003d "
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                new SolidColorBrush(System.Windows.Media.Color.FromArgb(color.A, color.R, color.G, color.B));"
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #region Favourite Colors"
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Load default panel from default file, or clear the panel if unsuccessful."
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void LoadDefaultThemePanel()"
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            bool isSuccessful \u003d dataSource.LoadThemeColorsFromFile(_defaultThemeColorDirectory);"
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (!isSuccessful)"
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                EmptyThemePanel();"
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Reset panel to the last loaded theme panel."
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void ResetThemePanel()"
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            try"
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                LoadDefaultThemePanel();"
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                ErrorDialogBox.ShowDialog(\"Theme Panel Reset Failed\", e.Message, e);"
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Clear the panel to all white color."
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void EmptyThemePanel()"
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            try"
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                if (this.GetCurrentSlide() !\u003d null)"
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    dataSource.ThemeColorOne \u003d Color.White;"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    dataSource.ThemeColorTwo \u003d Color.White;"
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    dataSource.ThemeColorThree \u003d Color.White;"
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    dataSource.ThemeColorFour \u003d Color.White;"
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    dataSource.ThemeColorFive \u003d Color.White;"
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    dataSource.ThemeColorSix \u003d Color.White;"
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    dataSource.ThemeColorSeven \u003d Color.White;"
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    dataSource.ThemeColorEight \u003d Color.White;"
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    dataSource.ThemeColorNine \u003d Color.White;"
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    dataSource.ThemeColorTen \u003d Color.White;"
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    dataSource.ThemeColorEleven \u003d Color.White;"
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    dataSource.ThemeColorTwelve \u003d Color.White;"
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    dataSource.ThemeColorThirteen \u003d Color.White;"
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                ErrorDialogBox.ShowDialog(\"Theme Panel Reset Failed\", e.Message, e);"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Set the color rect given the name of the rect, and the color to set."
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"name\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003cparam name\u003d\"color\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void SetThemeColorRectangle(string name, Color color)"
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            switch (name)"
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case \"favoriteColorRectangleOne\":"
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                dataSource.ThemeColorOne \u003d color;"
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case \"favoriteColorRectangleTwo\":"
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                dataSource.ThemeColorTwo \u003d color;"
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case \"favoriteColorRectangleThree\":"
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                dataSource.ThemeColorThree \u003d color;"
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case \"favoriteColorRectangleFour\":"
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                dataSource.ThemeColorFour \u003d color;"
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case \"favoriteColorRectangleFive\":"
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                dataSource.ThemeColorFive \u003d color;"
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case \"favoriteColorRectangleSix\":"
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                dataSource.ThemeColorSix \u003d color;"
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case \"favoriteColorRectangleSeven\":"
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                dataSource.ThemeColorSeven \u003d color;"
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case \"favoriteColorRectangleEight\":"
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                dataSource.ThemeColorEight \u003d color;"
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case \"favoriteColorRectangleNine\":"
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                dataSource.ThemeColorNine \u003d color;"
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case \"favoriteColorRectangleTen\":"
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                dataSource.ThemeColorTen \u003d color;"
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case \"favoriteColorRectangleEleven\":"
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                dataSource.ThemeColorEleven \u003d color;"
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case \"favoriteColorRectangleTwelve\":"
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                dataSource.ThemeColorTwelve \u003d color;"
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case \"favoriteColorRectangleThirteen\":"
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                dataSource.ThemeColorThirteen \u003d color;"
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// Save current panel as default theme color."
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void SaveDefaultColorPaneThemeColors()"
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            dataSource.SaveThemeColorsInFile(_defaultThemeColorDirectory);"
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "blewjy"
        },
        "content": "       "
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 1264
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ColorsLab/HSLColor.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ColorsLab"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    /// taken from: http://richnewman.wordpress.com/about/code-listings-and-diagrams/hslcolor-class/"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    [Serializable]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public class HSLColor"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        // Private data members below are on scale 0-1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        // They are scaled for use externally based on scale"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        private double hue \u003d 1.0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        private double saturation \u003d 1.0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        private double luminosity \u003d 1.0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        private const double scale \u003d 240.0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        public double Hue"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            get { return hue * scale; }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            set { hue \u003d CheckRange(value / scale); }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        public double Saturation"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            get { return saturation * scale; }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            set { saturation \u003d CheckRange(value / scale); }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        public double Luminosity"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            get { return luminosity * scale; }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            set { luminosity \u003d CheckRange(value / scale); }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        public override string ToString()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            return String.Format(\"H: {0:#0.##} S: {1:#0.##} L: {2:#0.##}\", Hue, Saturation, Luminosity);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        public string ToRGBString()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            Color color \u003d (Color)this;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            return String.Format(\"R: {0:#0.##} G: {1:#0.##} B: {2:#0.##}\", color.R, color.G, color.B);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public string ToHexString()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color color \u003d (Color)this;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return ColorHelper.ColorToHexString(color);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SetRGB(int red, int green, int blue)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            HSLColor hslColor \u003d (HSLColor)Color.FromArgb(red, green, blue);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            this.hue \u003d hslColor.hue;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            this.saturation \u003d hslColor.saturation;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            this.luminosity \u003d hslColor.luminosity;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        public HSLColor() { }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        public HSLColor(Color color)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            SetRGB(color.R, color.G, color.B);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        public HSLColor(int red, int green, int blue)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            SetRGB(red, green, blue);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        public HSLColor(double hue, double saturation, double luminosity)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            this.Hue \u003d hue;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            this.Saturation \u003d saturation;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            this.Luminosity \u003d luminosity;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Casts to/from System.Drawing.Color"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        public static implicit operator Color(HSLColor hslColor)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            double r \u003d 0, g \u003d 0, b \u003d 0;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            if (hslColor !\u003d null \u0026\u0026 hslColor.luminosity !\u003d 0)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                if (hslColor.saturation \u003d\u003d 0)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                    r \u003d g \u003d b \u003d hslColor.luminosity;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                    double temp2 \u003d GetTemp2(hslColor);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                    double temp1 \u003d 2.0 * hslColor.luminosity - temp2;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                    r \u003d GetColorComponent(temp1, temp2, hslColor.hue + 1.0 / 3.0);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                    g \u003d GetColorComponent(temp1, temp2, hslColor.hue);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                    b \u003d GetColorComponent(temp1, temp2, hslColor.hue - 1.0 / 3.0);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            return Color.FromArgb((int)Math.Round(255 * r), (int)Math.Round(255 * g), (int)Math.Round(255 * b));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        private static double GetColorComponent(double temp1, double temp2, double temp3)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            temp3 \u003d MoveIntoRange(temp3);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            if (temp3 \u003c 1.0 / 6.0)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                return temp1 + (temp2 - temp1) * 6.0 * temp3;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (temp3 \u003c 0.5)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                return temp2;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (temp3 \u003c 2.0 / 3.0)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                return temp1 + ((temp2 - temp1) * ((2.0 / 3.0) - temp3) * 6.0);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                return temp1;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        private static double MoveIntoRange(double temp3)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            if (temp3 \u003c 0.0)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                temp3 +\u003d 1.0;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (temp3 \u003e 1.0)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                temp3 -\u003d 1.0;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            return temp3;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        private static double GetTemp2(HSLColor hslColor)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            double temp2;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            if (hslColor.luminosity \u003c 0.5)  //\u003c\u003d??"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                temp2 \u003d hslColor.luminosity * (1.0 + hslColor.saturation);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "                temp2 \u003d hslColor.luminosity + hslColor.saturation - (hslColor.luminosity * hslColor.saturation);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            return temp2;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        public static implicit operator HSLColor(Color color)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "            HSLColor hslColor \u003d new HSLColor();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            hslColor.hue \u003d color.GetHue() / 360.0; // we store hue as 0-1 as opposed to 0-360 "
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "            hslColor.luminosity \u003d color.GetBrightness();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            hslColor.saturation \u003d color.GetSaturation();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            return hslColor;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        private double CheckRange(double value)"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            if (value \u003c 0.0)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "                value \u003d 0.0;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (value \u003e 1.0)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "                value \u003d 1.0;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            return value;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 7,
      "-": 165
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ColorsLab/Magnifier.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Runtime.InteropServices;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Interop;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PPExtraEventHelper;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ColorsLab"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /// Interaction logic for Magnifier.xaml"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class Magnifier : Window"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        private MagnifierOverlay magnifierOverlay;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        private MagnificationControlHost magnificationControl;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        private System.Windows.Forms.Timer timer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        private IntPtr hwndMag;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool isMagInitialized;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        private List\u003cIntPtr\u003e magFilteredWindows;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        private float magnificationFactor;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        private Size actualHalfSize;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        private Size sourceRectSize;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        private Size sourceRectHalfSize;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        public Magnifier(float magnificationFactor)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            timer \u003d new System.Windows.Forms.Timer();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            timer.Interval \u003d 100;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            timer.Tick +\u003d new EventHandler(Timer_Tick);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            magnifierOverlay \u003d new MagnifierOverlay();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            magnifierOverlay.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            magnifierOverlay.Loaded +\u003d MagnifierOverlay_Loaded;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            isMagInitialized \u003d false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            this.magnificationFactor \u003d magnificationFactor;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Magnification HwndHost Win32 Interop"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        private class MagnificationControlHost : HwndHost"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            internal const string WC_MAGNIFIER \u003d \"Magnifier\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            private IntPtr hwndHost;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            private int hostWidth, hostHeight;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            public MagnificationControlHost(double width, double height)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                hostWidth \u003d (int)(width * Utils.GraphicsUtil.GetDpiScale());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                hostHeight \u003d (int)(height * Utils.GraphicsUtil.GetDpiScale());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            protected override HandleRef BuildWindowCore(HandleRef hwndParent)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                hwndHost \u003d IntPtr.Zero;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                // Make window click-through"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                int extendedStyle \u003d Native.GetWindowLong(hwndParent.Handle, (int)Native.WindowLong.GWL_EXSTYLE);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                Native.SetWindowLong(hwndParent.Handle, (int)Native.WindowLong.GWL_EXSTYLE,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                                    extendedStyle |"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                                    (int)Native.ExtendedWindowStyles.WS_EX_TRANSPARENT |"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                                    (int)Native.ExtendedWindowStyles.WS_EX_LAYERED |"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                                    (int)Native.ExtendedWindowStyles.WS_EX_TOOLWINDOW);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                Native.SetWindowLong(hwndParent.Handle, (int)Native.WindowLong.GWL_STYLE, (int)Native.WindowStyles.WS_POPUP);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                // Must be transparent for Magnification to work"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                Native.SetLayeredWindowAttributes(hwndParent.Handle, 0, 255, Native.LayeredWindowAttributeFlags.LWA_ALPHA);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                // Create Magnification control host"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                hwndHost \u003d Native.CreateWindowEx(0, WC_MAGNIFIER, \"MagnificationControl\","
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                                                (int)Native.WindowStyles.WS_CHILD |"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                                                (int)Native.WindowStyles.WS_VISIBLE |"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                                                (int)Native.MagnifierStyle.MS_CLIPAROUNDCURSOR,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                                                0, 0,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                                                hostWidth, hostHeight,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                                                hwndParent.Handle,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                                                IntPtr.Zero, "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                                                IntPtr.Zero, "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                                                0);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                // Clip window into ellipse"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                IntPtr ellipseRegion \u003d Native.CreateRoundRectRgn(0, 0,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                                                hostWidth, hostHeight,"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                                                hostWidth, hostHeight);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                Native.SetWindowRgn(hwndHost, ellipseRegion, true);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                return new HandleRef(this, hwndHost);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            protected override IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                handled \u003d false;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                return IntPtr.Zero;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            protected override void DestroyWindowCore(HandleRef hwnd)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                Native.DestroyWindow(hwnd.Handle);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            public IntPtr HwndControl"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                get { return hwndHost; }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            public int HostWidth"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                get { return hostWidth; }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            public int HostHeight"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                get { return hostHeight; }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Public API"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        public new void Show()"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isMagInitialized)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateMagnifier();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                timer.Start();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "                Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                magnifierOverlay.Visibility \u003d Visibility;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        public new void Hide()"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            timer.Stop();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            magnifierOverlay.Visibility \u003d Visibility;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Handled events"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        private void Window_Loaded(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                // Magnification is disabled on some environments"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "                if (IsMagnificationApiAvailable())"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "                    isMagInitialized \u003d Native.MagInitialize();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "                if (isMagInitialized)"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "                    SetupMagnifier();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception exception)"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "                // Windows XP does not support Magnifier"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.LogException(exception, \"Magnifier_Window_Loaded\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "                TeardownMagnifier();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "                isMagInitialized \u003d false;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            finally"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "                // Hide after initializing UI"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "                Hide();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        private void MagnifierOverlay_Loaded(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "            IntPtr overlayHwnd \u003d new WindowInteropHelper(magnifierOverlay).Handle;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "            AddMagnifierFilteredWindow(overlayHwnd);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        private void Window_Unloaded(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            TeardownMagnifier();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        private void Timer_Tick(object sender, EventArgs e)"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateMagnifier();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Magnifier methods"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SetupMagnifier()"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            magFilteredWindows \u003d new List\u003cIntPtr\u003e();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "            magnificationControl \u003d new MagnificationControlHost(Width, Height);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "            MagnificationHostElement.Child \u003d magnificationControl;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            hwndMag \u003d magnificationControl.HwndControl;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "            if (hwndMag \u003d\u003d IntPtr.Zero)"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "                string errorMsg \u003d \"Create MagnifierWindow failed. Insufficient heap or handle table entries.\";"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new OutOfMemoryException(errorMsg);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            // Calculate dimensions once"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "            actualHalfSize.Width \u003d ActualWidth / 2;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "            actualHalfSize.Height \u003d ActualHeight / 2;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "            sourceRectSize.Width \u003d magnificationControl.HostWidth / magnificationFactor;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            sourceRectSize.Height \u003d magnificationControl.HostHeight / magnificationFactor;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "            sourceRectHalfSize.Width \u003d sourceRectSize.Width / 2;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "            sourceRectHalfSize.Height \u003d sourceRectSize.Height / 2;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "            // Set the magnification factor"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "            Native.MAGTRANSFORM magTransformMatrix \u003d new Native.MAGTRANSFORM();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "            magTransformMatrix.m00 \u003d magnificationFactor;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "            magTransformMatrix.m11 \u003d magnificationFactor;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "            magTransformMatrix.m22 \u003d 1.0f;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "            Native.MagSetWindowTransform(hwndMag, ref magTransformMatrix);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AddMagnifierFilteredWindow(IntPtr handle)"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "            magFilteredWindows.Add(handle);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "            Native.MagSetWindowFilterList(hwndMag, (int)Native.MagnifierFilterMode.MW_FILTERMODE_EXCLUDE,"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "                                          magFilteredWindows.Count, magFilteredWindows.ToArray());"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TeardownMagnifier()"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isMagInitialized)"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "                Native.MagUninitialize();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateMagnifier()"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Drawing.Point mousePosition \u003d System.Windows.Forms.Control.MousePosition;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "            // Set the source rectangle for the magnification"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "            Native.RECT sourceRect \u003d new Native.RECT();"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "            sourceRect.Left \u003d mousePosition.X - (int)sourceRectHalfSize.Width;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "            sourceRect.Top \u003d mousePosition.Y - (int)sourceRectHalfSize.Height;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "            sourceRect.Right \u003d sourceRect.Left + (int)sourceRectSize.Width;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "            sourceRect.Bottom \u003d sourceRect.Top + (int)sourceRectSize.Height;"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "            Native.MagSetWindowSource(hwndMag, sourceRect);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "            // Force magnification redraw"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "            Native.InvalidateRect(hwndMag, IntPtr.Zero, true);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "            // Update position, WPF units are affected by monitor\u0027s DPI"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "            Left \u003d (mousePosition.X / Utils.GraphicsUtil.GetDpiScale()) - actualHalfSize.Width;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "            Top \u003d (mousePosition.Y / Utils.GraphicsUtil.GetDpiScale()) - actualHalfSize.Height;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "            magnifierOverlay.Left \u003d Left;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "            magnifierOverlay.Top \u003d Top;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Helper methods"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool IsMagnificationApiAvailable()"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "            // Magnification API has a bug with window handle sign-extension"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "            // on Windows 7 64-bit with 32-bit applications (i.e. Win7 WoW64)"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "            if (IsOSWindows7() \u0026\u0026"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "                Environment.Is64BitOperatingSystem \u0026\u0026"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "                !Environment.Is64BitProcess)"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool IsOSWindows7()"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "            // Major and minor version"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "            return Environment.OSVersion.Platform \u003d\u003d PlatformID.Win32NT \u0026\u0026"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "                    Environment.OSVersion.Version.Major \u003d\u003d 6 \u0026\u0026"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "                    Environment.OSVersion.Version.Minor \u003d\u003d 1;"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 1,
      "-": 295
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ColorsLab/MagnifierOverlay.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System.Windows;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Interop;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using PPExtraEventHelper;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.ColorsLab"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    /// Interaction logic for MagnifierOverlay.xaml"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class MagnifierOverlay : Window"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        public MagnifierOverlay()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        private void MagnifierOverlay_Loaded(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            WindowInteropHelper wndHelper \u003d new WindowInteropHelper(this);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            int extendedStyle \u003d Native.GetWindowLong(wndHelper.Handle, (int)Native.WindowLong.GWL_EXSTYLE);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            Native.SetWindowLong(wndHelper.Handle, (int)Native.WindowLong.GWL_EXSTYLE,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                                extendedStyle | (int)Native.ExtendedWindowStyles.WS_EX_TOOLWINDOW);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        private void MagnifierOverlay_Deactivated(object sender, System.EventArgs e)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            PPMouse.StopAllActions();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 1,
      "-": 33
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/Converters/ColorPane/HSLColorToHex.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Data;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ColorsLab;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.Converters.ColorPane"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    [ValueConversion(typeof(HSLColor), typeof(string))]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    class HSLColorToHex : IValueConverter"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public static HSLColorToHex Instance \u003d new HSLColorToHex();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        public object Convert(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color color \u003d (HSLColor)value;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return ColorHelper.ColorToHexString(color);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        public object ConvertBack(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new NotImplementedException();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 8,
      "-": 17
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/Converters/ColorPane/HSLColorToRGBColor.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Data;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ColorsLab;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.Converters.ColorPane"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    class HSLColorToRGBColor : IValueConverter"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        public object Convert(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "            Color selectedColor \u003d (HSLColor)value;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "            return Color.FromArgb(255,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                    selectedColor.R,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "                    selectedColor.G,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                    selectedColor.B);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        public object ConvertBack(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new NotImplementedException();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 2,
      "-": 23
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/Converters/ColorPane/SelectedColorShiftByAngle.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Windows.Data;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ColorsLab;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.Converters.ColorPane"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    [ValueConversion(typeof(HSLColor), typeof(string))]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    class SelectedColorShiftByAngle : IValueConverter"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public static SelectedColorShiftByAngle Instance \u003d new SelectedColorShiftByAngle();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public object Convert(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (value \u003d\u003d null)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                Color color \u003d (HSLColor)value;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return ColorHelper.ColorToHexString(color);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            HSLColor selectedColor \u003d (HSLColor)value;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color convertedColor \u003d ColorHelper.GetColorShiftedByAngle(selectedColor, float.Parse((string)parameter));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return ColorHelper.ColorToHexString(convertedColor);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public object ConvertBack(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            throw new NotImplementedException();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 31
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/Converters/ColorPane/SelectedColorShiftLuminosityByFactor.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Windows.Data;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ColorsLab;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.Converters.ColorPane"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    [ValueConversion(typeof(HSLColor), typeof(string))]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    class SelectedColorShiftLuminosityByFactor : IValueConverter"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public static SelectedColorShiftLuminosityByFactor Instance \u003d new SelectedColorShiftLuminosityByFactor();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public object Convert(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (value \u003d\u003d null)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                Color color \u003d (HSLColor)value;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return ColorHelper.ColorToHexString(color);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            HSLColor selectedColor \u003d (HSLColor)value;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            float shiftFactor \u003d float.Parse((string)parameter);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color convertedColor \u003d new HSLColor(selectedColor.Hue, selectedColor.Saturation, shiftFactor * 240);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return ColorHelper.ColorToHexString(convertedColor);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public object ConvertBack(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            throw new NotImplementedException();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 32
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/Converters/ColorPane/SelectedColorShiftSaturationByFactor.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Windows.Data;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ColorsLab;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.Converters.ColorPane"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    [ValueConversion(typeof(HSLColor), typeof(string))]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    class SelectedColorShiftSaturationByFactor : IValueConverter"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public static SelectedColorShiftSaturationByFactor Instance \u003d new SelectedColorShiftSaturationByFactor();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public object Convert(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (value \u003d\u003d null)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                Color color \u003d (HSLColor)value;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return ColorHelper.ColorToHexString(color);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            HSLColor selectedColor \u003d (HSLColor)value;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            float shiftFactor \u003d float.Parse((string)parameter);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color convertedColor \u003d new HSLColor(selectedColor.Hue, shiftFactor * 240, selectedColor.Luminosity);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return ColorHelper.ColorToHexString(convertedColor);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public object ConvertBack(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            throw new NotImplementedException();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 32
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/Converters/ColorPane/SelectedColorToBrightnessValue.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Data;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ColorsLab;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.Converters.ColorPane"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    [ValueConversion(typeof(HSLColor), typeof(int))]"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    class SelectedColorToBrightnessValue : IValueConverter"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public static SelectedColorToBrightnessValue Instance \u003d new SelectedColorToBrightnessValue();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        public object Convert(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (value \u003d\u003d null)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            HSLColor selectedColor \u003d (HSLColor)value;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            return (int)(selectedColor.Luminosity);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        public object ConvertBack(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new NotImplementedException();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 11,
      "-": 19
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/Converters/ColorPane/SelectedColorToSaturationValue.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Data;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ColorsLab;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.Converters.ColorPane"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    [ValueConversion(typeof(HSLColor), typeof(int))]"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    class SelectedColorToSaturationValue : IValueConverter"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public static SelectedColorToSaturationValue Instance \u003d new SelectedColorToSaturationValue();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        public object Convert(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (value \u003d\u003d null)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            HSLColor selectedColor \u003d (HSLColor)value;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            return (int)(selectedColor.Saturation);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        public object ConvertBack(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new NotImplementedException();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 11,
      "-": 19
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/DataSources/ColorDataSource.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.ComponentModel;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.IO;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Runtime.Serialization.Formatters.Binary;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ColorsLab;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.DataSources"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    class ColorDataSource : INotifyPropertyChanged"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool isFillColorSelectedValue;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool IsFillColorSelected"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                return isFillColorSelectedValue;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                if (value !\u003d this.isFillColorSelectedValue)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.isFillColorSelectedValue \u003d value;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                    OnPropertyChanged(\"isFillColorSelected\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool isFontColorSelectedValue;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool IsFontColorSelected"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                return isFontColorSelectedValue;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                if (value !\u003d this.isFontColorSelectedValue)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.isFontColorSelectedValue \u003d value;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                    OnPropertyChanged(\"isFontColorSelected\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool isLineColorSelectedValue;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool IsLineColorSelected"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                return isLineColorSelectedValue;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                if (value !\u003d this.isLineColorSelectedValue)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.isLineColorSelectedValue \u003d value;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                    OnPropertyChanged(\"isLineColorSelected\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        private HSLColor selectedColorValue;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        public HSLColor SelectedColor"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        {       "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                return selectedColorValue;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                if (value !\u003d this.selectedColorValue)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.selectedColorValue \u003d value;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                    OnPropertyChanged(\"selectedColor\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        private HSLColor themeColorOneValue;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        public HSLColor ThemeColorOne"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                return themeColorOneValue;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                if (value !\u003d this.themeColorOneValue)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.themeColorOneValue \u003d value;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                    OnPropertyChanged(\"themeColorOne\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        private HSLColor themeColorTwoValue;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        public HSLColor ThemeColorTwo"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                return themeColorTwoValue;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                if (value !\u003d this.themeColorTwoValue)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.themeColorTwoValue \u003d value;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                    OnPropertyChanged(\"themeColorTwo\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        private HSLColor themeColorThreeValue;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        public HSLColor ThemeColorThree"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                return themeColorThreeValue;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "                if (value !\u003d this.themeColorThreeValue)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.themeColorThreeValue \u003d value;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                    OnPropertyChanged(\"themeColorThree\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        private HSLColor themeColorFourValue;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        public HSLColor ThemeColorFour"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                return themeColorFourValue;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "                if (value !\u003d this.themeColorFourValue)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.themeColorFourValue \u003d value;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                    OnPropertyChanged(\"themeColorFour\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        private HSLColor themeColorFiveValue;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        public HSLColor ThemeColorFive"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "                return themeColorFiveValue;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "                if (value !\u003d this.themeColorFiveValue)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.themeColorFiveValue \u003d value;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "                    OnPropertyChanged(\"themeColorFive\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        private HSLColor themeColorSixValue;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        public HSLColor ThemeColorSix"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "                return themeColorSixValue;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "                if (value !\u003d this.themeColorSixValue)"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.themeColorSixValue \u003d value;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "                    OnPropertyChanged(\"themeColorSix\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        private HSLColor themeColorSevenValue;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        public HSLColor ThemeColorSeven"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "                return themeColorSevenValue;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "                if (value !\u003d this.themeColorSevenValue)"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.themeColorSevenValue \u003d value;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "                    OnPropertyChanged(\"themeColorSeven\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        private HSLColor themeColorEightValue;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        public HSLColor ThemeColorEight"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "                return themeColorEightValue;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "                if (value !\u003d this.themeColorEightValue)"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.themeColorEightValue \u003d value;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "                    OnPropertyChanged(\"themeColorEight\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        private HSLColor themeColorNineValue;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        public HSLColor ThemeColorNine"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "                return themeColorNineValue;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "                if (value !\u003d this.themeColorNineValue)"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.themeColorNineValue \u003d value;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "                    OnPropertyChanged(\"themeColorNine\");"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        private HSLColor themeColorTenValue;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        public HSLColor ThemeColorTen"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "                return themeColorTenValue;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "                if (value !\u003d this.themeColorTenValue)"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.themeColorTenValue \u003d value;"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "                    OnPropertyChanged(\"themeColorTen\");"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private HSLColor themeColorElevenValue;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public HSLColor ThemeColorEleven"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            get"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return themeColorElevenValue;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            set"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                if (value !\u003d this.themeColorElevenValue)"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    this.themeColorElevenValue \u003d value;"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    OnPropertyChanged(\"themeColorEleven\");"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private HSLColor themeColorTwelveValue;"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public HSLColor ThemeColorTwelve"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            get"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return themeColorTwelveValue;"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            set"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                if (value !\u003d this.themeColorTwelveValue)"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    this.themeColorTwelveValue \u003d value;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    OnPropertyChanged(\"themeColorTwelve\");"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private HSLColor themeColorThirteenValue;"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public HSLColor ThemeColorThirteen"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            get"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return themeColorThirteenValue;"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            set"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                if (value !\u003d this.themeColorThirteenValue)"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    this.themeColorThirteenValue \u003d value;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    OnPropertyChanged(\"themeColorThirteen\");"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool SaveThemeColorsInFile(String filePath)"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "                List\u003cHSLColor\u003e themeColors \u003d new List\u003cHSLColor\u003e();"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "                themeColors.Add(this.ThemeColorOne);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "                themeColors.Add(this.ThemeColorTwo);"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "                themeColors.Add(this.ThemeColorThree);"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "                themeColors.Add(this.ThemeColorFour);"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "                themeColors.Add(this.ThemeColorFive);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "                themeColors.Add(this.ThemeColorSix);"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "                themeColors.Add(this.ThemeColorSeven);"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "                themeColors.Add(this.ThemeColorEight);"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "                themeColors.Add(this.ThemeColorNine);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "                themeColors.Add(this.ThemeColorTen);"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                themeColors.Add(this.ThemeColorEleven);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                themeColors.Add(this.ThemeColorTwelve);"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                themeColors.Add(this.ThemeColorThirteen);"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "                Stream fileStream \u003d File.Create(filePath);"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "                BinaryFormatter serializer \u003d new BinaryFormatter();"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "                serializer.Serialize(fileStream, themeColors);"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "                fileStream.Close();"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception)"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool LoadThemeColorsFromFile(string filePath)"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "                Stream openFileStream \u003d File.OpenRead(filePath);"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "                BinaryFormatter deserializer \u003d new BinaryFormatter();"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "                List\u003cHSLColor\u003e themeColors \u003d (List\u003cHSLColor\u003e)deserializer.Deserialize(openFileStream);"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "                openFileStream.Close();"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "                this.ThemeColorOne \u003d themeColors[0];"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "                this.ThemeColorTwo \u003d themeColors[1];"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "                this.ThemeColorThree \u003d themeColors[2];"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "                this.ThemeColorFour \u003d themeColors[3];"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "                this.ThemeColorFive \u003d themeColors[4];"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "                this.ThemeColorSix \u003d themeColors[5];"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "                this.ThemeColorSeven \u003d themeColors[6];"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "                this.ThemeColorEight \u003d themeColors[7];"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "                this.ThemeColorNine \u003d themeColors[8];"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "                this.ThemeColorTen \u003d themeColors[9];"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                this.ThemeColorEleven \u003d themeColors[10];"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                this.ThemeColorTwelve \u003d themeColors[11];"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                this.ThemeColorThirteen \u003d themeColors[12];"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception)"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public void AddColorToFavorites(HSLColor color)"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            ThemeColorThirteen \u003d ThemeColorTwelve;"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            ThemeColorTwelve \u003d ThemeColorEleven;"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            ThemeColorEleven \u003d ThemeColorTen;"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            ThemeColorTen \u003d ThemeColorNine;"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            ThemeColorNine \u003d ThemeColorEight;"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            ThemeColorEight \u003d ThemeColorSeven;"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            ThemeColorSeven \u003d ThemeColorSix;"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            ThemeColorSix \u003d ThemeColorFive;"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            ThemeColorFive \u003d ThemeColorFour;"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            ThemeColorFour \u003d ThemeColorThree;"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            ThemeColorThree \u003d ThemeColorTwo;"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            ThemeColorTwo \u003d ThemeColorOne;"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            ThemeColorOne \u003d color;"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "        public ColorDataSource()"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "        public event PropertyChangedEventHandler PropertyChanged;"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "        // This method is called by the Set accessor of each property. "
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "        // The CallerMemberName attribute that is applied to the optional propertyName "
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "        // parameter causes the property name of the caller to be substituted as an argument. "
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "        // Create the OnPropertyChanged method to raise the event "
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "        protected void OnPropertyChanged(string name)"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "            PropertyChangedEventHandler handler \u003d PropertyChanged;"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "            if (handler !\u003d null)"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "                handler(this, new PropertyChangedEventArgs(name));"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 79,
      "-": 337
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/FunctionalTestInterface.Impl/Controller/ColorsLabController.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Windows.Controls.Primitives;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Windows.Input;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ColorsLab;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using TestInterface;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using Button \u003d System.Windows.Controls.Button;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using Point \u003d System.Windows.Point;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using Rectangle \u003d System.Windows.Shapes.Rectangle;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.FunctionalTestInterface.Impl.Controller"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    [Serializable]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    class ColorsLabController : MarshalByRefObject, IColorsLabController"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        private static IColorsLabController _instance \u003d new ColorsLabController();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        public static IColorsLabController Instance { get { return _instance; } }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private ColorsLabPane _pane;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        private ColorsLabController() {}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        public void OpenPane()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                FunctionalTestExtensions.GetRibbonUi().OnAction("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                    new RibbonControl(ColorsLabText.PaneTag));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                _pane \u003d FunctionalTestExtensions.GetTaskPane("
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    typeof(ColorsLabPane)).Control as ColorsLabPane;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            }));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public Point GetApplyTextButtonLocation()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Point point \u003d new Point(0, 0);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    point \u003d _pane.ColorsLabPaneWPF1.GetApplyTextButtonLocationAsPoint();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return point;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public Point GetApplyLineButtonLocation()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Point point \u003d new Point(0, 0);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    point \u003d _pane.ColorsLabPaneWPF1.GetApplyLineButtonLocationAsPoint();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return point;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public Point GetApplyFillButtonLocation()"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Point point \u003d new Point(0, 0);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    point \u003d _pane.ColorsLabPaneWPF1.GetApplyFillButtonLocationAsPoint();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return point;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public Point GetMainColorRectangleLocation()"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Point point \u003d new Point(0, 0);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    point \u003d _pane.ColorsLabPaneWPF1.GetMainColorRectangleLocationAsPoint();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return point;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public Point GetEyeDropperButtonLocation()"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Point point \u003d new Point(0, 0);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    point \u003d _pane.ColorsLabPaneWPF1.GetEyeDropperButtonLocationAsPoint();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return point;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public void SlideBrightnessSlider(int value)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    _pane.ColorsLabPaneWPF1.brightnessSlider.Value \u003d value;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public void SlideSaturationSlider(int value)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    _pane.ColorsLabPaneWPF1.saturationSlider.Value \u003d value;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public void ClickMonochromeRect(int index)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            System.Windows.Shapes.Rectangle rect;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            switch (index)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case 1:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    rect \u003d _pane.ColorsLabPaneWPF1.monochromaticRectangleOne;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case 2:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    rect \u003d _pane.ColorsLabPaneWPF1.monochromaticRectangleTwo;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case 3:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    rect \u003d _pane.ColorsLabPaneWPF1.monochromaticRectangleThree;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case 4:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    rect \u003d _pane.ColorsLabPaneWPF1.monochromaticRectangleFour;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case 5:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    rect \u003d _pane.ColorsLabPaneWPF1.monochromaticRectangleFive;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case 6:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    rect \u003d _pane.ColorsLabPaneWPF1.monochromaticRectangleSix;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case 7:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    rect \u003d _pane.ColorsLabPaneWPF1.monochromaticRectangleSeven;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    rect \u003d null;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (_pane !\u003d null \u0026\u0026 rect !\u003d null)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    LeftClickOnRectangle(rect);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    "
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public void ClickAnalogousRect(int index)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            System.Windows.Shapes.Rectangle rect;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            switch (index)"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case 1:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                rect \u003d _pane.ColorsLabPaneWPF1.analogousLowerRectangle;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case 2:"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                rect \u003d _pane.ColorsLabPaneWPF1.analogousMiddleRectangle;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case 3:"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                rect \u003d _pane.ColorsLabPaneWPF1.analogousHigherRectangle;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                rect \u003d null;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (_pane !\u003d null \u0026\u0026 rect !\u003d null)"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    LeftClickOnRectangle(rect);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public void ClickComplementaryRect(int index)"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            System.Windows.Shapes.Rectangle rect;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            switch (index)"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case 1:"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                rect \u003d _pane.ColorsLabPaneWPF1.complementaryLowerRectangle;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case 2:"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                rect \u003d _pane.ColorsLabPaneWPF1.complementaryMiddleRectangle;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case 3:"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                rect \u003d _pane.ColorsLabPaneWPF1.complementaryHigherRectangle;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                rect \u003d null;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (_pane !\u003d null \u0026\u0026 rect !\u003d null)"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    LeftClickOnRectangle(rect);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public void ClickTriadicRect(int index)"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            System.Windows.Shapes.Rectangle rect;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            switch (index)"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case 1:"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                rect \u003d _pane.ColorsLabPaneWPF1.triadicLowerRectangle;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case 2:"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                rect \u003d _pane.ColorsLabPaneWPF1.triadicMiddleRectangle;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case 3:"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                rect \u003d _pane.ColorsLabPaneWPF1.triadicHigherRectangle;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                rect \u003d null;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (_pane !\u003d null \u0026\u0026 rect !\u003d null)"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    LeftClickOnRectangle(rect);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public void ClickTetradicRect(int index)"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            System.Windows.Shapes.Rectangle rect;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            switch (index)"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case 1:"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                rect \u003d _pane.ColorsLabPaneWPF1.tetradicOneRectangle;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case 2:"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                rect \u003d _pane.ColorsLabPaneWPF1.tetradicTwoRectangle;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case 3:"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                rect \u003d _pane.ColorsLabPaneWPF1.tetradicThreeRectangle;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                case 4:"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                rect \u003d _pane.ColorsLabPaneWPF1.tetradicFourRectangle;"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                rect \u003d null;"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (_pane !\u003d null \u0026\u0026 rect !\u003d null)"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    LeftClickOnRectangle(rect);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public void LoadFavoriteColors(string filePath)"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    _pane.ColorsLabPaneWPF1.LoadFavoriteColorsFromPath(filePath);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public void ResetFavoriteColors()"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    _pane.ColorsLabPaneWPF1.reloadColorButton.RaiseEvent(new RoutedEventArgs(ButtonBase.ClickEvent));"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public void ClearFavoriteColors()"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    _pane.ColorsLabPaneWPF1.clearColorButton.RaiseEvent(new RoutedEventArgs(ButtonBase.ClickEvent));"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public List\u003cColor\u003e GetCurrentFavoritePanel()"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            List\u003cColor\u003e list \u003d null;"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    list \u003d _pane.ColorsLabPaneWPF1.GetFavoriteColorsPanelAsList();"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void LeftClickOnRectangle(Rectangle rect)"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            rect.RaiseEvent("
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                new MouseButtonEventArgs(Mouse.PrimaryDevice, Environment.TickCount, MouseButton.Left)"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    RoutedEvent \u003d UIElement.MouseDownEvent"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                });"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            rect.RaiseEvent("
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                new MouseButtonEventArgs(Mouse.PrimaryDevice, Environment.TickCount, MouseButton.Left)"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    RoutedEvent \u003d UIElement.MouseUpEvent"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                });"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 259,
      "-": 92
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/FunctionalTestInterface.Impl/Controller/ShapesLabController.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Linq;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ShapesLab;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using TestInterface;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.FunctionalTestInterface.Impl.Controller"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    [Serializable]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    class ShapesLabController : MarshalByRefObject, IShapesLabController"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        private static IShapesLabController _instance \u003d new ShapesLabController();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        public static IShapesLabController Instance { get { return _instance; } }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        private CustomShapePane _pane;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        private ShapesLabController() {}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        public void OpenPane()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                FunctionalTestExtensions.GetRibbonUi().OnAction("
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                    new RibbonControl(ShapesLabText.PaneTag));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                _pane \u003d FunctionalTestExtensions.GetTaskPane("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                    typeof(CustomShapePane)).Control as CustomShapePane;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            }));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SaveSelectedShapes()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            UIThreadExecutor.Execute(() \u003d\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                FunctionalTestExtensions.GetRibbonUi().OnAction("
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                    new RibbonControl(\"AddShape\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        public IShapesLabLabeledThumbnail GetLabeledThumbnail(string labelName)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                return _pane.GetLabeledThumbnail(labelName);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ImportLibrary(string pathToLibrary)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                _pane.ImportLibrary(pathToLibrary);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ImportShape(string pathToShape)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                _pane.ImportShape(pathToShape);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        public List\u003cISlideData\u003e FetchShapeGalleryPresentationData()"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                List\u003cISlideData\u003e slideData \u003d _pane.GetShapeGallery()"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                    .Slides.Cast\u003cSlide\u003e().Select(SlideData.FromSlide).ToList();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                return slideData;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ClickAddShapeButton()"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null \u0026\u0026 _pane.GetAddShapeButton() !\u003d null)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                // Perform clicking of button on its own UI thread"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                UIThreadExecutor.Execute(() \u003d\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                    _pane.GetAddShapeButton().PerformClick();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                });"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        public bool GetAddShapeButtonStatus()"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            return _pane.GetAddShapeButton().Enabled;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 5,
      "-": 96
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/FunctionalTestInterface.Impl/Controller/SyncLabController.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Controls;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Controls.Primitives;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.SyncLab.Views;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using TestInterface;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.FunctionalTestInterface.Impl.Controller"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    [Serializable]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    class SyncLabController : MarshalByRefObject, ISyncLabController"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        private static ISyncLabController _instance \u003d new SyncLabController();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        public static ISyncLabController Instance { get { return _instance; } }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        private SyncPane _pane;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        private SyncLabController() { }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        public void OpenPane()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                FunctionalTestExtensions.GetRibbonUi().OnAction("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                    new RibbonControl(SyncLabText.PaneTag));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                _pane \u003d FunctionalTestExtensions.GetTaskPane("
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                    typeof(SyncPane)).Control as SyncPane;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            }));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        public void Copy()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                UIThreadExecutor.Execute(() \u003d\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                    _pane.SyncPaneWPF1.copyButton.RaiseEvent(new RoutedEventArgs(ButtonBase.ClickEvent));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                });"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        public void Sync(int index)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                UIThreadExecutor.Execute(() \u003d\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                    ((SyncFormatPaneItem)_pane.SyncPaneWPF1.formatListBox.Items[index])"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                            .pasteButton.RaiseEvent(new RoutedEventArgs(ButtonBase.ClickEvent));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                });"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        public void DialogSelectItem(int categoryIndex, int itemIndex)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null \u0026\u0026 _pane.SyncPaneWPF1.Dialog !\u003d null)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                UIThreadExecutor.Execute(() \u003d\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                    ((_pane.SyncPaneWPF1.Dialog.treeView.Items[categoryIndex] as TreeViewItem)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                        .Items[itemIndex] as SyncFormatDialogItem).IsChecked \u003d true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                });"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        public void DialogClickOk()"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null \u0026\u0026 _pane.SyncPaneWPF1.Dialog !\u003d null)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                UIThreadExecutor.Execute(() \u003d\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                    _pane.SyncPaneWPF1.Dialog.okButton.RaiseEvent(new RoutedEventArgs(ButtonBase.ClickEvent));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                });"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        public bool GetCopyButtonEnabledStatus()"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            bool result \u003d false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            UIThreadExecutor.Execute(() \u003d\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                result \u003d _pane.SyncPaneWPF1.GetCopyButtonEnabledStatus();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            });"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 9,
      "-": 84
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/FunctionalTestInterface.Impl/Controller/TimerLabController.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Controls.Primitives;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TimerLab;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using TestInterface;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.FunctionalTestInterface.Impl.Controller"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    [Serializable]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    class TimerLabController : MarshalByRefObject, ITimerLabController"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        private static ITimerLabController _instance \u003d new TimerLabController();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        public static ITimerLabController Instance { get { return _instance; } }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        private TimerPane _pane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        private TimerLabController() {}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        public void OpenPane()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                FunctionalTestExtensions.GetRibbonUi().OnAction("
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                    new RibbonControl(TimerLabText.PaneTag));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                _pane \u003d FunctionalTestExtensions.GetTaskPane("
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                    typeof(TimerPane)).Control as TimerPane;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            }));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ClickCreateButton()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                UIThreadExecutor.Execute(() \u003d\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                    _pane.TimerPaneWPF.createButton.RaiseEvent(new RoutedEventArgs(ButtonBase.ClickEvent));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                });"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SetDurationTextBoxValue(double value)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                UIThreadExecutor.Execute(() \u003d\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                    _pane.TimerPaneWPF.DurationTextBox.Value \u003d value;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                    _pane.TimerPaneWPF.DurationTextBox.Focusable \u003d true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                    _pane.TimerPaneWPF.DurationTextBox.Focus();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                });"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public void SetCountdownCheckBoxState(bool isChecked)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                UIThreadExecutor.Execute(() \u003d\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    _pane.TimerPaneWPF.CountdownCheckBox.IsChecked \u003d isChecked;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    _pane.TimerPaneWPF.CountdownCheckBox.Focus();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                });"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SetHeightTextBoxValue(int value)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                UIThreadExecutor.Execute(() \u003d\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                    _pane.TimerPaneWPF.HeightTextBox.Focus();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                    _pane.TimerPaneWPF.HeightTextBox.Text \u003d \"\" + value;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                    // set focus to the other text box to trigger the change"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                    _pane.TimerPaneWPF.WidthTextBox.Focus();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                });"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SetWidthTextBoxValue(int value)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                UIThreadExecutor.Execute(() \u003d\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                    _pane.TimerPaneWPF.WidthTextBox.Focus();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                    _pane.TimerPaneWPF.WidthTextBox.Text \u003d \"\" + value;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                    // set focus to the other text box to trigger the change"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                    _pane.TimerPaneWPF.HeightTextBox.Focus();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                });"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SetHeightSliderValue(int value)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                UIThreadExecutor.Execute(() \u003d\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                    _pane.TimerPaneWPF.HeightSlider.Value \u003d value;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                });"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SetWidthSliderValue(int value)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                UIThreadExecutor.Execute(() \u003d\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                    _pane.TimerPaneWPF.WidthSlider.Value \u003d value;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                });"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 12,
      "-": 109
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/PictureSlidesLab/PictureSlidesLab.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "﻿namespace PowerPointLabs.PictureSlidesLab"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    internal static class PictureSlidesLab"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        public static bool IsPictureSlidesEnabled { get; set; } \u003d false;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 7
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/PictureSlidesLab/Views/PictureSlidesLabWindow.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.ObjectModel;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Specialized;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.ComponentModel;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Linq;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Controls;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Controls.Primitives;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Forms;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Media;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Media.Animation;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Threading;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "using MahApps.Metro.Controls.Dialogs;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.PictureSlidesLab.Model;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.PictureSlidesLab.Service;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.PictureSlidesLab.Util;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.PictureSlidesLab.ViewModel;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.PictureSlidesLab.Views.Interface;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.WPF.Observable;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "using ButtonBase \u003d System.Windows.Controls.Primitives.ButtonBase;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "using Clipboard \u003d System.Windows.Forms.Clipboard;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "using DragEventArgs \u003d System.Windows.DragEventArgs;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "using Forms \u003d System.Windows.Forms;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "using KeyEventArgs \u003d System.Windows.Input.KeyEventArgs;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "using ListBox \u003d System.Windows.Controls.ListBox;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "using MessageBox \u003d System.Windows.MessageBox;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "using Point \u003d System.Windows.Point;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.PictureSlidesLab.Views"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    /// Interaction logic for Picture Slides Lab"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class PictureSlidesLabWindow : IPictureSlidesLabWindowView"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        # region Props \u0026 States"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        // UI model used to adjust image offset"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        public AdjustImageWindow CropWindow { get; set; }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        // UI model for drag and drop"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        public ObservableString DragAndDropInstructionText { get; set; }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        public QuickDropDialog QuickDropDialog { get; set; }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        // indicate to add-in that whether the window is open"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool IsOpen { get; set; }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool IsVariationsFlyoutOpen { get; private set; }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        // indicate that whether the window is closing"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool IsClosing { get; set; }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        // View model that contains the presenting logic"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        private PictureSlidesLabWindowViewModel ViewModel { set; get; }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        // used to indicate right-click item"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        private int _clickedImageSelectionItemIndex \u003d -1;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        // other UI control flags"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool _isAbleLoadingOnWindowActivate \u003d true;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool _isStylePreviewRegionInit;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        private int _lastSelectedSlideIndex \u003d -1;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool _isDisplayDefaultPicture;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool _isEnableUpdatePreview \u003d true;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        //Window size control constant"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        private const double StandardSystemWidth \u003d 1280.0;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        private const double StandardSystemHeight \u003d 800.0;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        private const double StandardWindowWidth \u003d 1200.0;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        private const double StandardWindowHeight \u003d 700.0;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        private const double StandardPrewienGridWidth \u003d 560.0;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        private const float StandardDpi \u003d 96f;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        # endregion"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Lifecycle"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        public PictureSlidesLabWindow()"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            // start loading process"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            EveryDayPhrase.Text \u003d new EveryDayPhraseService().GetEveryDayPhrase();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            PictureSlidesLabGridLoadingOverlay.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            IsOpen \u003d true;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            SettingsButtonIcon.Source \u003d ImageUtil.BitmapToImageSource(Properties.Resources.PslSettings);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            PictureAspectRefreshButtonIcon.Source \u003d ImageUtil.BitmapToImageSource(Properties.Resources.PslRefresh);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            InitSizePosition();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            Logger.Log(\"PSL begins\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            SetTimeout(Init, 800);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        private void Init()"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                InitUiExceptionHandling();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                InitViewModel();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                InitGotoSlideDialog();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                InitLoadStylesDialog();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                InitErrorTextDialog();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                InitDragAndDrop();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                // leave some time for data binding to finish"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                SetTimeout(InitStyleing, 50);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(\"PSL init done\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                ShowErrorMessageBox(PictureSlidesLabText.ErrorWhenInitialize, e);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.LogException(e, \"Init\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        private void InitSizePosition()"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Drawing.Size mSize \u003d SystemInformation.WorkingArea.Size;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            //Devices might have scale factors \u003e 100%"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            float scaleFactor \u003d GetScalingFactor();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            double systemHeight \u003d mSize.Height / scaleFactor;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            double systemWidth \u003d mSize.Width / scaleFactor;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            double windowWidth \u003d systemWidth / StandardSystemWidth;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            double windowHeight \u003d systemHeight / StandardSystemHeight;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            this.Window.Width \u003d StandardWindowWidth * windowWidth;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            this.Window.Height \u003d StandardWindowHeight * windowHeight;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            this.Window.StylesPreviewGrid.Width \u003d StandardPrewienGridWidth * windowWidth;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            this.Window.Left \u003d (systemWidth - this.Window.Width) / 2;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            this.Window.Top \u003d (systemHeight - this.Window.Height) / 2;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            this.Window.WindowStartupLocation \u003d WindowStartupLocation.Manual;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        private float GetScalingFactor()"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            Graphics graphics \u003d Graphics.FromHwnd(IntPtr.Zero);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            return graphics.DpiX / StandardDpi;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        private void InitUiExceptionHandling()"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "            AppDomain.CurrentDomain.UnhandledException +\u003d HandleUnhandledException;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            Dispatcher.UnhandledException +\u003d HandleUnhandledException;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "            Logger.Log(\"PSL init UI exception handling done\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        private void InitStyleing()"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(\"PSL init styling begins\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "                // load back the style from the current slide, or"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "                // select the first picture to preview styles"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "                bool isSuccessfullyLoaded \u003d LoadStyleAndImage(this.GetCurrentSlide(),"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "                    isLoadingWithDefaultPicture: false);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "                if (ViewModel.ImageSelectionList.Count \u003e\u003d 2 \u0026\u0026 !isSuccessfullyLoaded)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "                    Logger.Log(\"Not loaded back style and picture, going to select a picture.\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "                    // index-0 is choosePicture placeholder"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "                    ViewModel.ImageSelectionListSelectedId.Number \u003d 1;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(\"PSL init styling done\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "                ShowErrorMessageBox(PictureSlidesLabText.ErrorWhenInitialize, e);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.LogException(e, \"InitStyleing\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            finally"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "                // remove loading overlay"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "                PictureSlidesLabGridLoadingOverlay.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(\"PSL init loading screen collapsed\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        private void InitViewModel()"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            ViewModel \u003d new PictureSlidesLabWindowViewModel(this);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            ViewModel.StylesVariationList.CollectionChanged +\u003d StylesVariationList_OnCollectionChanged;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            ViewModel.StylesPreviewList.CollectionChanged +\u003d StylesPreviewList_OnCollectionChanged;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            ViewModel.ImageSelectionList.CollectionChanged +\u003d ImageSelectionList_OnCollectionChanged;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "            DataContext \u003d ViewModel;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            SettingsPane.DataContext \u003d ViewModel.Settings;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            SettingsPane.UpdateInsertCitationControlsVisibility();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdatePreviewInterfaceWhenImageListChange(ViewModel.ImageSelectionList);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            Logger.Log(\"PSL init ViewModel done\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        private void InitDragAndDrop()"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            DragAndDropInstructionText \u003d new ObservableString { Text \u003d PictureSlidesLabText.DragAndDropInstruction };"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "            DragAndDropInstructions.DataContext \u003d DragAndDropInstructionText;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            Logger.Log(\"PSL init drag and drop done\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        private void PictureSlidesLabWindow_OnClosing(object sender, CancelEventArgs e)"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "                IsOpen \u003d false;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "                IsClosing \u003d true;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "                if (QuickDropDialog !\u003d null)"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "                    QuickDropDialog.Close();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "                    QuickDropDialog \u003d null;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "                ViewModel.CleanUp();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(\"PSL closed\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception expt)"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.LogException(expt, \"PictureSlidesLabWindow_OnClosing\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        # endregion"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "        # region Common UI Events \u0026 Interactions"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ImageSelectionList_OnCollectionChanged(object sender, NotifyCollectionChangedEventArgs e)"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdatePreviewInterfaceWhenImageListChange(sender as Collection\u003cImageItem\u003e);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "        private void StylesVariationList_OnCollectionChanged(object sender, NotifyCollectionChangedEventArgs e)"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateVariationInterface(sender as Collection\u003cImageItem\u003e);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "        private void StylesPreviewList_OnCollectionChanged(object sender, NotifyCollectionChangedEventArgs e)"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdatePreviewInterfaceWhenPreviewListChange(sender as Collection\u003cImageItem\u003e);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Drag and Drop"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        private void PictureSlidesLabWindow_OnDragLeave(object sender, DragEventArgs args)"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "            PictureSlidesLabGridOverlay.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        private void PictureSlidesLabWindow_OnDragEnter(object sender, DragEventArgs args)"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "            if (args.Data.GetDataPresent(\"FileDrop\")"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "                || args.Data.GetDataPresent(\"Text\"))"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(\"Drag enter\");"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "                PictureSlidesLabGridOverlay.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "                DisableLoadingStyleOnWindowActivate();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "                Activate();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "                EnableLoadingStyleOnWindowActivate();"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        private void PictureSlidesLabWindow_OnDrop(object sender, DragEventArgs args)"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "                if (args \u003d\u003d null)"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(\"Drop enter\");"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "                if (args.Data.GetDataPresent(\"FileDrop\"))"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "                    string[] filenames \u003d (args.Data.GetData(\"FileDrop\") as string[]);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (filenames \u003d\u003d null || filenames.Length \u003d\u003d 0)"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "                        return;"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "                    ViewModel.AddImageSelectionListItem(filenames,"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentSlide().GetNativeSlide(),"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentPresentation().SlideWidth,"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentPresentation().SlideHeight);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "                else if (args.Data.GetDataPresent(\"Text\"))"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "                    string imageUrl \u003d args.Data.GetData(\"Text\") as string;"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "                    ViewModel.AddImageSelectionListItem(imageUrl,"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentSlide().GetNativeSlide(),"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentPresentation().SlideWidth,"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentPresentation().SlideHeight);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.LogException(e, \"PictureSlidesLabWindow_OnDrop\");"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "            finally"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "                PictureSlidesLabGridOverlay.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Copy and Paste Picture"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "        private void MenuItemPastePictureHere_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "            HandlePastedPicture();"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        private void PictureSlidesLabWindow_OnKeyDown(object sender, KeyEventArgs e)"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "            if (e.Key \u003d\u003d Key.V"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 Keyboard.Modifiers \u003d\u003d ModifierKeys.Control)"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "                HandlePastedPicture();"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "        /// set isUsingWinformMsgBox to true when it requires a msgbox out of"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "        /// the main window of PSL"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"isUsingWinformMsgBox\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "        private void HandlePastedPicture(bool isUsingWinformMsgBox \u003d false)"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "                System.Drawing.Image pastedPicture \u003d Clipboard.GetImage();"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "                StringCollection pastedFiles \u003d Clipboard.GetFileDropList();"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "                if (pastedPicture \u003d\u003d null \u0026\u0026"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "                    (pastedFiles \u003d\u003d null || pastedFiles.Count \u003d\u003d 0))"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (isUsingWinformMsgBox)"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "                        MessageBox.Show(PictureSlidesLabText.InfoPasteNothing, \"PowerPointLabs\");"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "                    else"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "                        ShowInfoMessageBox(PictureSlidesLabText.InfoPasteNothing);"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "                    Logger.Log(\"Nothing to paste\");"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "                if (pastedPicture !\u003d null)"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "                    Logger.Log(\"Pasted enter\");"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "                    string pastedPictureFile \u003d StoragePath.GetPath(\"pastedImg-\""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                + DateTime.Now.GetHashCode() + \"-\""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                + Guid.NewGuid().ToString().Substring(0, 7));"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "                    pastedPicture.Save(pastedPictureFile);"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "                    ViewModel.AddImageSelectionListItem(new[] {pastedPictureFile},"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentSlide().GetNativeSlide(),"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentPresentation().SlideWidth,"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentPresentation().SlideHeight);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "                    // examine whether it\u0027s thumbnail picture"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (pastedPicture.Width \u003c\u003d 400"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u0026\u0026 pastedPicture.Height \u003c\u003d 400)"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "                        if (isUsingWinformMsgBox)"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "                            MessageBox.Show(PictureSlidesLabText.InfoPasteThumbnail, \"PowerPointLabs\");"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "                        else"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "                            ShowInfoMessageBox(PictureSlidesLabText.InfoPasteThumbnail);"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "                else if (pastedFiles !\u003d null \u0026\u0026 pastedFiles.Count \u003e 0)"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "                    ViewModel.AddImageSelectionListItem(pastedFiles.Cast\u003cstring\u003e().ToArray(),"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentSlide().GetNativeSlide(),"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentPresentation().SlideWidth,"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentPresentation().SlideHeight);"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.LogException(e, \"HandlePastedPicture\");"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "        private void PictureSlidesLabGridLoadingOverlay_OnPreviewMouseLeftButtonUp(object sender, MouseButtonEventArgs e)"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "            PictureSlidesLabGridLoadingOverlay.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Show QuickDrop dialog when PictureSlidesLab window is deactivated"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "        private void PictureSlidesLabWindow_OnDeactivated(object sender, EventArgs e)"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "                if (IsDisposed)"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "                _lastSelectedSlideIndex \u003d this.GetCurrentSlide().Index;"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!IsDisposed"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 (CropWindow \u003d\u003d null || !CropWindow.IsOpen))"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (QuickDropDialog \u003d\u003d null)"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "                        QuickDropDialog \u003d new QuickDropDialog(this);"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "                        QuickDropDialog.DropHandler +\u003d PictureSlidesLabWindow_OnDrop;"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "                        QuickDropDialog.PasteHandler +\u003d () \u003d\u003e { HandlePastedPicture(isUsingWinformMsgBox: true); };"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "                        QuickDropDialog.ShowQuickDropDialog();"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "                        Logger.Log(\"PSL Quick Drop Dialog begins\");"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "                    else if (!QuickDropDialog.IsOpen \u0026\u0026 !QuickDropDialog.IsDisposed)"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "                        QuickDropDialog.ShowQuickDropDialog();"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception expt)"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.LogException(expt, \"PictureSlidesLabWindow_OnDeactivated\");"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Show preview images when an image is selected in the ImageSelectionList"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ImageSelectionListBox_OnSelectionChanged(object sender, SelectionChangedEventArgs e)"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "            if (ImageSelectionListBox.SelectedValue !\u003d null)"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "                LeaveDefaultPictureMode();"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "            if (ImageSelectionListBox.SelectedIndex \u003d\u003d 0)"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "                // 0 is for Choose Pictures placeholder,"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "                // de-select it"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "                ImageSelectionListBox.SelectedIndex \u003d -1;"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "            ViewModel.UpdateSelectedPictureInPictureVariation();"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdatePreviewImages();"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "        private void StylesCustomizeButton_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomizeStyle("
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "                (ImageItem) ImageSelectionListBox.SelectedValue ?? CreateDefaultPictureItem());"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "        private void StylesPreviewApplyButton_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "            this.StartNewUndoEntry();"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "            ViewModel.ApplyStyleInPreviewStage("
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "                this.GetCurrentSlide().GetNativeSlide(),"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "                this.GetCurrentPresentation().SlideWidth,"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "                this.GetCurrentPresentation().SlideHeight);"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "            GC.Collect();"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Allow arrow keys to navigate the listbox items"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ListBox_OnKeyDown(object sender, KeyEventArgs e)"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "            ListBox listbox \u003d sender as ListBox;"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "            if (listbox \u003d\u003d null || listbox.Items.Count \u003c\u003d 0)"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "            switch (e.Key)"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "                case Key.Right:"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "                case Key.Down:"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (!listbox.Items.MoveCurrentToNext())"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "                        listbox.Items.MoveCurrentToLast();"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "                case Key.Left:"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "                case Key.Up:"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (!listbox.Items.MoveCurrentToPrevious())"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "                        listbox.Items.MoveCurrentToFirst();"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "            e.Handled \u003d true;"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Delete image by backspace/delete key"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ImageSelectionListBox_OnKeyDown(object sender, KeyEventArgs e)"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "            switch (e.Key)"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "                case Key.Delete:"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "                case Key.Back:"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "                    DeleteSelectedImage();"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "            ListBox_OnKeyDown(sender, e);"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Drag splitter to change grid width"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "        private void Splitter_OnDragDelta(object sender, DragDeltaEventArgs e)"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "            StylesPreviewGrid.Width \u003d StylesPreviewGrid.ActualWidth + e.HorizontalChange;"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Enable \u0026 disable Apply button for preview interface"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "        private void StylesPreivewListBox_OnSelectionChanged(object sender, SelectionChangedEventArgs e)"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdatePreviewStageControls();"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdatePreviewStageControls()"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "            if (StylesPreviewListBox.SelectedValue !\u003d null"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 IsDisplayDefaultPicture())"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "                StylesCustomizeButton.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "                StylesApplyButton.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (StylesPreviewListBox.SelectedValue !\u003d null"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "                     \u0026\u0026 ImageSelectionListBox.SelectedValue !\u003d null)"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "                StylesCustomizeButton.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "                StylesApplyButton.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "                StylesCustomizeButton.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "                StylesApplyButton.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Press ENTER button to apply"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "        private void StylesPreviewListBox_OnKeyUp(object sender, KeyEventArgs e)"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "            ListBox listbox \u003d sender as ListBox;"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "            if (listbox \u003d\u003d null || listbox.Items.Count \u003c\u003d 0)"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "            switch (e.Key)"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "                case Key.Enter:"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (StylesApplyButton.IsEnabled)"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "                        StylesApplyButton.RaiseEvent(new RoutedEventArgs(ButtonBase.ClickEvent));"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "        /// When window is re-activated, refresh the preview images and hide QuickDrop dialog"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "        private void PictureSlidesLabWindow_OnActivated(object sender, EventArgs e)"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "                // init last selected slide index"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "                if (_lastSelectedSlideIndex \u003d\u003d -1)"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "                    _lastSelectedSlideIndex \u003d this.GetCurrentSlide().Index;"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "                // hide quick drop dialog when main window activated"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "                if (QuickDropDialog !\u003d null \u0026\u0026 QuickDropDialog.IsOpen)"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "                    QuickDropDialog.HideQuickDropDialog();"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "                // when no current slide"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "                if (this.GetCurrentSlide() \u003d\u003d null)"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "                    Logger.Log(\"Current slide is null\");"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "                    GotoSlideButton.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "                    LoadStylesButton.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "                    ViewModel.StylesPreviewList.Clear();"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "                    ViewModel.StylesVariationList.Clear();"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "                // when allowed to do loading"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "                else if (_isStylePreviewRegionInit \u0026\u0026 _isAbleLoadingOnWindowActivate)"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "                    GotoSlideButton.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "                    LoadStylesButton.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "                    SetTimeout(() \u003d\u003e"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "                        // update preview images when slide no change"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "                        if (_lastSelectedSlideIndex \u003d\u003d this.GetCurrentSlide().Index)"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "                            UpdatePreviewImages();"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "                        // or load style and image if slide has been changed"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "                        else"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "                            LoadStyleAndImage(this.GetCurrentSlide());"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "                    }, 250);"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception expt)"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.LogException(expt, \"PictureSlidesLabWindow_OnActivated\");"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Obtain right-clicked listbox item and don\u0027t select any image"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ImageSelectionListBox_OnPreviewMouseDown(object sender, MouseButtonEventArgs e)"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "            ListBoxItem item \u003d ItemsControl.ContainerFromElement((ItemsControl) sender, (DependencyObject) e.OriginalSource) "
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "                as ListBoxItem;"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "            if (item \u003d\u003d null || item.Content \u003d\u003d null)"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "            if (e.RightButton \u003d\u003d MouseButtonState.Pressed)"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "                _clickedImageSelectionItemIndex \u003d -1;"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "                for (int i \u003d 0; i \u003c ImageSelectionListBox.Items.Count; i++)"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "                    ListBoxItem listBoxItem \u003d ImageSelectionListBox.ItemContainerGenerator.ContainerFromIndex(i) "
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "                        as ListBoxItem;"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (listBoxItem \u003d\u003d null)"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (IsMouseOverTarget(listBoxItem, e.GetPosition(listBoxItem)))"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "                        _clickedImageSelectionItemIndex \u003d i;"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": "                e.Handled \u003d true;"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (e.LeftButton \u003d\u003d MouseButtonState.Pressed)"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(\"begin import pictures\");"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "                ImageItem imageItem \u003d item.Content as ImageItem;"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "                if (imageItem !\u003d null"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 imageItem.ImageFile \u003d\u003d StoragePath.ChoosePicturesImgPath)"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "                    OpenFileDialog openFileDialog \u003d new OpenFileDialog"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "                        Multiselect \u003d true,"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "                        Filter \u003d @\"Image File|*.png;*.jpg;*.jpeg;*.bmp;*.gif;\""
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": "                    };"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "                    DisableLoadingStyleOnWindowActivate();"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (openFileDialog.ShowDialog() \u003d\u003d Forms.DialogResult.OK)"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "                        ViewModel.AddImageSelectionListItem(openFileDialog.FileNames,"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "                            this.GetCurrentSlide().GetNativeSlide(),"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": "                            this.GetCurrentPresentation().SlideWidth,"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "                            this.GetCurrentPresentation().SlideHeight);"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "                    EnableLoadingStyleOnWindowActivate();"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "                    e.Handled \u003d true;"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": "        private void MenuItemDeleteThisImage_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": "            DeleteImage();"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": "        private void MenuItemDeleteAllImages_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": "            ShowInfoMessageBox(PictureSlidesLabText.InfoDeleteAllImage, "
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageDialogStyle.AffirmativeAndNegative)"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "                .ContinueWith(task \u003d\u003e"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (task.Result \u003d\u003d MessageDialogResult.Affirmative)"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": "                        Dispatcher.BeginInvoke(new Action(DeleteAllImage));"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": "                });"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": "        private void MenuItemAdjustImage_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_clickedImageSelectionItemIndex \u003c 0"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "                || _clickedImageSelectionItemIndex \u003e ImageSelectionListBox.Items.Count)"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "            ImageItem selectedImage \u003d (ImageItem)ImageSelectionListBox.Items.GetItemAt(_clickedImageSelectionItemIndex);"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "            if (selectedImage \u003d\u003d null || selectedImage.ImageFile \u003d\u003d StoragePath.LoadingImgPath)"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": "            AdjustImageDimensions(selectedImage);"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "        private void MenuItemAdjustImage_OnClickFromPreviewListBox(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": "            if (ViewModel.IsInPictureVariation())"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "                ImageItem imageItem \u003d ViewModel.GetSelectedPictureInPictureVariation("
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "                    StylesVariationListBox.SelectedIndex);"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": "                if (imageItem.ImageFile \u003d\u003d StoragePath.NoPicturePlaceholderImgPath"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": "                    || imageItem.ImageFile \u003d\u003d StoragePath.LoadingImgPath)"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "                AdjustImageDimensions(imageItem);"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": "                ImageItem selectedImage \u003d (ImageItem)ImageSelectionListBox.SelectedItem;"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "                if (selectedImage \u003d\u003d null || selectedImage.ImageFile \u003d\u003d StoragePath.LoadingImgPath)"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "                AdjustImageDimensions(selectedImage);"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": "        private void MenuItemEditSource_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_clickedImageSelectionItemIndex \u003c 0"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": "                || _clickedImageSelectionItemIndex \u003e ImageSelectionListBox.Items.Count)"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": "            ImageItem selectedImage \u003d (ImageItem)ImageSelectionListBox.Items.GetItemAt(_clickedImageSelectionItemIndex);"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "            if (selectedImage \u003d\u003d null || selectedImage.ImageFile \u003d\u003d StoragePath.LoadingImgPath)"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": "            EditPictureSource(selectedImage);"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": "        private void MenuItemEditSource_OnClickFromPreviewListBox(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "            if (ViewModel.IsInPictureVariation())"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "                ImageItem imageItem \u003d ViewModel.GetSelectedPictureInPictureVariation("
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": "                    StylesVariationListBox.SelectedIndex);"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "                if (imageItem.ImageFile \u003d\u003d StoragePath.NoPicturePlaceholderImgPath"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "                    || imageItem.ImageFile \u003d\u003d StoragePath.LoadingImgPath)"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "                EditPictureSource(imageItem);"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": "                ImageItem selectedImage \u003d (ImageItem)ImageSelectionListBox.SelectedItem;"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "                if (selectedImage \u003d\u003d null || selectedImage.ImageFile \u003d\u003d StoragePath.LoadingImgPath)"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": "                EditPictureSource(selectedImage);"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Update controls states when selection changed in the variation stage"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": "        private void VariationListBox_OnSelectionChanged(object sender, SelectionChangedEventArgs e)"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "            if (ViewModel.IsInPictureVariation()"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "                     \u0026\u0026 StylesVariationListBox.SelectedIndex \u003e\u003d 0)"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "                ImageItem selectedImageItem \u003d"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": "                    ViewModel"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "                    .GetSelectedPictureInPictureVariation(StylesVariationListBox.SelectedIndex);"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": "                if (selectedImageItem.ImageFile \u003d\u003d StoragePath.NoPicturePlaceholderImgPath"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": "                    || selectedImageItem.ImageFile \u003d\u003d StoragePath.LoadingImgPath)"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": "                    StyleVariationApplyButton.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "                    StyleVariationApplyButton.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": "                ViewModel.UpdateStyleVariationStyleOptionsWhenSelectedItemChange();"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateVariationStageControls();"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (ImageSelectionListBox.SelectedValue !\u003d null"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 StylesVariationListBox.SelectedValue !\u003d null"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 StylesPreviewListBox.SelectedValue !\u003d null)"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": "                StyleVariationApplyButton.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": "                ViewModel.UpdateStyleVariationStyleOptionsWhenSelectedItemChange();"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateVariationStageControls();"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (IsDisplayDefaultPicture()"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": "                     \u0026\u0026 StylesVariationListBox.SelectedValue !\u003d null"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": "                     \u0026\u0026 StylesPreviewListBox.SelectedValue !\u003d null)"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": "                StyleVariationApplyButton.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "-"
        },
        "content": "                ViewModel.UpdateStyleVariationStyleOptionsWhenSelectedItemChange();"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateVariationStageControls();"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": "                StyleVariationApplyButton.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": "        /// step-by-step customization when user changes variant category"
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": "        private void VariantsComboBox_OnSelectionChanged(object sender, SelectionChangedEventArgs e)"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(\"Change aspect to \" + ViewModel.CurrentVariantCategory.Text);"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": "                ViewModel.UpdateStepByStepStylesVariationImages("
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": "                    (ImageItem) ImageSelectionListBox.SelectedValue ?? CreateDefaultPictureItem(),"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.GetCurrentSlide().GetNativeSlide(),"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.GetCurrentPresentation().SlideWidth,"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.GetCurrentPresentation().SlideHeight);"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception expt)"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": "                ShowErrorMessageBox(TextCollection.PictureSlidesLabText.ErrorFailedToLoadPreviewImages, expt);"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.LogException(expt, \"VariantsComboBox_OnSelectionChanged\");"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "-"
        },
        "content": "        private void StylesVariationApplyButton_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": "            this.StartNewUndoEntry();"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": "            ViewModel.ApplyStyleInVariationStage("
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": "                this.GetCurrentSlide().GetNativeSlide(),"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": "                this.GetCurrentPresentation().SlideWidth,"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": "                this.GetCurrentPresentation().SlideHeight);"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "-"
        },
        "content": "            GC.Collect();"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "-"
        },
        "content": "        private void VariationFlyoutBackButton_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "-"
        },
        "content": "            CloseVariationsFlyout();"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AddCitationSlideButton_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "-"
        },
        "content": "            Models.PowerPointPresentation presentation \u003d this.GetCurrentPresentation();"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "-"
        },
        "content": "            if (presentation.Slides.Any(PictureCitationSlide.IsCitationSlide))"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "-"
        },
        "content": "                Models.PowerPointSlide citationSlide \u003d presentation.Slides.Where(PictureCitationSlide.IsCitationSlide).First();"
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "-"
        },
        "content": "                ViewModel.AddPictureCitationSlide(citationSlide.GetNativeSlide(), presentation.Slides);"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "-"
        },
        "content": "            else // no citation slide yet, so create one"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "-"
        },
        "content": "                Slide slide \u003d presentation.Presentation.Slides.Add(presentation.SlideCount + 1, PpSlideLayout.ppLayoutText);"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": "                ViewModel.AddPictureCitationSlide(slide, presentation.Slides);"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "-"
        },
        "content": "            presentation.AddAckSlide();"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "-"
        },
        "content": "            ShowInfoMessageBox(PictureSlidesLabText.InfoAddPictureCitationSlide);"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "-"
        },
        "content": "        private void OpenSettingsButton_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "-"
        },
        "content": "            SettingsFlyoutControl.IsOpen \u003d true;"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SettingsFlyoutControl_OnIsOpenChanged(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!SettingsFlyoutControl.IsOpen)"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(\"Setting flyout is closed\");"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "-"
        },
        "content": "                SetTimeout(() \u003d\u003e { UpdatePreviewImages(); }, 500);"
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "-"
        },
        "content": "        private void PictureAspectRefreshButton_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "-"
        },
        "content": "            ViewModel.RefreshLast8Pictures();"
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdatePreviewImages();"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Helper funcs"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "-"
        },
        "content": "        private void DeleteAllImage()"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "-"
        },
        "content": "            ViewModel.RemoveAllImageSelectionListItems();"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "-"
        },
        "content": "            HandleDeletePictureInPictureVariation();"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "-"
        },
        "content": "        private void HandleDeletePictureInPictureVariation()"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "-"
        },
        "content": "            ViewModel.UpdatePictureInPictureVariationWhenDeleteSome();"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "-"
        },
        "content": "            if (ViewModel.IsInPictureVariation())"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdatePreviewImages();"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "-"
        },
        "content": "        private void DeleteImage()"
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_clickedImageSelectionItemIndex \u003c 1 "
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "-"
        },
        "content": "                || _clickedImageSelectionItemIndex \u003e\u003d ImageSelectionListBox.Items.Count)"
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "-"
        },
        "content": "            ImageItem selectedImage \u003d (ImageItem) ImageSelectionListBox.Items.GetItemAt(_clickedImageSelectionItemIndex);"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "-"
        },
        "content": "            if (selectedImage \u003d\u003d null)"
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "-"
        },
        "content": "            ViewModel.ImageSelectionList.RemoveAt(_clickedImageSelectionItemIndex);"
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "-"
        },
        "content": "            HandleDeletePictureInPictureVariation();"
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "-"
        },
        "content": "        private void DeleteSelectedImage()"
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "-"
        },
        "content": "            ImageItem selectedImage \u003d (ImageItem)ImageSelectionListBox.SelectedItem;"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "-"
        },
        "content": "            if (selectedImage \u003d\u003d null"
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "-"
        },
        "content": "                || ImageSelectionListBox.SelectedIndex \u003d\u003d 0)"
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "-"
        },
        "content": "            ViewModel.ImageSelectionList.RemoveAt(ImageSelectionListBox.SelectedIndex);"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "-"
        },
        "content": "            HandleDeletePictureInPictureVariation();"
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "-"
        },
        "content": "        private void EditPictureSource(ImageItem source)"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "-"
        },
        "content": "            MetroDialogSettings metroDialogSettings \u003d new MetroDialogSettings"
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "-"
        },
        "content": "                DefaultText \u003d source.Source"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "-"
        },
        "content": "            this.ShowInputAsync(\"Edit Picture Source\", \"Picture taken from\", metroDialogSettings)"
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "-"
        },
        "content": "                .ContinueWith(task \u003d\u003e"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (!string.IsNullOrEmpty(task.Result))"
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "-"
        },
        "content": "                        source.Source \u003d task.Result;"
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "-"
        },
        "content": "                });"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AdjustImageDimensions(ImageItem source)"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "-"
        },
        "content": "            CropWindow \u003d new AdjustImageWindow();"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "-"
        },
        "content": "            CropWindow.SetThumbnailImage(source.ImageFile);"
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "-"
        },
        "content": "            CropWindow.SetFullsizeImage(source.FullSizeImageFile);"
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "-"
        },
        "content": "            if (source.Rect.Width \u003e 1)"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "-"
        },
        "content": "                CropWindow.SetCropRect(source.Rect.X, source.Rect.Y, source.Rect.Width, source.Rect.Height);"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "-"
        },
        "content": "            DisableLoadingStyleOnWindowActivate();"
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "-"
        },
        "content": "            CropWindow.ShowAdjustPictureDimensionsDialog();"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "-"
        },
        "content": "            EnableLoadingStyleOnWindowActivate();"
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "-"
        },
        "content": "            if (CropWindow.IsCropped)"
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "-"
        },
        "content": "                if (CropWindow.IsRotated)"
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "-"
        },
        "content": "                    source.Source \u003d CropWindow.RotateResult;"
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "-"
        },
        "content": "                    source.ImageFile \u003d ImageUtil.GetThumbnailFromFullSizeImg(CropWindow.RotateResult);"
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "-"
        },
        "content": "                    source.FullSizeImageFile \u003d CropWindow.RotateResult;"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "-"
        },
        "content": "                    source.ContextLink \u003d CropWindow.RotateResult;"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "-"
        },
        "content": "                source.UpdateImageAdjustmentOffset(CropWindow.CropResult, CropWindow.CropResultThumbnail, CropWindow.Rect);        "
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdatePreviewImages();"
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "-"
        },
        "content": "        /// decide visibility for instructions and stylesPreviewGrid"
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdatePreviewInterfaceWhenImageListChange(Collection\u003cImageItem\u003e list)"
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "-"
        },
        "content": "            // there is only `Choose Picture` placeholder image"
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "-"
        },
        "content": "            ImageSelectionInstructions.Visibility \u003d list.Count \u003c\u003d 1"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "-"
        },
        "content": "                ? Visibility.Visible"
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "-"
        },
        "content": "                : Visibility.Hidden;"
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "-"
        },
        "content": "            if (ImageSelectionInstructions.Visibility \u003d\u003d Visibility.Visible)"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "-"
        },
        "content": "                PreviewInstructions.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "-"
        },
        "content": "                PreviewInstructionsWhenNoSelectedSlide.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "-"
        },
        "content": "                VariationInstructions.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "-"
        },
        "content": "                VariationInstructionsWhenNoSelectedSlide.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (ImageSelectionListBox.SelectedValue \u003d\u003d null"
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "-"
        },
        "content": "                     \u0026\u0026 StylesPreviewListBox.Items.Count \u003d\u003d 0"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "-"
        },
        "content": "                     \u0026\u0026 StylesVariationListBox.Items.Count \u003d\u003d 0)"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "-"
        },
        "content": "                PreviewInstructions.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "-"
        },
        "content": "                PreviewInstructionsWhenNoSelectedSlide.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "-"
        },
        "content": "                VariationInstructions.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "-"
        },
        "content": "                VariationInstructionsWhenNoSelectedSlide.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "-"
        },
        "content": "            // there are `Choose Picture` placeholder image +"
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "-"
        },
        "content": "            // 2 sample pictures + maybe 1 image chosen by user"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "-"
        },
        "content": "            if (StoragePath.IsFirstTimeUsage() \u0026\u0026 list.Count \u003c\u003d 4"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 ImageSelectionInstructions.Visibility \u003d\u003d Visibility.Hidden)"
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "-"
        },
        "content": "                PreviewInstructions.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "-"
        },
        "content": "                ImageSelectionInstructionsForFirstTime.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "-"
        },
        "content": "                ImageSelectionInstructionsForFirstTime.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "-"
        },
        "content": "            // show StylesPreviewRegion aft there\u0027r some images in the SearchList region"
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "-"
        },
        "content": "            if (list.Count \u003e 1 \u0026\u0026 !_isStylePreviewRegionInit)"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "-"
        },
        "content": "                // only one time entry"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "-"
        },
        "content": "                _isStylePreviewRegionInit \u003d true;"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "-"
        },
        "content": "                StylesPreviewGrid.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "-"
        },
        "content": "                GotoSlideButton.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "-"
        },
        "content": "                LoadStylesButton.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "-"
        },
        "content": "        /// decide visibility and enability of variation stage\u0027s "
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateVariationInterface(Collection\u003cImageItem\u003e list)"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "-"
        },
        "content": "            if (list.Count !\u003d 0)"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "-"
        },
        "content": "                VariationInstructions.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "-"
        },
        "content": "                VariationInstructionsWhenNoSelectedSlide.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "-"
        },
        "content": "                VariantsComboBox.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "-"
        },
        "content": "                VariantsColorPanel.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "-"
        },
        "content": "                VariantsSlider.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (this.GetCurrentSlide() \u003d\u003d null)"
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "-"
        },
        "content": "                VariationInstructions.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "-"
        },
        "content": "                VariationInstructionsWhenNoSelectedSlide.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "-"
        },
        "content": "                VariantsComboBox.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "-"
        },
        "content": "                VariantsColorPanel.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "-"
        },
        "content": "                VariantsSlider.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "-"
        },
        "content": "            else // select \u0027loading\u0027 image"
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "-"
        },
        "content": "                VariationInstructions.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "-"
        },
        "content": "                VariationInstructionsWhenNoSelectedSlide.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "-"
        },
        "content": "                VariantsComboBox.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "-"
        },
        "content": "                VariantsColorPanel.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "-"
        },
        "content": "                VariantsSlider.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "-"
        },
        "content": "        /// decide visibility for instructions"
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdatePreviewInterfaceWhenPreviewListChange(Collection\u003cImageItem\u003e list)"
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "-"
        },
        "content": "            if (list.Count !\u003d 0 || ImageSelectionInstructions.Visibility \u003d\u003d Visibility.Visible)"
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "-"
        },
        "content": "                PreviewInstructions.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "-"
        },
        "content": "                PreviewInstructionsWhenNoSelectedSlide.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (this.GetCurrentSlide() \u003d\u003d null)"
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "-"
        },
        "content": "                PreviewInstructionsWhenNoSelectedSlide.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "-"
        },
        "content": "                PreviewInstructions.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "-"
        },
        "content": "                PreviewInstructions.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "-"
        },
        "content": "                PreviewInstructionsWhenNoSelectedSlide.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool IsMouseOverTarget(Visual target, Point point)"
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "-"
        },
        "content": "            Rect bounds \u003d VisualTreeHelper.GetDescendantBounds(target);"
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "-"
        },
        "content": "            return bounds.Contains(point);"
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "-"
        },
        "content": "        private void OpenVariationsFlyout()"
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "-"
        },
        "content": "            Dispatcher.BeginInvoke(new Action(() \u003d\u003e"
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "-"
        },
        "content": "                if (IsVariationsFlyoutOpen)"
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "-"
        },
        "content": "                TranslateTransform left2RightToShowTranslate \u003d new TranslateTransform { X \u003d -StylesPreviewGrid.ActualWidth };"
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "-"
        },
        "content": "                StyleVariationsFlyout.RenderTransform \u003d left2RightToShowTranslate;"
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "-"
        },
        "content": "                StyleVariationsFlyout.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "-"
        },
        "content": "                DoubleAnimation left2RightToShowAnimation \u003d new DoubleAnimation(-StylesPreviewGrid.ActualWidth, 0,"
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "-"
        },
        "content": "                    TimeSpan.FromMilliseconds(350))"
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "-"
        },
        "content": "                    EasingFunction \u003d new SineEase { EasingMode \u003d EasingMode.EaseInOut },"
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "-"
        },
        "content": "                    AccelerationRatio \u003d 0.5"
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "-"
        },
        "content": "                };"
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "-"
        },
        "content": "                left2RightToShowTranslate.BeginAnimation(TranslateTransform.XProperty, left2RightToShowAnimation);"
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "-"
        },
        "content": "                IsVariationsFlyoutOpen \u003d true;"
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "-"
        },
        "content": "            }));"
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CloseVariationsFlyout()"
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!IsVariationsFlyoutOpen)"
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "-"
        },
        "content": "            TranslateTransform right2LeftToHideTranslate \u003d new TranslateTransform();"
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "-"
        },
        "content": "            StyleVariationsFlyout.RenderTransform \u003d right2LeftToHideTranslate;"
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "-"
        },
        "content": "            DoubleAnimation right2LeftToHideAnimation \u003d new DoubleAnimation(0, -StyleVariationsFlyout.ActualWidth,"
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "-"
        },
        "content": "                TimeSpan.FromMilliseconds(350))"
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "-"
        },
        "content": "                EasingFunction \u003d new SineEase { EasingMode \u003d EasingMode.EaseInOut },"
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "-"
        },
        "content": "                AccelerationRatio \u003d 0.5"
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "-"
        },
        "content": "            right2LeftToHideAnimation.Completed +\u003d (sender, args) \u003d\u003e"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "-"
        },
        "content": "                Dispatcher.BeginInvoke(new Action(() \u003d\u003e"
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "-"
        },
        "content": "                    StyleVariationsFlyout.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (!IsDisplayDefaultPicture())"
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "-"
        },
        "content": "                        UpdatePreviewImages();"
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "-"
        },
        "content": "                    else"
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "-"
        },
        "content": "                        UpdatePreviewImages(CreateDefaultPictureItem());"
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "-"
        },
        "content": "                        UpdatePreviewStageControls();"
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "-"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "-"
        },
        "content": "            right2LeftToHideTranslate.BeginAnimation(TranslateTransform.XProperty, right2LeftToHideAnimation);"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "-"
        },
        "content": "            IsVariationsFlyoutOpen \u003d false;"
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "-"
        },
        "content": "            ViewModel.CurrentVariantCategory.Text \u003d \"\";"
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "-"
        },
        "content": "            Logger.Log(\"Variation is closed\");"
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdatePreviewImages(ImageItem source \u003d null, bool isEnteringPictureVariation \u003d false)"
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!_isEnableUpdatePreview)"
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "-"
        },
        "content": "                if (IsVariationsFlyoutOpen \u0026\u0026 isEnteringPictureVariation)"
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "-"
        },
        "content": "                    Logger.Log(\"Entering pic aspect\");"
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "-"
        },
        "content": "                    // when it\u0027s to load the design for a default picture,"
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "-"
        },
        "content": "                    // and it\u0027s at the variation stage,"
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "-"
        },
        "content": "                    // directly jump to picture variation to select picture"
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "-"
        },
        "content": "                    int picVariationIndex \u003d ViewModel.VariantsCategory.IndexOf("
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "-"
        },
        "content": "                        PictureSlidesLabText.VariantCategoryPicture);"
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (VariantsComboBox.SelectedIndex !\u003d picVariationIndex)"
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "-"
        },
        "content": "                        VariantsComboBox.SelectedIndex \u003d picVariationIndex;"
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "-"
        },
        "content": "                    else"
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "-"
        },
        "content": "                        ViewModel.UpdatePreviewImages("
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "-"
        },
        "content": "                        source ?? (ImageItem)ImageSelectionListBox.SelectedValue ?? CreateDefaultPictureItem(),"
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentSlide().GetNativeSlide(),"
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentPresentation().SlideWidth,"
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentPresentation().SlideHeight);"
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "-"
        },
        "content": "                else if (IsDisplayDefaultPicture())"
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "-"
        },
        "content": "                    Logger.Log(\"In default pic mode\");"
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "-"
        },
        "content": "                    // if it\u0027s in Default Picture mode, allow"
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "-"
        },
        "content": "                    // updating preview images"
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "-"
        },
        "content": "                    ViewModel.UpdatePreviewImages("
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "-"
        },
        "content": "                        source ?? CreateDefaultPictureItem(),"
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentSlide().GetNativeSlide(),"
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentPresentation().SlideWidth,"
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentPresentation().SlideHeight);"
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "-"
        },
        "content": "                    // else, try to update preview images using"
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "-"
        },
        "content": "                    // source or current selected picture."
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "-"
        },
        "content": "                    ViewModel.UpdatePreviewImages("
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "-"
        },
        "content": "                        source ?? (ImageItem) ImageSelectionListBox.SelectedValue,"
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentSlide().GetNativeSlide(),"
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentPresentation().SlideWidth,"
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentPresentation().SlideHeight);"
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.LogException(e, \"UpdatePreviewImages\");"
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CustomizeStyle(ImageItem source, List\u003cStyleOption\u003e givenStyles \u003d null,"
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "-"
        },
        "content": "            Dictionary\u003cstring, List\u003cStyleVariant\u003e\u003e givenVariants \u003d null)"
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "-"
        },
        "content": "                ViewModel.UpdateStyleVariationImagesWhenOpenFlyout("
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "-"
        },
        "content": "                    source ?? (ImageItem) ImageSelectionListBox.SelectedValue,"
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.GetCurrentSlide().GetNativeSlide(),"
      },
      {
        "lineNumber": 1265,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.GetCurrentPresentation().SlideWidth,"
      },
      {
        "lineNumber": 1266,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.GetCurrentPresentation().SlideHeight,"
      },
      {
        "lineNumber": 1267,
        "author": {
          "gitId": "-"
        },
        "content": "                    givenStyles, givenVariants);"
      },
      {
        "lineNumber": 1268,
        "author": {
          "gitId": "-"
        },
        "content": "                OpenVariationsFlyout();"
      },
      {
        "lineNumber": 1269,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1270,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 1271,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1272,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.LogException(e, \"CustomizeStyle\");"
      },
      {
        "lineNumber": 1273,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1274,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1276,
        "author": {
          "gitId": "-"
        },
        "content": "        private void LeaveDefaultPictureMode()"
      },
      {
        "lineNumber": 1277,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1278,
        "author": {
          "gitId": "-"
        },
        "content": "            _isDisplayDefaultPicture \u003d false;"
      },
      {
        "lineNumber": 1279,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1281,
        "author": {
          "gitId": "-"
        },
        "content": "        private void EnableLoadingStyleOnWindowActivate()"
      },
      {
        "lineNumber": 1282,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1283,
        "author": {
          "gitId": "-"
        },
        "content": "            _isAbleLoadingOnWindowActivate \u003d true;"
      },
      {
        "lineNumber": 1284,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1286,
        "author": {
          "gitId": "-"
        },
        "content": "        private void DisableLoadingStyleOnWindowActivate()"
      },
      {
        "lineNumber": 1287,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1288,
        "author": {
          "gitId": "-"
        },
        "content": "            _isAbleLoadingOnWindowActivate \u003d false;"
      },
      {
        "lineNumber": 1289,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1291,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1292,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Execute action after time (in ms)"
      },
      {
        "lineNumber": 1293,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1294,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"action\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 1295,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"time\"\u003etime in ms\u003c/param\u003e"
      },
      {
        "lineNumber": 1296,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SetTimeout(Action action, int time)"
      },
      {
        "lineNumber": 1297,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1298,
        "author": {
          "gitId": "-"
        },
        "content": "            DispatcherTimer timer \u003d new DispatcherTimer(DispatcherPriority.Render)"
      },
      {
        "lineNumber": 1299,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1300,
        "author": {
          "gitId": "-"
        },
        "content": "                Interval \u003d new TimeSpan(0, 0, 0, 0, time) // in ms"
      },
      {
        "lineNumber": 1301,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 1302,
        "author": {
          "gitId": "-"
        },
        "content": "            timer.Tick +\u003d (o, args) \u003d\u003e"
      },
      {
        "lineNumber": 1303,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1304,
        "author": {
          "gitId": "-"
        },
        "content": "                timer.Stop();"
      },
      {
        "lineNumber": 1305,
        "author": {
          "gitId": "-"
        },
        "content": "                action();"
      },
      {
        "lineNumber": 1306,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 1307,
        "author": {
          "gitId": "-"
        },
        "content": "            timer.Start();"
      },
      {
        "lineNumber": 1308,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1310,
        "author": {
          "gitId": "-"
        },
        "content": "        private void HandleUnhandledException(object sender, DispatcherUnhandledExceptionEventArgs e)"
      },
      {
        "lineNumber": 1311,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1312,
        "author": {
          "gitId": "-"
        },
        "content": "            Logger.LogException(e.Exception, sender.GetType() + \" \" + sender);"
      },
      {
        "lineNumber": 1313,
        "author": {
          "gitId": "-"
        },
        "content": "            ShowErrorMessageBox(\"Unexpected errors happened!\", e.Exception);"
      },
      {
        "lineNumber": 1314,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1315,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1316,
        "author": {
          "gitId": "-"
        },
        "content": "        private void HandleUnhandledException(object sender, UnhandledExceptionEventArgs e)"
      },
      {
        "lineNumber": 1317,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1318,
        "author": {
          "gitId": "-"
        },
        "content": "            Logger.LogException(e.ExceptionObject as Exception, sender.GetType() + \" \" + sender);"
      },
      {
        "lineNumber": 1319,
        "author": {
          "gitId": "-"
        },
        "content": "            ShowErrorMessageBox(\"Unexpected errors happened!\", e.ExceptionObject as Exception);"
      },
      {
        "lineNumber": 1320,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1321,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1322,
        "author": {
          "gitId": "-"
        },
        "content": "        // check PSL window is really closing or not"
      },
      {
        "lineNumber": 1323,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool IsDisposed"
      },
      {
        "lineNumber": 1324,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1325,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 1326,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1327,
        "author": {
          "gitId": "-"
        },
        "content": "                if (IsClosing)"
      },
      {
        "lineNumber": 1328,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1329,
        "author": {
          "gitId": "-"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 1330,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1331,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1332,
        "author": {
          "gitId": "-"
        },
        "content": "                System.Reflection.PropertyInfo propertyInfo \u003d typeof(Window).GetProperty(\"IsDisposed\", "
      },
      {
        "lineNumber": 1333,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance);"
      },
      {
        "lineNumber": 1334,
        "author": {
          "gitId": "-"
        },
        "content": "                return (bool) propertyInfo.GetValue(this, null);"
      },
      {
        "lineNumber": 1335,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1336,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1337,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 1338,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1339,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 11,
      "-": 1328
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/Properties/Resources.Designer.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿//------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "// \u003cauto-generated\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "//     This code was generated by a tool."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "//     Runtime Version:4.0.30319.42000"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "//"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "//     Changes to this file may cause incorrect behavior and will be lost if"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "//     the code is regenerated."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "// \u003c/auto-generated\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "//------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.Properties {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    using System;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    ///   A strongly-typed resource class, for looking up localized strings, etc."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    // This class was auto-generated by the StronglyTypedResourceBuilder"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    // class via a tool like ResGen or Visual Studio."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    // To add or remove a member, edit your .ResX file then rerun ResGen"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    // with the /str option, or rebuild your VS project."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Resources.Tools.StronglyTypedResourceBuilder\", \"15.0.0.0\")]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public class Resources {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        private static global::System.Resources.ResourceManager resourceMan;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        private static global::System.Globalization.CultureInfo resourceCulture;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute(\"Microsoft.Performance\", \"CA1811:AvoidUncalledPrivateCode\")]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        internal Resources() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Returns the cached ResourceManager instance used by this class."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        public static global::System.Resources.ResourceManager ResourceManager {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                if (object.ReferenceEquals(resourceMan, null)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                    global::System.Resources.ResourceManager temp \u003d new global::System.Resources.ResourceManager(\"PowerPointLabs.Properties.Resources\", typeof(Resources).Assembly);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                    resourceMan \u003d temp;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                return resourceMan;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Overrides the current thread\u0027s CurrentUICulture property for all"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   resource lookups using this strongly typed resource class."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        public static global::System.Globalization.CultureInfo Culture {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                return resourceCulture;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            set {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                resourceCulture \u003d value;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap About {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"About\", resourceCulture);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Acknowledgement {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Acknowledgement\", resourceCulture);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AddAnimation {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AddAnimation\", resourceCulture);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AddAnimationContext {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AddAnimationContext\", resourceCulture);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AddAudio {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AddAudio\", resourceCulture);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AddCaption {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AddCaption\", resourceCulture);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AddNarrationContext {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AddNarrationContext\", resourceCulture);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AddSpotlightContext {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AddSpotlightContext\", resourceCulture);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AddToCustomShapes {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AddToCustomShapes\", resourceCulture);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        public static System.Drawing.Bitmap AddToCustomShapesDisabled {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AddToCustomShapesDisabled\", resourceCulture);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        "
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AdjoinHorizontalIcon {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AdjoinHorizontalIcon\", resourceCulture);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AdjoinHorizontalWithAlignIcon {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AdjoinHorizontalWithAlignIcon\", resourceCulture);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AdjoinVerticalIcon {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AdjoinVerticalIcon\", resourceCulture);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AdjoinVerticalWithAlignIcon {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AdjoinVerticalWithAlignIcon\", resourceCulture);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AgendaLab {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AgendaLab\", resourceCulture);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AgendaRemove {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AgendaRemove\", resourceCulture);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AgendaSettings {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AgendaSettings\", resourceCulture);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AgendaSidebar {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AgendaSidebar\", resourceCulture);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AgendaSync {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AgendaSync\", resourceCulture);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AgendaText {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AgendaText\", resourceCulture);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AgendaVisual {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AgendaVisual\", resourceCulture);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AlignBottomDefaultIcon {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AlignBottomDefaultIcon\", resourceCulture);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AlignBottomIcon {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AlignBottomIcon\", resourceCulture);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AlignCenterIcon {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AlignCenterIcon\", resourceCulture);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AlignHorizontalCenterDefaultIcon {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AlignHorizontalCenterDefaultIcon\", resourceCulture);"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AlignHorizontalCenterIcon {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AlignHorizontalCenterIcon\", resourceCulture);"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AlignLeftDefaultIcon {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AlignLeftDefaultIcon\", resourceCulture);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AlignLeftIcon {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AlignLeftIcon\", resourceCulture);"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AlignRadialIcon {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AlignRadialIcon\", resourceCulture);"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AlignRightDefaultIcon {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AlignRightDefaultIcon\", resourceCulture);"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AlignRightIcon {"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AlignRightIcon\", resourceCulture);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AlignTopDefaultIcon {"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AlignTopDefaultIcon\", resourceCulture);"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AlignTopIcon {"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AlignTopIcon\", resourceCulture);"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AlignVerticalCenterDefaultIcon {"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AlignVerticalCenterDefaultIcon\", resourceCulture);"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AlignVerticalCenterIcon {"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AlignVerticalCenterIcon\", resourceCulture);"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AnimationEmphasis {"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AnimationEmphasis\", resourceCulture);"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AnimationEntrance {"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AnimationEntrance\", resourceCulture);"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AnimationExit {"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AnimationExit\", resourceCulture);"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AnimationLab {"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AnimationLab\", resourceCulture);"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AnimationMotionPath {"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AnimationMotionPath\", resourceCulture);"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AnimationsGroup {"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AnimationsGroup\", resourceCulture);"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Apply_icon {"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Apply_icon\", resourceCulture);"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AudioGroup {"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AudioGroup\", resourceCulture);"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap BlurBackground {"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"BlurBackground\", resourceCulture);"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap BlurRemainder {"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"BlurRemainder\", resourceCulture);"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap BlurSelected {"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"BlurSelected\", resourceCulture);"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Brightness_icon_25x25 {"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Brightness_icon_25x25\", resourceCulture);"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Bullets {"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Bullets\", resourceCulture);"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap CaptionsLab {"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"CaptionsLab\", resourceCulture);"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ChoosePicturesIcon {"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ChoosePicturesIcon\", resourceCulture);"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Clear_icon {"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Clear_icon\", resourceCulture);"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Byte[]."
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "        public static byte[] ClosedHand {"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ClosedHand\", resourceCulture);"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((byte[])(obj));"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ColorsLab {"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ColorsLab\", resourceCulture);"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ConvertToPicture {"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ConvertToPicture\", resourceCulture);"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap CropLab {"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"CropLab\", resourceCulture);"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap CropOutPadding {"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"CropOutPadding\", resourceCulture);"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap CropToAspectRatio {"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"CropToAspectRatio\", resourceCulture);"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap CropToSame {"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"CropToSame\", resourceCulture);"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap CropToSlide {"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"CropToSlide\", resourceCulture);"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap CutOutShape {"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"CutOutShape\", resourceCulture);"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap CutOutShapeMenu {"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"CutOutShapeMenu\", resourceCulture);"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap DefaultPicture {"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"DefaultPicture\", resourceCulture);"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap DistributeCenterIcon {"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"DistributeCenterIcon\", resourceCulture);"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap DistributeGridIcon {"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"DistributeGridIcon\", resourceCulture);"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap DistributeHorizontalIcon {"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"DistributeHorizontalIcon\", resourceCulture);"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap DistributeRadialIcon {"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"DistributeRadialIcon\", resourceCulture);"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap DistributeShapeIcon {"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"DistributeShapeIcon\", resourceCulture);"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap DistributeVerticalIcon {"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"DistributeVerticalIcon\", resourceCulture);"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Down {"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Down\", resourceCulture);"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap DuplicateRotateIcon {"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"DuplicateRotateIcon\", resourceCulture);"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap EditNameContext {"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"EditNameContext\", resourceCulture);"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap EffectsGroup {"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"EffectsGroup\", resourceCulture);"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap EffectsLab {"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"EffectsLab\", resourceCulture);"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Byte[]."
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": "        public static byte[] EyeDropper {"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"EyeDropper\", resourceCulture);"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((byte[])(obj));"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public static System.Drawing.Bitmap EyeDropper_icon {"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"EyeDropper_icon\", resourceCulture);"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        "
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Feedback {"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Feedback\", resourceCulture);"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap FillColor_icon {"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"FillColor_icon\", resourceCulture);"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap FillSlide {"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"FillSlide\", resourceCulture);"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Fit {"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Fit\", resourceCulture);"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap FitToHeight {"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"FitToHeight\", resourceCulture);"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap FitToWidth {"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"FitToWidth\", resourceCulture);"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap FlipHorizontal {"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"FlipHorizontal\", resourceCulture);"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap FlipHorizontalIcon {"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"FlipHorizontalIcon\", resourceCulture);"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap FlipVertical {"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"FlipVertical\", resourceCulture);"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap FlipVerticalIcon {"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"FlipVerticalIcon\", resourceCulture);"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap FormattingGroup {"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"FormattingGroup\", resourceCulture);"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap halfWidth {"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"halfWidth\", resourceCulture);"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap HelpMenu {"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"HelpMenu\", resourceCulture);"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap HideShape {"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"HideShape\", resourceCulture);"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap HighlightBackground {"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"HighlightBackground\", resourceCulture);"
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap HighlightBackgroundContext {"
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"HighlightBackgroundContext\", resourceCulture);"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap HighlightLab {"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"HighlightLab\", resourceCulture);"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap HighlightText {"
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"HighlightText\", resourceCulture);"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap HighlightTextContext {"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"HighlightTextContext\", resourceCulture);"
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap HighlightWords {"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"HighlightWords\", resourceCulture);"
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Indicator {"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Indicator\", resourceCulture);"
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap InSlideAnimation {"
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"InSlideAnimation\", resourceCulture);"
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap InSlideContext {"
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"InSlideContext\", resourceCulture);"
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Left {"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Left\", resourceCulture);"
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap LeftRotate {"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"LeftRotate\", resourceCulture);"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap LineColor_icon {"
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"LineColor_icon\", resourceCulture);"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap LineColor_icon1 {"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"LineColor_icon1\", resourceCulture);"
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Load_icon {"
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Load_icon\", resourceCulture);"
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Loading {"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Loading\", resourceCulture);"
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap LockAxisIcon {"
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"LockAxisIcon\", resourceCulture);"
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Logo {"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Logo\", resourceCulture);"
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Magnify {"
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Magnify\", resourceCulture);"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap MakeTransparent {"
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"MakeTransparent\", resourceCulture);"
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap maxWidth {"
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"maxWidth\", resourceCulture);"
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap MergeIntoGroup {"
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"MergeIntoGroup\", resourceCulture);"
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap MinusZoom {"
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"MinusZoom\", resourceCulture);"
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap minWidth {"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"minWidth\", resourceCulture);"
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap NarrationsLab {"
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"NarrationsLab\", resourceCulture);"
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Byte[]."
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "-"
        },
        "content": "        public static byte[] OpenHand {"
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"OpenHand\", resourceCulture);"
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((byte[])(obj));"
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap PasteAtCursorPosition {"
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"PasteAtCursorPosition\", resourceCulture);"
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap PasteAtOriginalPosition {"
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"PasteAtOriginalPosition\", resourceCulture);"
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap PasteIntoGroup {"
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"PasteIntoGroup\", resourceCulture);"
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap PasteLab {"
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"PasteLab\", resourceCulture);"
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap PasteToFillSlide {"
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"PasteToFillSlide\", resourceCulture);"
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap PasteToFitSlide {"
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"PasteToFitSlide\", resourceCulture);"
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1265,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1266,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Pause {"
      },
      {
        "lineNumber": 1267,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1268,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Pause\", resourceCulture);"
      },
      {
        "lineNumber": 1269,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1270,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1271,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1272,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1273,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1274,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1275,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1276,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap PictureSlidesLab {"
      },
      {
        "lineNumber": 1277,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1278,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"PictureSlidesLab\", resourceCulture);"
      },
      {
        "lineNumber": 1279,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1280,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1281,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1282,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1283,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1284,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1285,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1286,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Play {"
      },
      {
        "lineNumber": 1287,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1288,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Play\", resourceCulture);"
      },
      {
        "lineNumber": 1289,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1290,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1291,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1292,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1293,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1294,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1295,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1296,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap PlusZoom {"
      },
      {
        "lineNumber": 1297,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1298,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"PlusZoom\", resourceCulture);"
      },
      {
        "lineNumber": 1299,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1300,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1301,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1302,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1303,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1304,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1305,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1306,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap PositionsLab {"
      },
      {
        "lineNumber": 1307,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1308,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"PositionsLab\", resourceCulture);"
      },
      {
        "lineNumber": 1309,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1310,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1311,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1312,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1313,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1314,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1315,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1316,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap PptlabsContextMenu {"
      },
      {
        "lineNumber": 1317,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1318,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"PptlabsContextMenu\", resourceCulture);"
      },
      {
        "lineNumber": 1319,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1320,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1321,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1322,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1323,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1324,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1325,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1326,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap PslRefresh {"
      },
      {
        "lineNumber": 1327,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1328,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"PslRefresh\", resourceCulture);"
      },
      {
        "lineNumber": 1329,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1330,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1331,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1332,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1333,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1334,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1335,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1336,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap PslSample1 {"
      },
      {
        "lineNumber": 1337,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1338,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"PslSample1\", resourceCulture);"
      },
      {
        "lineNumber": 1339,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1340,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1341,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1342,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1343,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1344,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1345,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1346,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap PslSample2 {"
      },
      {
        "lineNumber": 1347,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1348,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"PslSample2\", resourceCulture);"
      },
      {
        "lineNumber": 1349,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1350,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1351,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1352,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1353,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1354,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1355,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1356,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap PslSettings {"
      },
      {
        "lineNumber": 1357,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1358,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"PslSettings\", resourceCulture);"
      },
      {
        "lineNumber": 1359,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1360,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1361,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1362,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1363,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1364,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1365,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1366,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap RadialShapeOrientationDynamicIcon {"
      },
      {
        "lineNumber": 1367,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1368,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"RadialShapeOrientationDynamicIcon\", resourceCulture);"
      },
      {
        "lineNumber": 1369,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1370,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1371,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1372,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1373,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1374,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1375,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1376,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap RadialShapeOrientationFixedIcon {"
      },
      {
        "lineNumber": 1377,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1378,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"RadialShapeOrientationFixedIcon\", resourceCulture);"
      },
      {
        "lineNumber": 1379,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1380,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1381,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1382,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1383,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1384,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1385,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1386,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap RecolorBackground {"
      },
      {
        "lineNumber": 1387,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1388,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"RecolorBackground\", resourceCulture);"
      },
      {
        "lineNumber": 1389,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1390,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1391,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1392,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1393,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1394,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1395,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1396,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap RecolorRemainder {"
      },
      {
        "lineNumber": 1397,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1398,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"RecolorRemainder\", resourceCulture);"
      },
      {
        "lineNumber": 1399,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1400,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1401,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1402,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1403,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1404,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1405,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1406,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Record {"
      },
      {
        "lineNumber": 1407,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1408,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Record\", resourceCulture);"
      },
      {
        "lineNumber": 1409,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1410,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1411,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1412,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1413,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1414,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1415,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1416,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap RecordAudio {"
      },
      {
        "lineNumber": 1417,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1418,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"RecordAudio\", resourceCulture);"
      },
      {
        "lineNumber": 1419,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1420,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1421,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1422,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1423,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1424,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1425,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1426,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Refresh {"
      },
      {
        "lineNumber": 1427,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1428,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Refresh\", resourceCulture);"
      },
      {
        "lineNumber": 1429,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1430,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1431,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1432,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1433,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1434,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1435,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1436,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Reload_icon {"
      },
      {
        "lineNumber": 1437,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1438,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Reload_icon\", resourceCulture);"
      },
      {
        "lineNumber": 1439,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1440,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1441,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1442,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1443,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1444,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1445,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1446,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ReloadAnimation {"
      },
      {
        "lineNumber": 1447,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1448,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ReloadAnimation\", resourceCulture);"
      },
      {
        "lineNumber": 1449,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1450,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1451,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1452,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1453,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1454,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1455,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1456,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ReloadAnimationContext {"
      },
      {
        "lineNumber": 1457,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1458,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ReloadAnimationContext\", resourceCulture);"
      },
      {
        "lineNumber": 1459,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1460,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1461,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1462,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1463,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1464,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1465,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1466,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ReloadSpotlight {"
      },
      {
        "lineNumber": 1467,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1468,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ReloadSpotlight\", resourceCulture);"
      },
      {
        "lineNumber": 1469,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1470,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1471,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1472,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1473,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1474,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1475,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1476,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap RemoveAudio {"
      },
      {
        "lineNumber": 1477,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1478,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"RemoveAudio\", resourceCulture);"
      },
      {
        "lineNumber": 1479,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1480,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1481,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1482,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1483,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1484,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1485,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1486,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap RemoveCaption {"
      },
      {
        "lineNumber": 1487,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1488,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"RemoveCaption\", resourceCulture);"
      },
      {
        "lineNumber": 1489,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1490,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1491,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1492,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1493,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1494,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1495,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1496,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap RemoveHighlighting {"
      },
      {
        "lineNumber": 1497,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1498,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"RemoveHighlighting\", resourceCulture);"
      },
      {
        "lineNumber": 1499,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1500,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1501,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1502,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1503,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1504,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1505,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1506,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap RemoveNotes {"
      },
      {
        "lineNumber": 1507,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1508,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"RemoveNotes\", resourceCulture);"
      },
      {
        "lineNumber": 1509,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1510,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1511,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1512,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1513,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1514,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1515,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1516,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ReplaceWithClipboard {"
      },
      {
        "lineNumber": 1517,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1518,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ReplaceWithClipboard\", resourceCulture);"
      },
      {
        "lineNumber": 1519,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1520,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1521,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1522,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1523,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1524,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1525,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1526,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeDecreaseHeight {"
      },
      {
        "lineNumber": 1527,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1528,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeDecreaseHeight\", resourceCulture);"
      },
      {
        "lineNumber": 1529,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1530,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1531,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1532,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1533,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1534,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1535,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1536,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeDecreaseWidth {"
      },
      {
        "lineNumber": 1537,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1538,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeDecreaseWidth\", resourceCulture);"
      },
      {
        "lineNumber": 1539,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1540,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1541,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1542,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1543,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1544,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1545,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1546,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeFitToFill {"
      },
      {
        "lineNumber": 1547,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1548,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeFitToFill\", resourceCulture);"
      },
      {
        "lineNumber": 1549,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1550,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1551,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1552,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1553,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1554,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1555,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1556,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeFitToHeight {"
      },
      {
        "lineNumber": 1557,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1558,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeFitToHeight\", resourceCulture);"
      },
      {
        "lineNumber": 1559,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1560,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1561,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1562,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1563,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1564,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1565,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1566,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeFitToWidth {"
      },
      {
        "lineNumber": 1567,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1568,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeFitToWidth\", resourceCulture);"
      },
      {
        "lineNumber": 1569,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1570,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1571,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1572,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1573,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1574,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1575,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1576,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeIncreaseHeight {"
      },
      {
        "lineNumber": 1577,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1578,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeIncreaseHeight\", resourceCulture);"
      },
      {
        "lineNumber": 1579,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1580,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1581,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1582,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1583,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1584,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1585,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1586,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeIncreaseWidth {"
      },
      {
        "lineNumber": 1587,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1588,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeIncreaseWidth\", resourceCulture);"
      },
      {
        "lineNumber": 1589,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1590,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1591,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1592,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1593,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1594,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1595,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1596,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeLab {"
      },
      {
        "lineNumber": 1597,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1598,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeLab\", resourceCulture);"
      },
      {
        "lineNumber": 1599,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1600,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1601,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1602,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1603,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1604,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1605,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1606,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeLock {"
      },
      {
        "lineNumber": 1607,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1608,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeLock\", resourceCulture);"
      },
      {
        "lineNumber": 1609,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1610,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1611,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1612,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1613,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1614,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1615,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1616,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeMatchHeight {"
      },
      {
        "lineNumber": 1617,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1618,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeMatchHeight\", resourceCulture);"
      },
      {
        "lineNumber": 1619,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1620,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1621,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1622,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1623,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1624,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1625,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1626,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeMatchWidth {"
      },
      {
        "lineNumber": 1627,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1628,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeMatchWidth\", resourceCulture);"
      },
      {
        "lineNumber": 1629,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1630,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1631,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1632,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1633,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1634,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1635,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1636,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeProportionArea {"
      },
      {
        "lineNumber": 1637,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1638,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeProportionArea\", resourceCulture);"
      },
      {
        "lineNumber": 1639,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1640,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1641,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1642,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1643,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1644,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1645,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1646,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeProportionHeight {"
      },
      {
        "lineNumber": 1647,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1648,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeProportionHeight\", resourceCulture);"
      },
      {
        "lineNumber": 1649,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1650,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1651,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1652,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1653,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1654,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1655,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1656,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeProportionWidth {"
      },
      {
        "lineNumber": 1657,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1658,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeProportionWidth\", resourceCulture);"
      },
      {
        "lineNumber": 1659,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1660,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1661,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1662,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1663,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1664,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1665,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1666,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeSameHeight {"
      },
      {
        "lineNumber": 1667,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1668,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeSameHeight\", resourceCulture);"
      },
      {
        "lineNumber": 1669,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1670,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1671,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1672,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1673,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1674,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1675,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1676,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeSameSize {"
      },
      {
        "lineNumber": 1677,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1678,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeSameSize\", resourceCulture);"
      },
      {
        "lineNumber": 1679,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1680,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1681,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1682,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1683,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1684,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1685,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1686,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeSameWidth {"
      },
      {
        "lineNumber": 1687,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1688,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeSameWidth\", resourceCulture);"
      },
      {
        "lineNumber": 1689,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1690,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1691,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1692,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1693,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1694,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1695,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1696,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeStore {"
      },
      {
        "lineNumber": 1697,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1698,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeStore\", resourceCulture);"
      },
      {
        "lineNumber": 1699,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1700,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1701,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1702,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1703,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1704,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1705,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1706,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeStretchBottom {"
      },
      {
        "lineNumber": 1707,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1708,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeStretchBottom\", resourceCulture);"
      },
      {
        "lineNumber": 1709,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1710,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1711,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1712,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1713,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1714,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1715,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1716,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeStretchLeft {"
      },
      {
        "lineNumber": 1717,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1718,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeStretchLeft\", resourceCulture);"
      },
      {
        "lineNumber": 1719,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1720,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1721,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1722,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1723,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1724,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1725,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1726,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeStretchRight {"
      },
      {
        "lineNumber": 1727,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1728,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeStretchRight\", resourceCulture);"
      },
      {
        "lineNumber": 1729,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1730,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1731,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1732,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1733,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1734,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1735,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1736,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeStretchTop {"
      },
      {
        "lineNumber": 1737,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1738,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeStretchTop\", resourceCulture);"
      },
      {
        "lineNumber": 1739,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1740,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1741,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1742,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1743,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1744,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1745,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1746,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeSymmetricBottom {"
      },
      {
        "lineNumber": 1747,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1748,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeSymmetricBottom\", resourceCulture);"
      },
      {
        "lineNumber": 1749,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1750,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1751,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1752,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1753,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1754,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1755,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1756,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeSymmetricLeft {"
      },
      {
        "lineNumber": 1757,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1758,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeSymmetricLeft\", resourceCulture);"
      },
      {
        "lineNumber": 1759,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1760,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1761,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1762,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1763,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1764,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1765,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1766,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeSymmetricRight {"
      },
      {
        "lineNumber": 1767,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1768,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeSymmetricRight\", resourceCulture);"
      },
      {
        "lineNumber": 1769,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1770,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1771,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1772,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1773,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1774,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1775,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1776,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeSymmetricTop {"
      },
      {
        "lineNumber": 1777,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1778,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeSymmetricTop\", resourceCulture);"
      },
      {
        "lineNumber": 1779,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1780,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1781,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1782,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1783,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1784,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1785,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1786,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeUnlock {"
      },
      {
        "lineNumber": 1787,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1788,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeUnlock\", resourceCulture);"
      },
      {
        "lineNumber": 1789,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1790,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1791,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1792,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1793,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1794,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1795,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1796,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Right {"
      },
      {
        "lineNumber": 1797,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1798,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Right\", resourceCulture);"
      },
      {
        "lineNumber": 1799,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1800,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1801,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1802,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1803,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1804,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1805,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1806,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap RightArrowGreen {"
      },
      {
        "lineNumber": 1807,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1808,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"RightArrowGreen\", resourceCulture);"
      },
      {
        "lineNumber": 1809,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1810,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1811,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1812,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1813,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1814,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1815,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1816,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap RightRotate {"
      },
      {
        "lineNumber": 1817,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1818,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"RightRotate\", resourceCulture);"
      },
      {
        "lineNumber": 1819,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1820,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1821,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1822,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1823,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1824,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1825,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1826,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap RotateIcon {"
      },
      {
        "lineNumber": 1827,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1828,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"RotateIcon\", resourceCulture);"
      },
      {
        "lineNumber": 1829,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1830,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1831,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1832,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1833,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1834,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1835,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1836,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Saturation_icon_18x18 {"
      },
      {
        "lineNumber": 1837,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1838,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Saturation_icon_18x18\", resourceCulture);"
      },
      {
        "lineNumber": 1839,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1840,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1841,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1842,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1843,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1844,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1845,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1846,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Save_icon {"
      },
      {
        "lineNumber": 1847,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1848,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Save_icon\", resourceCulture);"
      },
      {
        "lineNumber": 1849,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1850,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1851,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1852,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1853,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1854,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1855,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1856,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap SaveLab {"
      },
      {
        "lineNumber": 1857,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1858,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"SaveLab\", resourceCulture);"
      },
      {
        "lineNumber": 1859,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1860,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1861,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1862,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1863,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1864,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1865,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1866,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap SaveLabActionButton {"
      },
      {
        "lineNumber": 1867,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1868,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"SaveLabActionButton\", resourceCulture);"
      },
      {
        "lineNumber": 1869,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1870,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1871,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1872,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1873,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1874,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1875,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1876,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap SettingsGear {"
      },
      {
        "lineNumber": 1877,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1878,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"SettingsGear\", resourceCulture);"
      },
      {
        "lineNumber": 1879,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1880,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1881,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1882,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1883,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1884,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1885,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1886,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ShapesLab {"
      },
      {
        "lineNumber": 1887,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1888,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ShapesLab\", resourceCulture);"
      },
      {
        "lineNumber": 1889,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1890,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1891,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1892,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1893,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1894,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1895,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1896,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap SnapAwayIcon {"
      },
      {
        "lineNumber": 1897,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1898,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"SnapAwayIcon\", resourceCulture);"
      },
      {
        "lineNumber": 1899,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1900,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1901,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1902,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1903,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1904,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1905,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1906,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap SnapHorizontalIcon {"
      },
      {
        "lineNumber": 1907,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1908,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"SnapHorizontalIcon\", resourceCulture);"
      },
      {
        "lineNumber": 1909,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1910,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1911,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1912,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1913,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1914,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1915,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1916,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap SnapVerticalIcon {"
      },
      {
        "lineNumber": 1917,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1918,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"SnapVerticalIcon\", resourceCulture);"
      },
      {
        "lineNumber": 1919,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1920,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1921,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1922,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1923,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1924,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1925,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1926,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap SpeakTextContext {"
      },
      {
        "lineNumber": 1927,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1928,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"SpeakTextContext\", resourceCulture);"
      },
      {
        "lineNumber": 1929,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1930,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1931,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1932,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1933,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1934,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1935,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1936,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Spotlight {"
      },
      {
        "lineNumber": 1937,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1938,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Spotlight\", resourceCulture);"
      },
      {
        "lineNumber": 1939,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1940,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1941,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1942,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1943,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1944,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1945,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1946,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Stop {"
      },
      {
        "lineNumber": 1947,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1948,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Stop\", resourceCulture);"
      },
      {
        "lineNumber": 1949,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1950,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1951,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1952,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1953,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1954,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1955,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1956,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap SwapIcon {"
      },
      {
        "lineNumber": 1957,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1958,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"SwapIcon\", resourceCulture);"
      },
      {
        "lineNumber": 1959,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1960,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1961,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1962,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1963,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1964,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1965,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1966,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap SyncLab {"
      },
      {
        "lineNumber": 1967,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1968,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"SyncLab\", resourceCulture);"
      },
      {
        "lineNumber": 1969,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1970,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1971,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1972,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1973,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1974,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1975,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1976,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap SyncLabCopyButton {"
      },
      {
        "lineNumber": 1977,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1978,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"SyncLabCopyButton\", resourceCulture);"
      },
      {
        "lineNumber": 1979,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1980,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1981,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1982,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1983,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1984,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1985,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1986,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap SyncLabDeleteButton {"
      },
      {
        "lineNumber": 1987,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1988,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"SyncLabDeleteButton\", resourceCulture);"
      },
      {
        "lineNumber": 1989,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1990,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1991,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1992,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1993,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1994,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1995,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1996,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap SyncLabEditButton {"
      },
      {
        "lineNumber": 1997,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1998,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"SyncLabEditButton\", resourceCulture);"
      },
      {
        "lineNumber": 1999,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2000,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2001,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2002,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2003,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2004,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2005,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2006,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap SyncLabPasteButton {"
      },
      {
        "lineNumber": 2007,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2008,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"SyncLabPasteButton\", resourceCulture);"
      },
      {
        "lineNumber": 2009,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2010,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2011,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2012,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2013,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2014,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2015,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2016,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap TextColor_icon {"
      },
      {
        "lineNumber": 2017,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2018,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"TextColor_icon\", resourceCulture);"
      },
      {
        "lineNumber": 2019,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2020,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2021,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2022,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2023,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2024,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2025,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2026,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap TimerLab {"
      },
      {
        "lineNumber": 2027,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2028,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"TimerLab\", resourceCulture);"
      },
      {
        "lineNumber": 2029,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2030,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2031,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2032,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2033,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2034,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2035,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2036,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Tutorial {"
      },
      {
        "lineNumber": 2037,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2038,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Tutorial\", resourceCulture);"
      },
      {
        "lineNumber": 2039,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2040,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2041,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2042,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2043,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2044,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2045,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2046,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Up {"
      },
      {
        "lineNumber": 2047,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2048,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Up\", resourceCulture);"
      },
      {
        "lineNumber": 2049,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2050,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2051,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2052,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2053,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2054,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2055,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2056,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap UserGuide {"
      },
      {
        "lineNumber": 2057,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2058,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"UserGuide\", resourceCulture);"
      },
      {
        "lineNumber": 2059,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2060,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2061,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2062,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2063,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2064,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2065,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2066,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Zoom {"
      },
      {
        "lineNumber": 2067,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2068,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Zoom\", resourceCulture);"
      },
      {
        "lineNumber": 2069,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2070,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2071,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2072,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2073,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2074,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2075,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2076,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ZoomIn {"
      },
      {
        "lineNumber": 2077,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2078,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ZoomIn\", resourceCulture);"
      },
      {
        "lineNumber": 2079,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2080,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2081,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2082,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2083,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2084,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2085,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2086,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ZoomInContext {"
      },
      {
        "lineNumber": 2087,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2088,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ZoomInContext\", resourceCulture);"
      },
      {
        "lineNumber": 2089,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2090,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2091,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2092,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2093,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2094,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2095,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2096,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ZoomLab {"
      },
      {
        "lineNumber": 2097,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2098,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ZoomLab\", resourceCulture);"
      },
      {
        "lineNumber": 2099,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2100,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2101,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2102,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2103,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2104,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2105,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2106,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ZoomOut {"
      },
      {
        "lineNumber": 2107,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2108,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ZoomOut\", resourceCulture);"
      },
      {
        "lineNumber": 2109,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2110,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2111,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2112,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2113,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2114,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2115,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2116,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ZoomOutContext {"
      },
      {
        "lineNumber": 2117,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2118,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ZoomOutContext\", resourceCulture);"
      },
      {
        "lineNumber": 2119,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2120,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2121,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2122,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2123,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2124,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2125,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2126,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ZoomToArea {"
      },
      {
        "lineNumber": 2127,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2128,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ZoomToArea\", resourceCulture);"
      },
      {
        "lineNumber": 2129,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2130,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2131,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2132,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2133,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2134,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2135,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2136,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ZoomToAreaContext {"
      },
      {
        "lineNumber": 2137,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2138,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ZoomToAreaContext\", resourceCulture);"
      },
      {
        "lineNumber": 2139,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2140,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2141,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2142,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2143,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 10,
      "blewjy": 10,
      "-": 2123
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ShapesLab/CustomShapePane.Designer.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System.Drawing;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Forms;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ShapesLab"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    partial class CustomShapePane"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Required designer variable."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        private System.ComponentModel.IContainer components \u003d null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Clean up any resources being used."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"disposing\"\u003etrue if managed resources should be disposed; otherwise, false.\u003c/param\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override void Dispose(bool disposing)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            if (disposing \u0026\u0026 (components !\u003d null))"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                components.Dispose();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            base.Dispose(disposing);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Component Designer generated code"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Required method for Designer support - do not modify "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        /// the contents of this method with the code editor."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        private void InitializeComponent()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            this.components \u003d new System.ComponentModel.Container();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            this.shapeContextMenuStrip \u003d new System.Windows.Forms.ContextMenuStrip(this.components);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            this.addToSlideToolStripMenuItem \u003d new System.Windows.Forms.ToolStripMenuItem();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            this.editNameToolStripMenuItem \u003d new System.Windows.Forms.ToolStripMenuItem();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            this.moveShapeToolStripMenuItem \u003d new System.Windows.Forms.ToolStripMenuItem();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            this.copyToToolStripMenuItem \u003d new System.Windows.Forms.ToolStripMenuItem();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            this.removeShapeToolStripMenuItem \u003d new System.Windows.Forms.ToolStripMenuItem();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            this.flowlayoutContextMenuStrip \u003d new System.Windows.Forms.ContextMenuStrip(this.components);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            this.addCategoryToolStripMenuItem \u003d new System.Windows.Forms.ToolStripMenuItem();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            this.removeCategoryToolStripMenuItem \u003d new System.Windows.Forms.ToolStripMenuItem();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            this.renameCategoryToolStripMenuItem \u003d new System.Windows.Forms.ToolStripMenuItem();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            this.setAsDefaultToolStripMenuItem \u003d new System.Windows.Forms.ToolStripMenuItem();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            this.importCategoryToolStripMenuItem \u003d new System.Windows.Forms.ToolStripMenuItem();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            this.importShapesToolStripMenuItem \u003d new System.Windows.Forms.ToolStripMenuItem();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            this.settingsToolStripMenuItem \u003d new System.Windows.Forms.ToolStripMenuItem();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            this.label1 \u003d new System.Windows.Forms.Label();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            this.categoryBox \u003d new System.Windows.Forms.ComboBox();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            this.flowPanelHolder \u003d new System.Windows.Forms.Panel();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.myShapeFlowLayout \u003d new PowerPointLabs.BufferedFlowLayoutPanel();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            this.singleShapeDownloadLink \u003d new System.Windows.Forms.LinkLabel();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            this.addShapeButton \u003d new System.Windows.Forms.Button();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            this.label2 \u003d new System.Windows.Forms.Label();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            this.toolTip1 \u003d new System.Windows.Forms.ToolTip(this.components);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            this.shapeContextMenuStrip.SuspendLayout();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            this.flowlayoutContextMenuStrip.SuspendLayout();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            this.flowPanelHolder.SuspendLayout();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            this.SuspendLayout();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            // shapeContextMenuStrip"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            this.shapeContextMenuStrip.ImageScalingSize \u003d new System.Drawing.Size(20, 20);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            this.shapeContextMenuStrip.Items.AddRange(new System.Windows.Forms.ToolStripItem[] {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            this.addToSlideToolStripMenuItem,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            this.editNameToolStripMenuItem,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            this.moveShapeToolStripMenuItem,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            this.copyToToolStripMenuItem,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            this.removeShapeToolStripMenuItem});"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            this.shapeContextMenuStrip.Name \u003d \"contextMenuStrip\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.shapeContextMenuStrip.Size \u003d new System.Drawing.Size(76, 114);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            this.shapeContextMenuStrip.Opening +\u003d new System.ComponentModel.CancelEventHandler(this.ThumbnailContextMenuStripOpening);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            this.shapeContextMenuStrip.ItemClicked +\u003d new System.Windows.Forms.ToolStripItemClickedEventHandler(this.ThumbnailContextMenuStripItemClicked);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            // addToSlideToolStripMenuItem"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            this.addToSlideToolStripMenuItem.Name \u003d \"addToSlideToolStripMenuItem\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.addToSlideToolStripMenuItem.Size \u003d new System.Drawing.Size(75, 22);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            // editNameToolStripMenuItem"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            this.editNameToolStripMenuItem.Name \u003d \"editNameToolStripMenuItem\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.editNameToolStripMenuItem.Size \u003d new System.Drawing.Size(75, 22);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            // moveShapeToolStripMenuItem"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            this.moveShapeToolStripMenuItem.Name \u003d \"moveShapeToolStripMenuItem\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.moveShapeToolStripMenuItem.Size \u003d new System.Drawing.Size(75, 22);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            this.moveShapeToolStripMenuItem.Click +\u003d new System.EventHandler(this.MoveContextMenuStripOnEvent);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            this.moveShapeToolStripMenuItem.MouseEnter +\u003d new System.EventHandler(this.MoveContextMenuStripOnEvent);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            // copyToToolStripMenuItem"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            this.copyToToolStripMenuItem.Name \u003d \"copyToToolStripMenuItem\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.copyToToolStripMenuItem.Size \u003d new System.Drawing.Size(75, 22);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            this.copyToToolStripMenuItem.Click +\u003d new System.EventHandler(this.CopyContextMenuStripOnEvent);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            this.copyToToolStripMenuItem.MouseEnter +\u003d new System.EventHandler(this.CopyContextMenuStripOnEvent);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            // removeShapeToolStripMenuItem"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            this.removeShapeToolStripMenuItem.Name \u003d \"removeShapeToolStripMenuItem\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.removeShapeToolStripMenuItem.Size \u003d new System.Drawing.Size(75, 22);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            // flowlayoutContextMenuStrip"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            this.flowlayoutContextMenuStrip.ImageScalingSize \u003d new System.Drawing.Size(20, 20);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            this.flowlayoutContextMenuStrip.Items.AddRange(new System.Windows.Forms.ToolStripItem[] {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            this.addCategoryToolStripMenuItem,"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            this.removeCategoryToolStripMenuItem,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            this.renameCategoryToolStripMenuItem,"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            this.setAsDefaultToolStripMenuItem,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            this.importCategoryToolStripMenuItem,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            this.importShapesToolStripMenuItem,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            this.settingsToolStripMenuItem});"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            this.flowlayoutContextMenuStrip.Name \u003d \"flowlayoutContextMenuStrip\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.flowlayoutContextMenuStrip.Size \u003d new System.Drawing.Size(76, 158);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            this.flowlayoutContextMenuStrip.ItemClicked +\u003d new System.Windows.Forms.ToolStripItemClickedEventHandler(this.FlowlayoutContextMenuStripItemClicked);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            // addCategoryToolStripMenuItem"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            this.addCategoryToolStripMenuItem.Name \u003d \"addCategoryToolStripMenuItem\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.addCategoryToolStripMenuItem.Size \u003d new System.Drawing.Size(75, 22);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            // removeCategoryToolStripMenuItem"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            this.removeCategoryToolStripMenuItem.Name \u003d \"removeCategoryToolStripMenuItem\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.removeCategoryToolStripMenuItem.Size \u003d new System.Drawing.Size(75, 22);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            // renameCategoryToolStripMenuItem"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            this.renameCategoryToolStripMenuItem.Name \u003d \"renameCategoryToolStripMenuItem\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.renameCategoryToolStripMenuItem.Size \u003d new System.Drawing.Size(75, 22);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            // setAsDefaultToolStripMenuItem"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            this.setAsDefaultToolStripMenuItem.Name \u003d \"setAsDefaultToolStripMenuItem\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.setAsDefaultToolStripMenuItem.Size \u003d new System.Drawing.Size(75, 22);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            // importCategoryToolStripMenuItem"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            this.importCategoryToolStripMenuItem.Name \u003d \"importCategoryToolStripMenuItem\";"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.importCategoryToolStripMenuItem.Size \u003d new System.Drawing.Size(75, 22);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            // importShapesToolStripMenuItem"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            this.importShapesToolStripMenuItem.Name \u003d \"importShapesToolStripMenuItem\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.importShapesToolStripMenuItem.Size \u003d new System.Drawing.Size(75, 22);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "            // settingsToolStripMenuItem"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            this.settingsToolStripMenuItem.Name \u003d \"settingsToolStripMenuItem\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.settingsToolStripMenuItem.Size \u003d new System.Drawing.Size(75, 22);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            // label1"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            this.label1.AutoSize \u003d true;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            this.label1.Font \u003d new System.Drawing.Font(\"Verdana\", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.label1.Location \u003d new System.Drawing.Point(38, 162);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.label1.Margin \u003d new System.Windows.Forms.Padding(6, 0, 6, 0);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "            this.label1.Name \u003d \"label1\";"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.label1.Size \u003d new System.Drawing.Size(111, 26);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            this.label1.TabIndex \u003d 2;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            this.label1.Text \u003d \"Category\";"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            // categoryBox"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            this.categoryBox.Anchor \u003d ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) "
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            | System.Windows.Forms.AnchorStyles.Right)));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            this.categoryBox.DrawMode \u003d System.Windows.Forms.DrawMode.OwnerDrawFixed;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            this.categoryBox.DropDownStyle \u003d System.Windows.Forms.ComboBoxStyle.DropDownList;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.categoryBox.Location \u003d new System.Drawing.Point(176, 158);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.categoryBox.Margin \u003d new System.Windows.Forms.Padding(6, 6, 6, 6);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            this.categoryBox.Name \u003d \"categoryBox\";"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.categoryBox.Size \u003d new System.Drawing.Size(624, 32);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            this.categoryBox.TabIndex \u003d 3;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            this.categoryBox.DrawItem +\u003d new System.Windows.Forms.DrawItemEventHandler(this.CategoryBoxOwnerDraw);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            this.categoryBox.SelectedIndexChanged +\u003d new System.EventHandler(this.CategoryBoxSelectedIndexChanged);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            // flowPanelHolder"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "            this.flowPanelHolder.Anchor \u003d ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) "
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "            | System.Windows.Forms.AnchorStyles.Right)));"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            this.flowPanelHolder.Controls.Add(this.myShapeFlowLayout);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.flowPanelHolder.Location \u003d new System.Drawing.Point(6, 212);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.flowPanelHolder.Margin \u003d new System.Windows.Forms.Padding(6, 6, 6, 6);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            this.flowPanelHolder.Name \u003d \"flowPanelHolder\";"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.flowPanelHolder.Size \u003d new System.Drawing.Size(830, 871);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "            this.flowPanelHolder.TabIndex \u003d 4;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            // myShapeFlowLayout"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            // "
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.myShapeFlowLayout.AutoScroll \u003d true;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.myShapeFlowLayout.AutoSizeMode \u003d System.Windows.Forms.AutoSizeMode.GrowAndShrink;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.myShapeFlowLayout.ContextMenuStrip \u003d this.flowlayoutContextMenuStrip;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.myShapeFlowLayout.Dock \u003d System.Windows.Forms.DockStyle.Fill;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.myShapeFlowLayout.Location \u003d new System.Drawing.Point(0, 0);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.myShapeFlowLayout.Margin \u003d new System.Windows.Forms.Padding(6, 6, 6, 6);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.myShapeFlowLayout.MinimumSize \u003d new System.Drawing.Size(240, 104);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.myShapeFlowLayout.Name \u003d \"myShapeFlowLayout\";"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.myShapeFlowLayout.Size \u003d new System.Drawing.Size(830, 871);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.myShapeFlowLayout.TabIndex \u003d 2;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            // "
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "            // singleShapeDownloadLink"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            this.singleShapeDownloadLink.AutoSize \u003d true;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.singleShapeDownloadLink.Location \u003d new System.Drawing.Point(6, 1088);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.singleShapeDownloadLink.Margin \u003d new System.Windows.Forms.Padding(6, 0, 6, 0);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            this.singleShapeDownloadLink.Name \u003d \"singleShapeDownloadLink\";"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.singleShapeDownloadLink.Size \u003d new System.Drawing.Size(233, 25);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "            this.singleShapeDownloadLink.TabIndex \u003d 5;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "            this.singleShapeDownloadLink.TabStop \u003d true;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            this.singleShapeDownloadLink.Text \u003d \"Find more shapes here\";"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            this.singleShapeDownloadLink.Visible \u003d false;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "            this.singleShapeDownloadLink.VisitedLinkColor \u003d System.Drawing.Color.Blue;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "            // addShapeButton"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "            this.addShapeButton.BackColor \u003d System.Drawing.SystemColors.Control;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "            this.addShapeButton.BackgroundImage \u003d global::PowerPointLabs.Properties.Resources.AddToCustomShapes;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "            this.addShapeButton.BackgroundImageLayout \u003d System.Windows.Forms.ImageLayout.Center;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "            this.addShapeButton.FlatAppearance.BorderColor \u003d System.Drawing.Color.Black;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "            this.addShapeButton.FlatStyle \u003d System.Windows.Forms.FlatStyle.Flat;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.addShapeButton.Location \u003d new System.Drawing.Point(8, 13);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.addShapeButton.Margin \u003d new System.Windows.Forms.Padding(4, 4, 4, 4);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "            this.addShapeButton.Name \u003d \"addShapeButton\";"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.addShapeButton.Size \u003d new System.Drawing.Size(88, 88);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "            this.addShapeButton.TabIndex \u003d 6;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "            this.addShapeButton.UseVisualStyleBackColor \u003d false;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "            this.addShapeButton.Click +\u003d new System.EventHandler(this.AddShapeButton_Click);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "            // label2"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "            this.label2.AutoSize \u003d true;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "            this.label2.Font \u003d new System.Drawing.Font(\"Verdana\", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.label2.Location \u003d new System.Drawing.Point(26, 110);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.label2.Margin \u003d new System.Windows.Forms.Padding(6, 0, 6, 0);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "            this.label2.Name \u003d \"label2\";"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.label2.Size \u003d new System.Drawing.Size(55, 26);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "            this.label2.TabIndex \u003d 7;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "            this.label2.Text \u003d \"Add\";"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "            // CustomShapePane"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.AutoScaleDimensions \u003d new System.Drawing.SizeF(12F, 25F);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "            this.AutoScaleMode \u003d System.Windows.Forms.AutoScaleMode.Font;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "            this.ContextMenuStrip \u003d this.flowlayoutContextMenuStrip;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "            this.Controls.Add(this.label2);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "            this.Controls.Add(this.addShapeButton);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "            this.Controls.Add(this.singleShapeDownloadLink);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "            this.Controls.Add(this.flowPanelHolder);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "            this.Controls.Add(this.categoryBox);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "            this.Controls.Add(this.label1);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.Margin \u003d new System.Windows.Forms.Padding(6, 6, 6, 6);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "            this.Name \u003d \"CustomShapePane\";"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.Size \u003d new System.Drawing.Size(842, 1150);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "            this.Click +\u003d new System.EventHandler(this.CustomShapePaneClick);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.MouseMove +\u003d new System.Windows.Forms.MouseEventHandler(this.CustomShapePane_MouseMove);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "            this.shapeContextMenuStrip.ResumeLayout(false);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "            this.flowlayoutContextMenuStrip.ResumeLayout(false);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "            this.flowPanelHolder.ResumeLayout(false);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "            this.ResumeLayout(false);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "            this.PerformLayout();"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "        private System.Windows.Forms.ContextMenuStrip shapeContextMenuStrip;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "        private System.Windows.Forms.ToolStripMenuItem removeShapeToolStripMenuItem;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "        private System.Windows.Forms.ToolStripMenuItem editNameToolStripMenuItem;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "        private readonly Label _noShapeLabelFirstLine \u003d new Label"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "            AutoSize \u003d true,"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "            Font \u003d"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "                new Font(\"Arial\", 15.75F, FontStyle.Bold, GraphicsUnit.Point,"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "                         0),"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "            ForeColor \u003d SystemColors.ButtonShadow,"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "            Location \u003d new Point((int)(81 * Utils.GraphicsUtil.GetDpiScale()),"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (int)(11 * Utils.GraphicsUtil.GetDpiScale())),"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "            Name \u003d \"noShapeLabel\","
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "            Size \u003d new Size(212, 24),"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "            Text \u003d ShapesLabText.ErrorNoShapeTextFirstLine"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "        private readonly Label _noShapeLabelSecondLine \u003d new Label"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "            AutoSize \u003d true,"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "            Font \u003d"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "                new Font(\"Arial\", 10F, FontStyle.Bold, GraphicsUnit.Point,"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "                         0),"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "            ForeColor \u003d SystemColors.ButtonShadow,"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "            Location \u003d new Point((int)(11 * Utils.GraphicsUtil.GetDpiScale()),"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (int)(41 * Utils.GraphicsUtil.GetDpiScale())),"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "            Name \u003d \"noShapeLabel\","
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "            Size \u003d new Size(242, 24),"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "            Text \u003d ShapesLabText.ErrorNoShapeTextSecondLine"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "        private readonly Panel _noShapePanel \u003d new Panel"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "            AutoSize \u003d true,"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "            Name \u003d \"noShapePanel\","
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "            Size \u003d new Size(392, 100),"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "            Margin \u003d new Padding(0, 0, 0, 0)"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "        private ToolStripMenuItem addToSlideToolStripMenuItem;"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "        private ContextMenuStrip flowlayoutContextMenuStrip;"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "        private ToolStripMenuItem settingsToolStripMenuItem;"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "        private Label label1;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        private ComboBox categoryBox;"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "        private Panel flowPanelHolder;"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "        private ToolStripMenuItem addCategoryToolStripMenuItem;"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "        private ToolStripMenuItem moveShapeToolStripMenuItem;"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "        private ToolStripMenuItem removeCategoryToolStripMenuItem;"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "        private ToolStripMenuItem renameCategoryToolStripMenuItem;"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "        private ToolStripMenuItem copyToToolStripMenuItem;"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "        private ToolStripMenuItem setAsDefaultToolStripMenuItem;"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "        private ToolStripMenuItem importCategoryToolStripMenuItem;"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "        private BufferedFlowLayoutPanel myShapeFlowLayout;"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "        private ToolStripMenuItem importShapesToolStripMenuItem;"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "        private LinkLabel singleShapeDownloadLink;"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "        private Button addShapeButton;"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "        private Label label2;"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "        private ToolTip toolTip1;"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 50,
      "-": 280
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ShapesLab/CustomShapePane.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Diagnostics;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.IO;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Linq;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Forms;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ShapesLab.Views;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ShortcutsLab;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Views;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "using PPExtraEventHelper;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "using Font \u003d System.Drawing.Font;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "using GraphicsUtil \u003d PowerPointLabs.Utils.GraphicsUtil;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "using Point \u003d System.Drawing.Point;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ShapesLab"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class CustomShapePane : UserControl"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "#pragma warning disable 0618"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string ImportLibraryFileDialogFilter \u003d"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            \"PowerPointLabs Shapes File|*.pptlabsshapes;*.pptx\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string ImportShapesFileDialogFilter \u003d"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            \"PowerPointLabs Shape File|*.pptlabsshape;*.pptx\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string ImportFileNameNoExtension \u003d \"import\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string ImportFileCopyName \u003d ImportFileNameNoExtension + \".pptx\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        private readonly int _doubleClickTimeSpan \u003d SystemInformation.DoubleClickTime;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        private int _clicks;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool _firstTimeLoading \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool _firstClick \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool _clickOnSelected;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool _isLeftButton;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        private bool _toolTipShown \u003d false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool _isPanelMouseDown;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool _isPanelDrawingFinish;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        private Point _startPosition;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        private Point _curPosition;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        private readonly SelectionRectangle _selectRect \u003d new SelectionRectangle();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        private readonly BindingSource _categoryBinding;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        private List\u003cLabeledThumbnail\u003e _selectedThumbnail \u003d new List\u003cLabeledThumbnail\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        private List\u003cLabeledThumbnail\u003e _selectingThumbnail \u003d new List\u003cLabeledThumbnail\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        private readonly Timer _timer;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        private readonly Comparers.AtomicNumberStringCompare _stringComparer \u003d new Comparers.AtomicNumberStringCompare();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        # region Properties"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        public List\u003cstring\u003e Categories { get; private set; }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        public string CurrentCategory { get; set; }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        public string CurrentShapeFullName"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            get { return CurrentShapeFolderPath + @\"\\\" + CurrentShapeNameWithoutExtension + \".png\"; }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        public string CurrentShapeNameWithoutExtension"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                if (_selectedThumbnail \u003d\u003d null ||"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                    _selectedThumbnail.Count \u003d\u003d 0)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                    return null;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                return _selectedThumbnail[0].NameLabel;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        public List\u003cstring\u003e Shapes"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                List\u003cstring\u003e shapeList \u003d new List\u003cstring\u003e();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                if (myShapeFlowLayout.Controls.Count \u003d\u003d 0 ||"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                    myShapeFlowLayout.Controls.Contains(_noShapePanel))"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                    return shapeList;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                shapeList.AddRange(from LabeledThumbnail labelThumbnail in myShapeFlowLayout.Controls"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                                   select labelThumbnail.NameLabel);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                return shapeList;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        public string ShapeRootFolderPath { get; private set; }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        public string CurrentShapeFolderPath"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            get { return ShapeRootFolderPath + @\"\\\" + CurrentCategory; }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override CreateParams CreateParams"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                CreateParams createParams \u003d base.CreateParams;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                // do this optimization only for office 2010 since painting speed on 2013 is"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                // really slow"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                if (Globals.ThisAddIn.IsApplicationVersion2010())"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                    createParams.ExStyle |\u003d (int)Native.Message.WS_EX_COMPOSITED;  // Turn on WS_EX_COMPOSITED"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                return createParams;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        # endregion"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        # region Constructors"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        public CustomShapePane(string shapeRootFolderPath, string defaultShapeCategoryName)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            SetStyle(ControlStyles.UserPaint | ControlStyles.DoubleBuffer | ControlStyles.AllPaintingInWmPaint, true);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            InitToolTipControl();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeContextMenu();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRootFolderPath \u003d shapeRootFolderPath;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            CurrentCategory \u003d defaultShapeCategoryName;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            Categories \u003d new List\u003cstring\u003e(Globals.ThisAddIn.ShapePresentation.Categories);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            _categoryBinding \u003d new BindingSource { DataSource \u003d Categories };"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            categoryBox.DataSource \u003d _categoryBinding;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 0; i \u003c Categories.Count; i++)"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "                if (Categories[i] \u003d\u003d defaultShapeCategoryName)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                    categoryBox.SelectedIndex \u003d i;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            _timer \u003d new Timer { Interval \u003d _doubleClickTimeSpan };"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            _timer.Tick +\u003d TimerTickHandler;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            myShapeFlowLayout.AutoSize \u003d true;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            myShapeFlowLayout.MouseEnter +\u003d FlowLayoutMouseEnterHandler;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            myShapeFlowLayout.MouseDown +\u003d FlowLayoutMouseDownHandler;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            myShapeFlowLayout.MouseUp +\u003d FlowLayoutMouseUpHandler;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            myShapeFlowLayout.MouseMove +\u003d FlowLayoutMouseMoveHandler;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            singleShapeDownloadLink.LinkClicked +\u003d (s, e) \u003d\u003e Process.Start(CommonText.SingleShapeDownloadUrl);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        #region API"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        public void AddShapeFromSelection(Selection selection, ThisAddIn addIn)"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            // first of all we check if the shape gallery has been opened correctly"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!addIn.ShapePresentation.Opened)"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(CommonText.ErrorShapeGalleryInit);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            // Check this so that it is the same requirements as ConvertToPicture which is used when adding shapes"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!ShapeUtil.IsSelectionShapeOrText(selection))"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                MessageBox.Show(new Form() { TopMost \u003d true },"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    ShapesLabText.ErrorAddSelectionInvalid, ShapesLabText.ErrorDialogTitle);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            // Finish checks, will add shape(s) from selection"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange selectedShapes \u003d selection.ShapeRange;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            if (selection.HasChildShapeRange)"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "                selectedShapes \u003d selection.ChildShapeRange;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "            // Utilises deprecated classes as CustomShapePane does not utilise ActionFramework"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide currentSlide \u003d PowerPointCurrentPresentationInfo.CurrentSlide;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointPresentation pres \u003d PowerPointPresentation.Current;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            // add shape into shape gallery first to reduce flicker"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "            string shapeName \u003d addIn.ShapePresentation.AddShape(pres, currentSlide, selectedShapes, selectedShapes[1].Name);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "            // add the selection into pane and save it as .png locally"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            string shapeFullName \u003d Path.Combine(CurrentShapeFolderPath, shapeName + \".png\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            bool success \u003d ConvertToPicture.ConvertAndSave(selectedShapes, shapeFullName);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!success)"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "            // sync the shape among all opening panels"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            addIn.SyncShapeAdd(shapeName, shapeFullName, CurrentCategory);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "            // finally, add the shape into the panel and waiting for name editing"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "            AddCustomShape(shapeName, shapeFullName, true);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        public void AddCustomShape(string shapeName, string shapePath, bool immediateEditing)"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "            DehighlightSelected();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "            LabeledThumbnail labeledThumbnail \u003d new LabeledThumbnail(shapePath, shapeName) { ContextMenuStrip \u003d shapeContextMenuStrip };"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "            labeledThumbnail.Click +\u003d LabeledThumbnailClick;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "            labeledThumbnail.DoubleClick +\u003d LabeledThumbnailDoubleClick;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "            labeledThumbnail.NameEditFinish +\u003d NameEditFinishHandler;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "            myShapeFlowLayout.Controls.Add(labeledThumbnail);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "            if (myShapeFlowLayout.Controls.Contains(_noShapePanel))"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "                myShapeFlowLayout.Controls.Remove(_noShapePanel);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "            myShapeFlowLayout.ScrollControlIntoView(labeledThumbnail);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "            _selectedThumbnail.Insert(0, labeledThumbnail);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "            if (immediateEditing)"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "                labeledThumbnail.StartNameEdit();"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "                // the shape must be sorted immediately since the name has been"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "                // setteled"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "                ReorderThumbnail(labeledThumbnail);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "        public void RemoveCustomShape(string shapeName)"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "            LabeledThumbnail labeledThumbnail \u003d FindLabeledThumbnail(shapeName);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "            if (labeledThumbnail \u003d\u003d null)"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "            // remove shape from task pane"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "            RemoveThumbnail(labeledThumbnail);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "        public void RenameCustomShape(string oldShapeName, string newShapeName)"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "            LabeledThumbnail labeledThumbnail \u003d FindLabeledThumbnail(oldShapeName);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "            if (labeledThumbnail \u003d\u003d null)"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "            labeledThumbnail.RenameWithoutEdit(newShapeName);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "            // renaming will possibly change the relative shape order, therefore we need"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "            // to reorder the labeled thumbnail"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "            ReorderThumbnail(labeledThumbnail);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "            // highlight the thumbnail again in case it is the selected shape"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "            if (labeledThumbnail \u003d\u003d _selectedThumbnail[0])"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "                labeledThumbnail.Highlight();"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "        public void PaneReload(bool forceReload \u003d false)"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!_firstTimeLoading \u0026\u0026 !forceReload)"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "            // double buffer starts"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "            if (Globals.ThisAddIn.IsApplicationVersion2013())"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "                GraphicsUtil.SuspendDrawing(myShapeFlowLayout);"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "            // emptize the panel and load shapes from folder"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "            myShapeFlowLayout.Controls.Clear();"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "            PrepareShapes();"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "            // scroll the view to show the first item, and focus the flowlayout to enable"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "            // scroll if applicable"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "            myShapeFlowLayout.ScrollControlIntoView(myShapeFlowLayout.Controls[0]);"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "            myShapeFlowLayout.Focus();"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "            // double buffer ends"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "            if (Globals.ThisAddIn.IsApplicationVersion2013())"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "                GraphicsUtil.ResumeDrawing(myShapeFlowLayout);"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "            _firstTimeLoading \u003d false;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        public void UpdateOnSelectionChange(Selection selection)"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            SelectionChanged(selection);"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Functional Test APIs"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "        public LabeledThumbnail GetLabeledThumbnail(string labelName)"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "            return FindLabeledThumbnail(labelName);"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ImportLibrary(string pathToLibrary)"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "            ImportShapes(pathToLibrary, fromLibrary: true);"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ImportShape(string pathToShape)"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "            ImportShapes(pathToShape, fromLibrary: false);"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "        public Presentation GetShapeGallery()"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "            return Globals.ThisAddIn.ShapePresentation.Presentation;"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "        public Button GetAddShapeButton()"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "            return addShapeButton;"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "        # endregion"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "        # region Helper Functions"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ClickTimerReset()"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "            _clicks \u003d 0;"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "            _clickOnSelected \u003d false;"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "            _firstClick \u003d true;"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "            _isLeftButton \u003d false;"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ContextMenuStripAddClicked()"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "            Globals.ThisAddIn.Application.StartNewUndoEntry();"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide currentSlide \u003d PowerPointCurrentPresentationInfo.CurrentSlide;"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "            // Utilises deprecated PowerPointPresentation class as CustomShapePane does not utilise ActionFramework"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointPresentation pres \u003d PowerPointPresentation.Current;"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "            if (currentSlide \u003d\u003d null)"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(ShapesLabText.ErrorViewTypeNotSupported);"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "            ClipboardUtil.RestoreClipboardAfterAction(() \u003d\u003e"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "                // all selected shape will be added to the slide"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "                Globals.ThisAddIn.ShapePresentation.CopyShape(_selectedThumbnail.Select(thumbnail \u003d\u003e thumbnail.NameLabel));"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "                return currentSlide.Shapes.Paste();"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "            }, pres, currentSlide);"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ContextMenuStripAddCategoryClicked()"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapesLabCategoryInfoDialogBox categoryInfoDialog \u003d new ShapesLabCategoryInfoDialogBox(string.Empty);"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "            categoryInfoDialog.DialogConfirmedHandler +\u003d (string newCategoryName) \u003d\u003e"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "                Globals.ThisAddIn.ShapePresentation.AddCategory(newCategoryName);"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "                _categoryBinding.Add(newCategoryName);"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "                categoryBox.SelectedIndex \u003d _categoryBinding.Count - 1;"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "            categoryInfoDialog.ShowDialog();"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "            myShapeFlowLayout.Focus();"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ContextMenuStripEditClicked()"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_selectedThumbnail \u003d\u003d null)"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(ShapesLabText.ErrorNoPanelSelected);"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "            // dehighlight all thumbnails except the first one"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "            while (_selectedThumbnail.Count \u003e 1)"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "                _selectedThumbnail[1].DeHighlight();"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "                _selectedThumbnail.RemoveAt(1);"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "            _selectedThumbnail[0].StartNameEdit();"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ContextMenuStripImportCategoryClicked()"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "            OpenFileDialog fileDialog \u003d new OpenFileDialog"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "                Filter \u003d ImportLibraryFileDialogFilter,"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "                Multiselect \u003d false,"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "                Title \u003d ShapesLabText.ImportLibraryFileDialogTitle"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "            flowlayoutContextMenuStrip.Hide();"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "            if (fileDialog.ShowDialog() \u003d\u003d DialogResult.Cancel)"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "            ImportShapes(fileDialog.FileName, true);"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "            MessageBox.Show(ShapesLabText.SuccessImport);"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ContextMenuStripImportShapesClicked()"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "            OpenFileDialog fileDialog \u003d new OpenFileDialog"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "                Filter \u003d ImportShapesFileDialogFilter,"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "                Multiselect \u003d true,"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "                Title \u003d ShapesLabText.ImportShapeFileDialogTitle"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "            flowlayoutContextMenuStrip.Hide();"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "            if (fileDialog.ShowDialog() \u003d\u003d DialogResult.Cancel)"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "            bool importSuccess \u003d fileDialog.FileNames.Aggregate(true,"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "                                                               (current, fileName) \u003d\u003e"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "                                                               ImportShapes(fileName, false) \u0026\u0026 current);"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!importSuccess)"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "            PaneReload(true);"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "            MessageBox.Show(ShapesLabText.SuccessImport);"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ContextMenuStripRemoveCategoryClicked()"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "            // remove the last category will not be entertained"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_categoryBinding.Count \u003d\u003d 1)"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(ShapesLabText.ErrorRemoveLastCategory);"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "            int categoryIndex \u003d categoryBox.SelectedIndex;"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "            string categoryName \u003d _categoryBinding[categoryIndex].ToString();"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "            string categoryPath \u003d Path.Combine(ShapeRootFolderPath, categoryName);"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "            bool isDefaultCategory \u003d Globals.ThisAddIn.ShapesLabConfig.DefaultCategory \u003d\u003d CurrentCategory;"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isDefaultCategory)"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogResult result \u003d"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "                    MessageBox.Show(ShapesLabText.RemoveDefaultCategoryMessage,"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "                                    ShapesLabText.RemoveDefaultCategoryCaption,"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "                                    MessageBoxButtons.OKCancel);"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "                if (result \u003d\u003d DialogResult.Cancel)"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "            // remove current category in shape gallery"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "            Globals.ThisAddIn.ShapePresentation.RemoveCategory();"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "            // remove category on the disk"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "            FileDir.DeleteFolder(categoryPath);"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "            _categoryBinding.RemoveAt(categoryIndex);"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "            // RemoveAt may NOT change the index, so we need to manually set the default category here"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "            if (Globals.ThisAddIn.ShapePresentation.DefaultCategory \u003d\u003d null)"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "                categoryIndex \u003d categoryBox.SelectedIndex;"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "                categoryName \u003d _categoryBinding[categoryIndex].ToString();"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "                CurrentCategory \u003d categoryName;"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "                Globals.ThisAddIn.ShapePresentation.DefaultCategory \u003d categoryName;"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "                PaneReload(true);"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isDefaultCategory)"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "                Globals.ThisAddIn.ShapesLabConfig.DefaultCategory \u003d (string)_categoryBinding[0];"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ContextMenuStripRemoveClicked()"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_selectedThumbnail \u003d\u003d null ||"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "                _selectedThumbnail.Count \u003d\u003d 0)"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(ShapesLabText.ErrorNoPanelSelected);"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "            GraphicsUtil.SuspendDrawing(myShapeFlowLayout);"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "            while (_selectedThumbnail.Count \u003e 0)"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "                LabeledThumbnail thumbnail \u003d _selectedThumbnail[0];"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "                string removedShapename \u003d thumbnail.NameLabel;"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "                // remove shape from shape gallery"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "                Globals.ThisAddIn.ShapePresentation.RemoveShape(CurrentShapeNameWithoutExtension);"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "                // remove shape from disk and shape gallery"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "                File.Delete(CurrentShapeFullName);"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "                // remove shape from task pane"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "                RemoveThumbnail(thumbnail, false);"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "                // sync shape removing among all task panes"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "                Globals.ThisAddIn.SyncShapeRemove(removedShapename, CurrentCategory);"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "                // remove from selected collection"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "                _selectedThumbnail.RemoveAt(0);"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "            GraphicsUtil.ResumeDrawing(myShapeFlowLayout);"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ContextMenuStripRenameCategoryClicked()"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapesLabCategoryInfoDialogBox categoryInfoDialog \u003d new ShapesLabCategoryInfoDialogBox(string.Empty);"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "            categoryInfoDialog.DialogConfirmedHandler +\u003d (string newCategoryName) \u003d\u003e"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "                // if current category is the default category, change ShapeConfig"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "                if (Globals.ThisAddIn.ShapesLabConfig.DefaultCategory \u003d\u003d CurrentCategory)"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "                    Globals.ThisAddIn.ShapesLabConfig.DefaultCategory \u003d newCategoryName;"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "                // rename the category in ShapeGallery"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "                Globals.ThisAddIn.ShapePresentation.RenameCategory(newCategoryName);"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "                // rename the category on the disk"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "                string newPath \u003d Path.Combine(ShapeRootFolderPath, newCategoryName);"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "                try"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "                    Directory.Move(CurrentShapeFolderPath, newPath);"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "                catch (Exception)"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "                    // this may occur when the newCategoryName.tolower() \u003d\u003d oldCategoryName.tolower()"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "                // rename the category in combo box"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "                int categoryIndex \u003d categoryBox.SelectedIndex;"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "                _categoryBinding[categoryIndex] \u003d newCategoryName;"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "                // update current category reference"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "                CurrentCategory \u003d newCategoryName;"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "            categoryInfoDialog.ShowDialog();"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "            myShapeFlowLayout.Focus();"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ContextMenuStripSetAsDefaultCategoryClicked()"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "            Globals.ThisAddIn.ShapesLabConfig.DefaultCategory \u003d CurrentCategory;"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "            categoryBox.Refresh();"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "            MessageBox.Show(string.Format(ShapesLabText.SuccessSetAsDefaultCategory, CurrentCategory));"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ContextMenuStripSettingsClicked()"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapesLabSettingsDialogBox settingsDialog \u003d new ShapesLabSettingsDialogBox(ShapeRootFolderPath);"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "            settingsDialog.DialogConfirmedHandler +\u003d (string newSavePath) \u003d\u003e"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!MigrateShapeFolder(ShapeRootFolderPath, newSavePath))"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "                ShapesLabSettings.SaveFolderPath \u003d newSavePath;"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show("
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "                    string.Format(ShapesLabText.SuccessSaveLocationChanged, newSavePath),"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "                    ShapesLabText.SuccessSaveLocationChangedTitle, MessageBoxButtons.OK,"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "                    MessageBoxIcon.Information);"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "            settingsDialog.ShowDialog();"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "        private Rectangle CreateRect(Point loc1, Point loc2)"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "            RegulateSelectionRectPoint(ref loc1);"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "            RegulateSelectionRectPoint(ref loc2);"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "            Size size \u003d new Size(Math.Abs(loc2.X - loc1.X), Math.Abs(loc2.Y - loc1.Y));"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "            Rectangle rect \u003d new Rectangle(new Point(Math.Min(loc1.X, loc2.X), Math.Min(loc1.Y, loc2.Y)), size);"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "            return rect;"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "        private void DehighlightSelected()"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_selectedThumbnail \u003d\u003d null ||"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "                _selectedThumbnail.Count \u003d\u003d 0)"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (LabeledThumbnail thumbnail in _selectedThumbnail)"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "                thumbnail.DeHighlight();"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "            _selectedThumbnail.Clear();"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        private void DisableAddShapesButton()"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        {"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            addShapeButton.Enabled \u003d false;"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            addShapeButton.BackgroundImage \u003d Properties.Resources.AddToCustomShapesDisabled;"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            addShapeButton.FlatAppearance.BorderColor \u003d Color.LightGray;"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            addShapeButton.BackColor \u003d Color.LightGray;"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        private void EnableAddShapesButton()"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        {"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            addShapeButton.Enabled \u003d true;"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            addShapeButton.BackgroundImage \u003d Properties.Resources.AddToCustomShapes;"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            addShapeButton.FlatAppearance.BorderColor \u003d Color.Black;"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            addShapeButton.BackColor \u003d SystemColors.Control;"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "        private LabeledThumbnail FindLabeledThumbnail(string name)"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "            if (myShapeFlowLayout.Controls.Count \u003d\u003d 0 ||"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "                myShapeFlowLayout.Controls.Contains(_noShapePanel))"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "            return"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "                myShapeFlowLayout.Controls.Cast\u003cLabeledThumbnail\u003e().FirstOrDefault("
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "                    labeledThumbnail \u003d\u003e labeledThumbnail.NameLabel \u003d\u003d name);"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "        private int FindLabeledThumbnailIndex(string name)"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "            if (myShapeFlowLayout.Controls.Contains(_noShapePanel))"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": "                return -1;"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "            int totalControl \u003d myShapeFlowLayout.Controls.Count;"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "            int thisControlPosition \u003d -1;"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 0; i \u003c totalControl; i++)"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": "                LabeledThumbnail control \u003d myShapeFlowLayout.Controls[i] as LabeledThumbnail;"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "                if (control \u003d\u003d null)"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "                // skip itself"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": "                if (control.NameLabel \u003d\u003d name)"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "                    thisControlPosition \u003d i;"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "                if (_stringComparer.Compare(control.NameLabel, name) \u003e 0)"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "                    // immediate next control\u0027s name is still bigger than current control, do"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": "                    // not need to reorder"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (thisControlPosition !\u003d -1 \u0026\u0026"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "                        i - 1 \u003d\u003d thisControlPosition)"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "                        return thisControlPosition;"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": "                    // now we have 2 cases:"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": "                    // 1. the replace position is before the current position;"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "                    // 2. the replace position is behind the current position."
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": "                    // For case 1, we just need to set the current control\u0027s index to replace"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": "                    // position, Windows Form will handle the rest of control\u0027s order;"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "                    // For case 2, we need to set the current control\u0027s index to replace position - 1,"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "                    // this is because the shapes behind will move forward by 1 when the current"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": "                    // shape is moved."
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (thisControlPosition \u003d\u003d -1)"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": "                        // case 1, we haven\u0027t encountered the current control yet"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": "                        return i;"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": "                    // case 2, we have encountered the current control"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "                    return i - 1;"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "            return totalControl - 1;"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "        private void FirstClickOnThumbnail(LabeledThumbnail clickedThumbnail)"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_selectedThumbnail \u003d\u003d null)"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_selectedThumbnail.Count !\u003d 0)"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "                // this flag doesn\u0027t apply for multi selection, thus turn off"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "                _clickOnSelected \u003d false;"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "                // common part, end editing"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "                if (_selectedThumbnail[0].State \u003d\u003d LabeledThumbnail.Status.Editing)"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": "                    _selectedThumbnail[0].FinishNameEdit();"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": "                if (_selectedThumbnail[0] \u003d\u003d clickedThumbnail)"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "                    _clickOnSelected \u003d true;"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": "                MultiSelectClickHandler(clickedThumbnail);"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": "                clickedThumbnail.Highlight();"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": "                _selectedThumbnail.Insert(0, clickedThumbnail);"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "                FocusSelected();"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": "        private void FlowlayoutClick()"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_selectedThumbnail !\u003d null \u0026\u0026"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": "                _selectedThumbnail.Count !\u003d 0)"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": "                if (_selectedThumbnail[0].State \u003d\u003d LabeledThumbnail.Status.Editing)"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": "                    _selectedThumbnail[0].FinishNameEdit();"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "                    DehighlightSelected();"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "            myShapeFlowLayout.Focus();"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "        private void FocusSelected()"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": "            myShapeFlowLayout.ScrollControlIntoView(_selectedThumbnail[0]);"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "            _selectedThumbnail[0].Highlight();"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "        private void InitializeContextMenu()"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "            addToSlideToolStripMenuItem.Text \u003d ShapesLabText.ShapeContextStripAddToSlide;"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": "            editNameToolStripMenuItem.Text \u003d ShapesLabText.ShapeContextStripEditName;"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "            moveShapeToolStripMenuItem.Text \u003d ShapesLabText.ShapeContextStripMoveShape;"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "            removeShapeToolStripMenuItem.Text \u003d ShapesLabText.ShapeContextStripRemoveShape;"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": "            copyToToolStripMenuItem.Text \u003d ShapesLabText.ShapeContextStripCopyShape;"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": "            addCategoryToolStripMenuItem.Text \u003d ShapesLabText.CategoryContextStripAddCategory;"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "            removeCategoryToolStripMenuItem.Text \u003d ShapesLabText.CategoryContextStripRemoveCategory;"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": "            renameCategoryToolStripMenuItem.Text \u003d ShapesLabText.CategoryContextStripRenameCategory;"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": "            setAsDefaultToolStripMenuItem.Text \u003d ShapesLabText.CategoryContextStripSetAsDefaultCategory;"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": "            settingsToolStripMenuItem.Text \u003d ShapesLabText.CategoryContextStripCategorySettings;"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": "            importCategoryToolStripMenuItem.Text \u003d ShapesLabText.CategoryContextStripImportCategory;"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": "            importShapesToolStripMenuItem.Text \u003d ShapesLabText.CategoryContextStripImportShapes;"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (ToolStripMenuItem contextMenu in shapeContextMenuStrip.Items)"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": "                if (contextMenu.Text !\u003d ShapesLabText.ShapeContextStripMoveShape)"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "                    contextMenu.MouseEnter +\u003d MoveContextMenuStripLeaveEvent;"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": "                if (contextMenu.Text !\u003d ShapesLabText.ShapeContextStripCopyShape)"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "                    contextMenu.MouseEnter +\u003d CopyContextMenuStripLeaveEvent;"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool ImportShapes(string importFilePath, bool fromLibrary)"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointShapeGalleryPresentation importShapeGallery \u003d PrepareImportGallery(importFilePath, fromLibrary);"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!importShapeGallery.Open(withWindow: false, focus: false))"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "                    MessageBox.Show(ShapesLabText.ErrorImportFile);"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": "                else if (importShapeGallery.Slides.Count \u003d\u003d 0)"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": "                    MessageBox.Show(ShapesLabText.ErrorImportNoSlide);"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "                    // if user trys to import shapes but the file contains multiple categories,"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": "                    // stop processing and warn the user"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (!fromLibrary \u0026\u0026 importShapeGallery.Categories.Count \u003e 1)"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": "                        MessageBox.Show("
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": "                            string.Format(ShapesLabText.ErrorImportSingleCategory,"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": "                                          importShapeGallery.Name));"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": "                        return false;"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "-"
        },
        "content": "                    // copy all shapes in the import shape gallery to current shape gallery"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (fromLibrary)"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "-"
        },
        "content": "                        ImportShapesFromLibrary(importShapeGallery);"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": "                    else"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": "                        ImportShapesFromSingleShape(importShapeGallery);"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": "                ErrorDialogBox.ShowDialog(TextCollection.CommonText.ErrorTitle, e.Message, e);"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": "            finally"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": "                importShapeGallery.Close();"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": "                // delete the import file copy"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": "                FileDir.DeleteFile(Path.Combine(ShapeRootFolderPath, ImportFileNameNoExtension + \".pptlabsshapes\"));"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ImportShapesFromLibrary(PowerPointShapeGalleryPresentation importShapeGallery)"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": "            // Utilises deprecated classes as CustomShapePane does not utilise ActionFramework"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide currentSlide \u003d PowerPointCurrentPresentationInfo.CurrentSlide;"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointPresentation pres \u003d PowerPointPresentation.Current;"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": "            ClipboardUtil.RestoreClipboardAfterAction(() \u003d\u003e"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": "                foreach (string importCategory in importShapeGallery.Categories)"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": "                    importShapeGallery.CopyCategory(importCategory);"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "-"
        },
        "content": "                    Globals.ThisAddIn.ShapePresentation.AddCategory(importCategory, false, true);"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "-"
        },
        "content": "                    _categoryBinding.Add(importCategory);"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "-"
        },
        "content": "                return ClipboardUtil.ClipboardRestoreSuccess;"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "-"
        },
        "content": "            }, pres, currentSlide);"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ImportShapesFromSingleShape(PowerPointShapeGalleryPresentation importShapeGallery)"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange shapeRange \u003d importShapeGallery.Slides[0].Shapes.Range();"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "-"
        },
        "content": "            if (shapeRange.Count \u003c 1)"
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "-"
        },
        "content": "            string shapeName \u003d shapeRange[1].Name;"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "-"
        },
        "content": "            // Utilises deprecated classes as CustomShapePane does not utilise ActionFramework"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide currentSlide \u003d PowerPointCurrentPresentationInfo.CurrentSlide;"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointPresentation pres \u003d PowerPointPresentation.Current;"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "-"
        },
        "content": "            ClipboardUtil.RestoreClipboardAfterAction(() \u003d\u003e"
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "-"
        },
        "content": "                importShapeGallery.CopyShape(shapeName);"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "-"
        },
        "content": "                shapeName \u003d Globals.ThisAddIn.ShapePresentation.AddShape(pres, currentSlide, null, shapeName, fromClipBoard: true);"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "-"
        },
        "content": "                string exportPath \u003d Path.Combine(CurrentShapeFolderPath, shapeName + \".png\");"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "-"
        },
        "content": "                GraphicsUtil.ExportShape(shapeRange, exportPath);"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "-"
        },
        "content": "                return ClipboardUtil.ClipboardRestoreSuccess;"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "-"
        },
        "content": "            }, pres, currentSlide);"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool MigrateShapeFolder(string oldPath, string newPath)"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "-"
        },
        "content": "            LoadingDialogBox loadingDialog \u003d new LoadingDialogBox(ShapesLabText.MigratingDialogTitle,"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "-"
        },
        "content": "                                                    ShapesLabText.MigratingDialogContent);"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "-"
        },
        "content": "            loadingDialog.Show();"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "-"
        },
        "content": "            // close the opening presentation"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "-"
        },
        "content": "            if (Globals.ThisAddIn.ShapePresentation.Opened)"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "-"
        },
        "content": "                Globals.ThisAddIn.ShapePresentation.Close();"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "-"
        },
        "content": "            // migration only cares about if the folder has been copied to the new location entirely."
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!FileDir.CopyFolder(oldPath, newPath))"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "-"
        },
        "content": "                loadingDialog.Close();"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(ShapesLabText.ErrorMigration);"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "-"
        },
        "content": "            // now we will try our best to delete the original folder, but this is not guaranteed"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "-"
        },
        "content": "            // because some of the using files, such as some opening shapes, and the evil thumb.db"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!FileDir.DeleteFolder(oldPath))"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(ShapesLabText.ErrorOriginalFolderDeletion);"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRootFolderPath \u003d newPath;"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "-"
        },
        "content": "            // modify shape gallery presentation\u0027s path and name, then open it"
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "-"
        },
        "content": "            Globals.ThisAddIn.ShapePresentation.Path \u003d newPath;"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "-"
        },
        "content": "            Globals.ThisAddIn.ShapePresentation.Open(withWindow: false, focus: false);"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "-"
        },
        "content": "            Globals.ThisAddIn.ShapePresentation.DefaultCategory \u003d CurrentCategory;"
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "-"
        },
        "content": "            PaneReload(true);"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "-"
        },
        "content": "            loadingDialog.Close();"
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "-"
        },
        "content": "        private void MultiSelectClickHandler(LabeledThumbnail clickedThumbnail)"
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "-"
        },
        "content": "            if (MouseButtons !\u003d MouseButtons.Left \u0026\u0026"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "-"
        },
        "content": "                MouseButtons !\u003d MouseButtons.Right)"
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "-"
        },
        "content": "            // for right click, if selection \u003e 1, the context menu should appear with selection"
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "-"
        },
        "content": "            // remained, else we should change the focus. Specially, when selection \u003e 1, some of"
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "-"
        },
        "content": "            // the options in the context menu serves for the clicked item, such as rename."
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "-"
        },
        "content": "            if (MouseButtons \u003d\u003d MouseButtons.Right)"
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "-"
        },
        "content": "                if (_selectedThumbnail.Count \u003e 1 \u0026\u0026"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "-"
        },
        "content": "                    _selectedThumbnail.Contains(clickedThumbnail))"
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "-"
        },
        "content": "                    _selectedThumbnail.Remove(clickedThumbnail);"
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "-"
        },
        "content": "                    _selectedThumbnail.Insert(0, clickedThumbnail);"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "-"
        },
        "content": "            // if Ctrl key is not holding, i.e. not doing multi-selecting, all highlighed"
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "-"
        },
        "content": "            // thumbnail should be dehighlighted"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!ModifierKeys.HasFlag(Keys.Control))"
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "-"
        },
        "content": "                foreach (LabeledThumbnail thumbnail in _selectedThumbnail)"
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "-"
        },
        "content": "                    thumbnail.DeHighlight();"
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "-"
        },
        "content": "                _selectedThumbnail.Clear();"
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!_selectedThumbnail.Contains(clickedThumbnail))"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "-"
        },
        "content": "                // highlight the thumbnail and add the clicked thumbnail to the collection"
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "-"
        },
        "content": "                clickedThumbnail.Highlight();"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "-"
        },
        "content": "                _selectedThumbnail.Insert(0, clickedThumbnail);"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "-"
        },
        "content": "                FocusSelected();"
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "-"
        },
        "content": "                // turn off the highlighting if the clicked thumbnail is currently highlighted"
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "-"
        },
        "content": "                if (ModifierKeys.HasFlag(Keys.Control))"
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "-"
        },
        "content": "                    clickedThumbnail.DeHighlight();"
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "-"
        },
        "content": "                    _clickOnSelected \u003d false;"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "-"
        },
        "content": "                    _selectedThumbnail.Remove(clickedThumbnail);"
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "-"
        },
        "content": "        private void PrepareFolder()"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Directory.Exists(CurrentShapeFolderPath))"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "-"
        },
        "content": "                Directory.CreateDirectory(CurrentShapeFolderPath);"
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "-"
        },
        "content": "        private PowerPointShapeGalleryPresentation PrepareImportGallery(string importFilePath, bool fromCategory)"
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "-"
        },
        "content": "            string importFileCopyPath \u003d Path.Combine(ShapeRootFolderPath, ImportFileCopyName);"
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "-"
        },
        "content": "            // copy the file to the current shape root if the file is not under root "
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!File.Exists(importFileCopyPath))"
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "-"
        },
        "content": "                File.Copy(importFilePath, importFileCopyPath);"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "-"
        },
        "content": "            // init the file as an imported file"
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointShapeGalleryPresentation importShapeGallery \u003d new PowerPointShapeGalleryPresentation(ShapeRootFolderPath,"
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                            ImportFileNameNoExtension)"
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "-"
        },
        "content": "                IsImportedFile \u003d true,"
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "-"
        },
        "content": "                ImportToCategory \u003d fromCategory ? string.Empty : CurrentCategory"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "-"
        },
        "content": "            return importShapeGallery;"
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "-"
        },
        "content": "        private void PrepareShapes()"
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "-"
        },
        "content": "            PrepareFolder();"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "-"
        },
        "content": "            IOrderedEnumerable\u003cstring\u003e shapes \u003d Directory.EnumerateFiles(CurrentShapeFolderPath, \"*.png\").OrderBy(item \u003d\u003e item, _stringComparer);"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (string shape in shapes)"
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "-"
        },
        "content": "                string shapeName \u003d Path.GetFileNameWithoutExtension(shape);"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "-"
        },
        "content": "                if (shapeName \u003d\u003d null)"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "-"
        },
        "content": "                    MessageBox.Show(ShapesLabText.ErrorFileNameInvalid);"
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "-"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "-"
        },
        "content": "                AddCustomShape(shapeName, shape, false);"
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "-"
        },
        "content": "            if (myShapeFlowLayout.Controls.Count \u003d\u003d 0)"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "-"
        },
        "content": "                ShowNoShapeMessage();"
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "-"
        },
        "content": "            DehighlightSelected();"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "-"
        },
        "content": "        private void RegulateSelectionRectPoint(ref Point p)"
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "-"
        },
        "content": "            if (p.X \u003c 0)"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "-"
        },
        "content": "                p.X \u003d 0;"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "-"
        },
        "content": "                if (p.X \u003e myShapeFlowLayout.Width)"
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "-"
        },
        "content": "                p.X \u003d myShapeFlowLayout.Width;"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "-"
        },
        "content": "            if (p.Y \u003c 0)"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "-"
        },
        "content": "                p.Y \u003d 0;"
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "-"
        },
        "content": "                if (p.Y \u003e myShapeFlowLayout.Height)"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "-"
        },
        "content": "                p.Y \u003d myShapeFlowLayout.Height;"
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "-"
        },
        "content": "        private void RemoveThumbnail(LabeledThumbnail thumbnail, bool removeSelection \u003d true)"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "-"
        },
        "content": "            if (removeSelection \u0026\u0026"
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "-"
        },
        "content": "                _selectedThumbnail.Contains(thumbnail))"
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "-"
        },
        "content": "                _selectedThumbnail.Remove(thumbnail);"
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "-"
        },
        "content": "            myShapeFlowLayout.Controls.Remove(thumbnail);"
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "-"
        },
        "content": "            if (myShapeFlowLayout.Controls.Count \u003d\u003d 0)"
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "-"
        },
        "content": "                ShowNoShapeMessage();"
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "-"
        },
        "content": "        private void RenameThumbnail(string oldName, LabeledThumbnail labeledThumbnail)"
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "-"
        },
        "content": "            if (oldName \u003d\u003d labeledThumbnail.NameLabel)"
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "-"
        },
        "content": "            string newPath \u003d labeledThumbnail.ImagePath.Replace(@\"\\\" + oldName, @\"\\\" + labeledThumbnail.NameLabel);"
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "-"
        },
        "content": "            File.Move(labeledThumbnail.ImagePath, newPath);"
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "-"
        },
        "content": "            labeledThumbnail.ImagePath \u003d newPath;"
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "-"
        },
        "content": "            Globals.ThisAddIn.ShapePresentation.RenameShape(oldName, labeledThumbnail.NameLabel);"
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "-"
        },
        "content": "            Globals.ThisAddIn.SyncShapeRename(oldName, labeledThumbnail.NameLabel, CurrentCategory);"
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ReorderThumbnail(LabeledThumbnail labeledThumbnail)"
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "-"
        },
        "content": "            int index \u003d FindLabeledThumbnailIndex(labeledThumbnail.NameLabel);"
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "-"
        },
        "content": "            // if the current control is the only control or something goes wrong, don\u0027t need"
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "-"
        },
        "content": "            // to reorder"
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "-"
        },
        "content": "            if (index \u003d\u003d -1 ||"
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "-"
        },
        "content": "                index \u003e\u003d myShapeFlowLayout.Controls.Count)"
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "-"
        },
        "content": "            myShapeFlowLayout.Controls.SetChildIndex(labeledThumbnail, index);"
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ShowNoShapeMessage()"
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_noShapePanel.Controls.Count \u003d\u003d 0)"
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "-"
        },
        "content": "                _noShapePanel.Controls.Add(_noShapeLabelFirstLine);"
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "-"
        },
        "content": "                _noShapePanel.Controls.Add(_noShapeLabelSecondLine);"
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "-"
        },
        "content": "            myShapeFlowLayout.Controls.Add(_noShapePanel);"
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "-"
        },
        "content": "        # endregion"
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "-"
        },
        "content": "        # region Event Handlers"
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CategoryBoxSelectedIndexChanged(object sender, EventArgs e)"
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "-"
        },
        "content": "            int selectedIndex \u003d categoryBox.SelectedIndex;"
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "-"
        },
        "content": "            string selectedCategory \u003d _categoryBinding[selectedIndex].ToString();"
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "-"
        },
        "content": "            CurrentCategory \u003d selectedCategory;"
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "-"
        },
        "content": "            Globals.ThisAddIn.ShapePresentation.DefaultCategory \u003d selectedCategory;"
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "-"
        },
        "content": "            PaneReload(true);"
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CategoryBoxOwnerDraw(object sender, DrawItemEventArgs e)"
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "-"
        },
        "content": "            ComboBox comboBox \u003d sender as ComboBox;"
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "-"
        },
        "content": "            if (comboBox \u003d\u003d null ||"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "-"
        },
        "content": "                e.Index \u003d\u003d -1)"
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "-"
        },
        "content": "            Font font \u003d comboBox.Font;"
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "-"
        },
        "content": "            string text \u003d (string)_categoryBinding[e.Index];"
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "-"
        },
        "content": "            if (text \u003d\u003d Globals.ThisAddIn.ShapesLabConfig.DefaultCategory)"
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "-"
        },
        "content": "                text +\u003d \" (default)\";"
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "-"
        },
        "content": "                font \u003d new Font(font, FontStyle.Bold);"
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "-"
        },
        "content": "            using (SolidBrush brush \u003d new SolidBrush(e.ForeColor))"
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "-"
        },
        "content": "                e.DrawBackground();"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "-"
        },
        "content": "                e.Graphics.DrawString(text, font, brush, e.Bounds);"
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "-"
        },
        "content": "            int desiredWidth \u003d Width - label1.Width - 60;"
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "-"
        },
        "content": "            comboBox.Width \u003d desiredWidth \u003e 0 ? desiredWidth : 0;"
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CopyContextMenuStripLeaveEvent(object sender, EventArgs e)"
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "-"
        },
        "content": "            copyToToolStripMenuItem.HideDropDown();"
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CopyContextMenuStripOnEvent(object sender, EventArgs e)"
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "-"
        },
        "content": "            copyToToolStripMenuItem.DropDownItems.Clear();"
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (string category in _categoryBinding.List)"
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "-"
        },
        "content": "                if (category !\u003d CurrentCategory)"
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "-"
        },
        "content": "                    ToolStripItem item \u003d copyToToolStripMenuItem.DropDownItems.Add(category);"
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "-"
        },
        "content": "                    item.Click +\u003d CopyContextMenuStripSubMenuClick;"
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "-"
        },
        "content": "            copyToToolStripMenuItem.ShowDropDown();"
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CopyContextMenuStripSubMenuClick(object sender, EventArgs e)"
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "-"
        },
        "content": "            ToolStripItem item \u003d sender as ToolStripItem;"
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "-"
        },
        "content": "            if (item \u003d\u003d null)"
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "-"
        },
        "content": "            string categoryName \u003d item.Text;"
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "-"
        },
        "content": "            GraphicsUtil.SuspendDrawing(myShapeFlowLayout);"
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (LabeledThumbnail thumbnail in _selectedThumbnail)"
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "-"
        },
        "content": "                string shapeName \u003d thumbnail.NameLabel;"
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "-"
        },
        "content": "                string oriPath \u003d Path.Combine(CurrentShapeFolderPath, shapeName) + \".png\";"
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "-"
        },
        "content": "                string destPath \u003d Path.Combine(ShapeRootFolderPath, categoryName, shapeName) + \".png\";"
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "-"
        },
        "content": "                // if we have an identical name in the destination category, we won\u0027t allow"
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "-"
        },
        "content": "                // moving"
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "-"
        },
        "content": "                if (File.Exists(destPath))"
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "-"
        },
        "content": "                    MessageBox.Show(string.Format(TextCollection.ShapesLabText.ErrorSameShapeNameInDestination,"
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "-"
        },
        "content": "                                    shapeName,"
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "-"
        },
        "content": "                                    categoryName));"
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "-"
        },
        "content": "                // Utilises deprecated classes as CustomShapePane does not utilise ActionFramework"
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPointSlide currentSlide \u003d PowerPointCurrentPresentationInfo.CurrentSlide;"
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPointPresentation pres \u003d PowerPointPresentation.Current;"
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "-"
        },
        "content": "                // move shape in ShapeGallery to correct place"
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "-"
        },
        "content": "                Globals.ThisAddIn.ShapePresentation.CopyShapeToCategory(pres, currentSlide, shapeName, categoryName);"
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "-"
        },
        "content": "                // move shape on the disk to correct place"
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "-"
        },
        "content": "                File.Copy(oriPath, destPath);"
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "-"
        },
        "content": "                Globals.ThisAddIn.SyncShapeAdd(shapeName, destPath, categoryName);"
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1265,
        "author": {
          "gitId": "-"
        },
        "content": "            GraphicsUtil.ResumeDrawing(myShapeFlowLayout);"
      },
      {
        "lineNumber": 1266,
        "author": {
          "gitId": "-"
        },
        "content": "            _selectedThumbnail.Clear();"
      },
      {
        "lineNumber": 1267,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1269,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CustomShapePaneClick(object sender, EventArgs e)"
      },
      {
        "lineNumber": 1270,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1271,
        "author": {
          "gitId": "-"
        },
        "content": "            FlowlayoutClick();"
      },
      {
        "lineNumber": 1272,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1274,
        "author": {
          "gitId": "-"
        },
        "content": "        private void FlowlayoutContextMenuStripItemClicked(object sender, ToolStripItemClickedEventArgs e)"
      },
      {
        "lineNumber": 1275,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1276,
        "author": {
          "gitId": "-"
        },
        "content": "            ToolStripItem item \u003d e.ClickedItem;"
      },
      {
        "lineNumber": 1277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1278,
        "author": {
          "gitId": "-"
        },
        "content": "            if (item.Name.Contains(\"settings\"))"
      },
      {
        "lineNumber": 1279,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1280,
        "author": {
          "gitId": "-"
        },
        "content": "                ContextMenuStripSettingsClicked();"
      },
      {
        "lineNumber": 1281,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1282,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (item.Name.Contains(\"addCategory\"))"
      },
      {
        "lineNumber": 1283,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1284,
        "author": {
          "gitId": "-"
        },
        "content": "                ContextMenuStripAddCategoryClicked();"
      },
      {
        "lineNumber": 1285,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1286,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (item.Name.Contains(\"removeCategory\"))"
      },
      {
        "lineNumber": 1287,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1288,
        "author": {
          "gitId": "-"
        },
        "content": "                ContextMenuStripRemoveCategoryClicked();"
      },
      {
        "lineNumber": 1289,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1290,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (item.Name.Contains(\"renameCategory\"))"
      },
      {
        "lineNumber": 1291,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1292,
        "author": {
          "gitId": "-"
        },
        "content": "                ContextMenuStripRenameCategoryClicked();"
      },
      {
        "lineNumber": 1293,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1294,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (item.Name.Contains(\"setAsDefault\"))"
      },
      {
        "lineNumber": 1295,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1296,
        "author": {
          "gitId": "-"
        },
        "content": "                ContextMenuStripSetAsDefaultCategoryClicked();"
      },
      {
        "lineNumber": 1297,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1298,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (item.Name.Contains(\"importCategory\"))"
      },
      {
        "lineNumber": 1299,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1300,
        "author": {
          "gitId": "-"
        },
        "content": "                ContextMenuStripImportCategoryClicked();"
      },
      {
        "lineNumber": 1301,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1302,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (item.Name.Contains(\"importShape\"))"
      },
      {
        "lineNumber": 1303,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1304,
        "author": {
          "gitId": "-"
        },
        "content": "                ContextMenuStripImportShapesClicked();"
      },
      {
        "lineNumber": 1305,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1306,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1307,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1308,
        "author": {
          "gitId": "-"
        },
        "content": "        private void FlowLayoutMouseDownHandler(object sender, MouseEventArgs e)"
      },
      {
        "lineNumber": 1309,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1310,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!ModifierKeys.HasFlag(Keys.Control))"
      },
      {
        "lineNumber": 1311,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1312,
        "author": {
          "gitId": "-"
        },
        "content": "                FlowlayoutClick();"
      },
      {
        "lineNumber": 1313,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1314,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1315,
        "author": {
          "gitId": "-"
        },
        "content": "            _isPanelMouseDown \u003d true;"
      },
      {
        "lineNumber": 1316,
        "author": {
          "gitId": "-"
        },
        "content": "            _isPanelDrawingFinish \u003d false;"
      },
      {
        "lineNumber": 1317,
        "author": {
          "gitId": "-"
        },
        "content": "            _startPosition \u003d e.Location;"
      },
      {
        "lineNumber": 1318,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1319,
        "author": {
          "gitId": "-"
        },
        "content": "            _selectRect.Location \u003d myShapeFlowLayout.PointToScreen(e.Location);"
      },
      {
        "lineNumber": 1320,
        "author": {
          "gitId": "-"
        },
        "content": "            _selectRect.Size \u003d new Size(0, 0);"
      },
      {
        "lineNumber": 1321,
        "author": {
          "gitId": "-"
        },
        "content": "            _selectRect.BringToFront();"
      },
      {
        "lineNumber": 1322,
        "author": {
          "gitId": "-"
        },
        "content": "            _selectRect.Show();"
      },
      {
        "lineNumber": 1323,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1324,
        "author": {
          "gitId": "-"
        },
        "content": "            _selectingThumbnail.Clear();"
      },
      {
        "lineNumber": 1325,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1326,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1327,
        "author": {
          "gitId": "-"
        },
        "content": "        private void FlowLayoutMouseEnterHandler(object sender, EventArgs e)"
      },
      {
        "lineNumber": 1328,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1329,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_selectedThumbnail !\u003d null \u0026\u0026"
      },
      {
        "lineNumber": 1330,
        "author": {
          "gitId": "-"
        },
        "content": "                _selectedThumbnail.Count !\u003d 0 \u0026\u0026"
      },
      {
        "lineNumber": 1331,
        "author": {
          "gitId": "-"
        },
        "content": "                _selectedThumbnail[0].State !\u003d LabeledThumbnail.Status.Editing)"
      },
      {
        "lineNumber": 1332,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1333,
        "author": {
          "gitId": "-"
        },
        "content": "                myShapeFlowLayout.Focus();"
      },
      {
        "lineNumber": 1334,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1335,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1336,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1337,
        "author": {
          "gitId": "-"
        },
        "content": "        private void FlowLayoutMouseMoveHandler(object sender, MouseEventArgs e)"
      },
      {
        "lineNumber": 1338,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1339,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_isPanelMouseDown)"
      },
      {
        "lineNumber": 1340,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1341,
        "author": {
          "gitId": "-"
        },
        "content": "                _curPosition \u003d e.Location;"
      },
      {
        "lineNumber": 1342,
        "author": {
          "gitId": "-"
        },
        "content": "                Rectangle rect \u003d CreateRect(_curPosition, _startPosition);"
      },
      {
        "lineNumber": 1343,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1344,
        "author": {
          "gitId": "-"
        },
        "content": "                _selectRect.Size \u003d rect.Size;"
      },
      {
        "lineNumber": 1345,
        "author": {
          "gitId": "-"
        },
        "content": "                _selectRect.Location \u003d myShapeFlowLayout.PointToScreen(rect.Location);"
      },
      {
        "lineNumber": 1346,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1347,
        "author": {
          "gitId": "-"
        },
        "content": "                foreach (Control control in myShapeFlowLayout.Controls)"
      },
      {
        "lineNumber": 1348,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1349,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (!(control is LabeledThumbnail))"
      },
      {
        "lineNumber": 1350,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1351,
        "author": {
          "gitId": "-"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 1352,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1353,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1354,
        "author": {
          "gitId": "-"
        },
        "content": "                    LabeledThumbnail labeledThumbnail \u003d control as LabeledThumbnail;"
      },
      {
        "lineNumber": 1355,
        "author": {
          "gitId": "-"
        },
        "content": "                    Rectangle labeledThumbnailRect \u003d"
      },
      {
        "lineNumber": 1356,
        "author": {
          "gitId": "-"
        },
        "content": "                        myShapeFlowLayout.RectangleToClient("
      },
      {
        "lineNumber": 1357,
        "author": {
          "gitId": "-"
        },
        "content": "                            labeledThumbnail.RectangleToScreen(labeledThumbnail.ClientRectangle));"
      },
      {
        "lineNumber": 1358,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1359,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (labeledThumbnailRect.IntersectsWith(rect))"
      },
      {
        "lineNumber": 1360,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1361,
        "author": {
          "gitId": "-"
        },
        "content": "                        if (!_selectingThumbnail.Contains(labeledThumbnail))"
      },
      {
        "lineNumber": 1362,
        "author": {
          "gitId": "-"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 1363,
        "author": {
          "gitId": "-"
        },
        "content": "                            labeledThumbnail.ToggleHighlight();"
      },
      {
        "lineNumber": 1364,
        "author": {
          "gitId": "-"
        },
        "content": "                            _selectingThumbnail.Add(labeledThumbnail);"
      },
      {
        "lineNumber": 1365,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 1366,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1367,
        "author": {
          "gitId": "-"
        },
        "content": "                    else"
      },
      {
        "lineNumber": 1368,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1369,
        "author": {
          "gitId": "-"
        },
        "content": "                        if (_selectingThumbnail.Contains(labeledThumbnail))"
      },
      {
        "lineNumber": 1370,
        "author": {
          "gitId": "-"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 1371,
        "author": {
          "gitId": "-"
        },
        "content": "                            labeledThumbnail.ToggleHighlight();"
      },
      {
        "lineNumber": 1372,
        "author": {
          "gitId": "-"
        },
        "content": "                            _selectingThumbnail.Remove(labeledThumbnail);"
      },
      {
        "lineNumber": 1373,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 1374,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1375,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1376,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1377,
        "author": {
          "gitId": "-"
        },
        "content": "                myShapeFlowLayout.Invalidate();"
      },
      {
        "lineNumber": 1378,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1379,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1380,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1381,
        "author": {
          "gitId": "-"
        },
        "content": "        private void FlowLayoutMouseUpHandler(object sender, MouseEventArgs e)"
      },
      {
        "lineNumber": 1382,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1383,
        "author": {
          "gitId": "-"
        },
        "content": "            _isPanelMouseDown \u003d false;"
      },
      {
        "lineNumber": 1384,
        "author": {
          "gitId": "-"
        },
        "content": "            _isPanelDrawingFinish \u003d true;"
      },
      {
        "lineNumber": 1385,
        "author": {
          "gitId": "-"
        },
        "content": "            _selectRect.Hide();"
      },
      {
        "lineNumber": 1386,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1387,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (LabeledThumbnail thumbnail in _selectingThumbnail)"
      },
      {
        "lineNumber": 1388,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1389,
        "author": {
          "gitId": "-"
        },
        "content": "                if (_selectedThumbnail.Contains(thumbnail))"
      },
      {
        "lineNumber": 1390,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1391,
        "author": {
          "gitId": "-"
        },
        "content": "                    _selectedThumbnail.Remove(thumbnail);"
      },
      {
        "lineNumber": 1392,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1393,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 1394,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1395,
        "author": {
          "gitId": "-"
        },
        "content": "                    _selectedThumbnail.Add(thumbnail);"
      },
      {
        "lineNumber": 1396,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1397,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1398,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1399,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_selectedThumbnail.Count !\u003d 0)"
      },
      {
        "lineNumber": 1400,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1401,
        "author": {
          "gitId": "-"
        },
        "content": "                _selectedThumbnail \u003d _selectedThumbnail.OrderBy(item \u003d\u003e item.NameLabel, _stringComparer).ToList();"
      },
      {
        "lineNumber": 1402,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1403,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1404,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1405,
        "author": {
          "gitId": "-"
        },
        "content": "        private void FlowLayoutPaintHandler(object sender, PaintEventArgs e)"
      },
      {
        "lineNumber": 1406,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1407,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_isPanelMouseDown)"
      },
      {
        "lineNumber": 1408,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1409,
        "author": {
          "gitId": "-"
        },
        "content": "                Rectangle rect \u003d CreateRect(_curPosition, _startPosition);"
      },
      {
        "lineNumber": 1410,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1411,
        "author": {
          "gitId": "-"
        },
        "content": "                using (SolidBrush brush \u003d new SolidBrush(Color.FromArgb(100, 0, 0, 255)))"
      },
      {
        "lineNumber": 1412,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1413,
        "author": {
          "gitId": "-"
        },
        "content": "                    e.Graphics.FillRectangle(brush, rect);"
      },
      {
        "lineNumber": 1414,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1415,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1416,
        "author": {
          "gitId": "-"
        },
        "content": "                using (Pen pen \u003d new Pen(Color.FromArgb(200, 0, 0, 255)))"
      },
      {
        "lineNumber": 1417,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1418,
        "author": {
          "gitId": "-"
        },
        "content": "                    e.Graphics.DrawRectangle(pen, rect);"
      },
      {
        "lineNumber": 1419,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1420,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1421,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1422,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_isPanelDrawingFinish)"
      },
      {
        "lineNumber": 1423,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1424,
        "author": {
          "gitId": "-"
        },
        "content": "                e.Graphics.Clear(myShapeFlowLayout.BackColor);"
      },
      {
        "lineNumber": 1425,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1426,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1427,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1428,
        "author": {
          "gitId": "-"
        },
        "content": "        private void LabeledThumbnailClick(object sender, MouseEventArgs e)"
      },
      {
        "lineNumber": 1429,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1430,
        "author": {
          "gitId": "-"
        },
        "content": "            if (sender \u003d\u003d null || !(sender is LabeledThumbnail))"
      },
      {
        "lineNumber": 1431,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1432,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(ShapesLabText.ErrorNoPanelSelected);"
      },
      {
        "lineNumber": 1433,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 1434,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1435,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1436,
        "author": {
          "gitId": "-"
        },
        "content": "            _clicks++;"
      },
      {
        "lineNumber": 1437,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1438,
        "author": {
          "gitId": "-"
        },
        "content": "            if (flowlayoutContextMenuStrip.Visible)"
      },
      {
        "lineNumber": 1439,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1440,
        "author": {
          "gitId": "-"
        },
        "content": "                flowlayoutContextMenuStrip.Hide();"
      },
      {
        "lineNumber": 1441,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1442,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1443,
        "author": {
          "gitId": "-"
        },
        "content": "            // only first click will be entertained"
      },
      {
        "lineNumber": 1444,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!_firstClick)"
      },
      {
        "lineNumber": 1445,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1446,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 1447,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1448,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1449,
        "author": {
          "gitId": "-"
        },
        "content": "            myShapeFlowLayout.Focus();"
      },
      {
        "lineNumber": 1450,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1451,
        "author": {
          "gitId": "-"
        },
        "content": "            _firstClick \u003d false;"
      },
      {
        "lineNumber": 1452,
        "author": {
          "gitId": "-"
        },
        "content": "            _isLeftButton \u003d e.Button \u003d\u003d MouseButtons.Left;"
      },
      {
        "lineNumber": 1453,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1454,
        "author": {
          "gitId": "-"
        },
        "content": "            FirstClickOnThumbnail(sender as LabeledThumbnail);"
      },
      {
        "lineNumber": 1455,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1456,
        "author": {
          "gitId": "-"
        },
        "content": "            // if it\u0027s left button click, we need to wait for potential second click"
      },
      {
        "lineNumber": 1457,
        "author": {
          "gitId": "-"
        },
        "content": "            _timer.Start();"
      },
      {
        "lineNumber": 1458,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1459,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1460,
        "author": {
          "gitId": "-"
        },
        "content": "        private void LabeledThumbnailDoubleClick(object sender, EventArgs e)"
      },
      {
        "lineNumber": 1461,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1462,
        "author": {
          "gitId": "-"
        },
        "content": "            if (sender \u003d\u003d null || !(sender is LabeledThumbnail))"
      },
      {
        "lineNumber": 1463,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1464,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(ShapesLabText.ErrorNoPanelSelected);"
      },
      {
        "lineNumber": 1465,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 1466,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1467,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1468,
        "author": {
          "gitId": "-"
        },
        "content": "            LabeledThumbnail clickedThumbnail \u003d sender as LabeledThumbnail;"
      },
      {
        "lineNumber": 1469,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1470,
        "author": {
          "gitId": "-"
        },
        "content": "            string shapeName \u003d clickedThumbnail.NameLabel;"
      },
      {
        "lineNumber": 1471,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide currentSlide \u003d PowerPointCurrentPresentationInfo.CurrentSlide;"
      },
      {
        "lineNumber": 1472,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1473,
        "author": {
          "gitId": "-"
        },
        "content": "            // Utilises deprecated PowerPointPresentation class as CustomShapePane does not utilise ActionFramework"
      },
      {
        "lineNumber": 1474,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointPresentation pres \u003d PowerPointPresentation.Current;"
      },
      {
        "lineNumber": 1475,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1476,
        "author": {
          "gitId": "-"
        },
        "content": "            if (currentSlide !\u003d null)"
      },
      {
        "lineNumber": 1477,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1478,
        "author": {
          "gitId": "-"
        },
        "content": "                Globals.ThisAddIn.Application.StartNewUndoEntry();"
      },
      {
        "lineNumber": 1479,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1480,
        "author": {
          "gitId": "-"
        },
        "content": "                ClipboardUtil.RestoreClipboardAfterAction(() \u003d\u003e"
      },
      {
        "lineNumber": 1481,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1482,
        "author": {
          "gitId": "-"
        },
        "content": "                    Globals.ThisAddIn.ShapePresentation.CopyShape(shapeName);"
      },
      {
        "lineNumber": 1483,
        "author": {
          "gitId": "-"
        },
        "content": "                    currentSlide.Shapes.Paste().Select();"
      },
      {
        "lineNumber": 1484,
        "author": {
          "gitId": "-"
        },
        "content": "                    return ClipboardUtil.ClipboardRestoreSuccess;"
      },
      {
        "lineNumber": 1485,
        "author": {
          "gitId": "-"
        },
        "content": "                }, pres, currentSlide);"
      },
      {
        "lineNumber": 1486,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1487,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 1488,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1489,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(ShapesLabText.ErrorViewTypeNotSupported);"
      },
      {
        "lineNumber": 1490,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1491,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1492,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1493,
        "author": {
          "gitId": "-"
        },
        "content": "        private void NameEditFinishHandler(object sender, string oldName)"
      },
      {
        "lineNumber": 1494,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1495,
        "author": {
          "gitId": "-"
        },
        "content": "            LabeledThumbnail labeledThumbnail \u003d sender as LabeledThumbnail;"
      },
      {
        "lineNumber": 1496,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1497,
        "author": {
          "gitId": "-"
        },
        "content": "            // by right, name change only happens when the labeled thumbnail is selected."
      },
      {
        "lineNumber": 1498,
        "author": {
          "gitId": "-"
        },
        "content": "            // Therfore, if the notifier doesn\u0027t come from the selected object, something"
      },
      {
        "lineNumber": 1499,
        "author": {
          "gitId": "-"
        },
        "content": "            // goes wrong."
      },
      {
        "lineNumber": 1500,
        "author": {
          "gitId": "-"
        },
        "content": "            if (labeledThumbnail \u003d\u003d null ||"
      },
      {
        "lineNumber": 1501,
        "author": {
          "gitId": "-"
        },
        "content": "                (_selectedThumbnail.Count !\u003d 0 \u0026\u0026"
      },
      {
        "lineNumber": 1502,
        "author": {
          "gitId": "-"
        },
        "content": "                labeledThumbnail !\u003d _selectedThumbnail[0]))"
      },
      {
        "lineNumber": 1503,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1504,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 1505,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1506,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1507,
        "author": {
          "gitId": "-"
        },
        "content": "            // if name changed, rename the shape in shape gallery and the file on disk"
      },
      {
        "lineNumber": 1508,
        "author": {
          "gitId": "-"
        },
        "content": "            RenameThumbnail(oldName, labeledThumbnail);"
      },
      {
        "lineNumber": 1509,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1510,
        "author": {
          "gitId": "-"
        },
        "content": "            // put the labeled thumbnail to correct position"
      },
      {
        "lineNumber": 1511,
        "author": {
          "gitId": "-"
        },
        "content": "            ReorderThumbnail(labeledThumbnail);"
      },
      {
        "lineNumber": 1512,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1513,
        "author": {
          "gitId": "-"
        },
        "content": "            // select the thumbnail and scroll into view"
      },
      {
        "lineNumber": 1514,
        "author": {
          "gitId": "-"
        },
        "content": "            FocusSelected();"
      },
      {
        "lineNumber": 1515,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1516,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1517,
        "author": {
          "gitId": "-"
        },
        "content": "        private void MoveContextMenuStripLeaveEvent(object sender, EventArgs e)"
      },
      {
        "lineNumber": 1518,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1519,
        "author": {
          "gitId": "-"
        },
        "content": "            moveShapeToolStripMenuItem.HideDropDown();"
      },
      {
        "lineNumber": 1520,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1521,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1522,
        "author": {
          "gitId": "-"
        },
        "content": "        private void MoveContextMenuStripOnEvent(object sender, EventArgs e)"
      },
      {
        "lineNumber": 1523,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1524,
        "author": {
          "gitId": "-"
        },
        "content": "            moveShapeToolStripMenuItem.DropDownItems.Clear();"
      },
      {
        "lineNumber": 1525,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1526,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (string category in _categoryBinding.List)"
      },
      {
        "lineNumber": 1527,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1528,
        "author": {
          "gitId": "-"
        },
        "content": "                if (category !\u003d CurrentCategory)"
      },
      {
        "lineNumber": 1529,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1530,
        "author": {
          "gitId": "-"
        },
        "content": "                    ToolStripItem item \u003d moveShapeToolStripMenuItem.DropDownItems.Add(category);"
      },
      {
        "lineNumber": 1531,
        "author": {
          "gitId": "-"
        },
        "content": "                    item.Click +\u003d MoveContextMenuStripSubMenuClick;"
      },
      {
        "lineNumber": 1532,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1533,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1534,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1535,
        "author": {
          "gitId": "-"
        },
        "content": "            moveShapeToolStripMenuItem.ShowDropDown();"
      },
      {
        "lineNumber": 1536,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1537,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1538,
        "author": {
          "gitId": "-"
        },
        "content": "        private void MoveContextMenuStripSubMenuClick(object sender, EventArgs e)"
      },
      {
        "lineNumber": 1539,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1540,
        "author": {
          "gitId": "-"
        },
        "content": "            ToolStripItem item \u003d sender as ToolStripItem;"
      },
      {
        "lineNumber": 1541,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1542,
        "author": {
          "gitId": "-"
        },
        "content": "            if (item \u003d\u003d null)"
      },
      {
        "lineNumber": 1543,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1544,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 1545,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1546,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1547,
        "author": {
          "gitId": "-"
        },
        "content": "            string categoryName \u003d item.Text;"
      },
      {
        "lineNumber": 1548,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1549,
        "author": {
          "gitId": "-"
        },
        "content": "            GraphicsUtil.SuspendDrawing(myShapeFlowLayout);"
      },
      {
        "lineNumber": 1550,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1551,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (LabeledThumbnail thumbnail in _selectedThumbnail)"
      },
      {
        "lineNumber": 1552,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1553,
        "author": {
          "gitId": "-"
        },
        "content": "                string shapeName \u003d thumbnail.NameLabel;"
      },
      {
        "lineNumber": 1554,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1555,
        "author": {
          "gitId": "-"
        },
        "content": "                string oriPath \u003d Path.Combine(CurrentShapeFolderPath, shapeName) + \".png\";"
      },
      {
        "lineNumber": 1556,
        "author": {
          "gitId": "-"
        },
        "content": "                string destPath \u003d Path.Combine(ShapeRootFolderPath, categoryName, shapeName) + \".png\";"
      },
      {
        "lineNumber": 1557,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1558,
        "author": {
          "gitId": "-"
        },
        "content": "                // if we have an identical name in the destination category, we won\u0027t allow"
      },
      {
        "lineNumber": 1559,
        "author": {
          "gitId": "-"
        },
        "content": "                // moving"
      },
      {
        "lineNumber": 1560,
        "author": {
          "gitId": "-"
        },
        "content": "                if (File.Exists(destPath))"
      },
      {
        "lineNumber": 1561,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1562,
        "author": {
          "gitId": "-"
        },
        "content": "                    MessageBox.Show(string.Format(TextCollection.ShapesLabText.ErrorSameShapeNameInDestination, "
      },
      {
        "lineNumber": 1563,
        "author": {
          "gitId": "-"
        },
        "content": "                                    shapeName, "
      },
      {
        "lineNumber": 1564,
        "author": {
          "gitId": "-"
        },
        "content": "                                    categoryName));"
      },
      {
        "lineNumber": 1565,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 1566,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1567,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1568,
        "author": {
          "gitId": "-"
        },
        "content": "                // Utilises deprecated classes as CustomShapePane does not utilise ActionFramework"
      },
      {
        "lineNumber": 1569,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPointSlide currentSlide \u003d PowerPointCurrentPresentationInfo.CurrentSlide;"
      },
      {
        "lineNumber": 1570,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPointPresentation pres \u003d PowerPointPresentation.Current;"
      },
      {
        "lineNumber": 1571,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1572,
        "author": {
          "gitId": "-"
        },
        "content": "                // move shape in ShapeGallery to correct place"
      },
      {
        "lineNumber": 1573,
        "author": {
          "gitId": "-"
        },
        "content": "                Globals.ThisAddIn.ShapePresentation.MoveShapeToCategory(pres, currentSlide, shapeName, categoryName);"
      },
      {
        "lineNumber": 1574,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1575,
        "author": {
          "gitId": "-"
        },
        "content": "                // move shape on the disk to correct place"
      },
      {
        "lineNumber": 1576,
        "author": {
          "gitId": "-"
        },
        "content": "                File.Move(oriPath, destPath);"
      },
      {
        "lineNumber": 1577,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1578,
        "author": {
          "gitId": "-"
        },
        "content": "                // remove the thumbnail on the pane"
      },
      {
        "lineNumber": 1579,
        "author": {
          "gitId": "-"
        },
        "content": "                RemoveThumbnail(thumbnail, false);"
      },
      {
        "lineNumber": 1580,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1581,
        "author": {
          "gitId": "-"
        },
        "content": "                Globals.ThisAddIn.SyncShapeRemove(shapeName, CurrentCategory);"
      },
      {
        "lineNumber": 1582,
        "author": {
          "gitId": "-"
        },
        "content": "                Globals.ThisAddIn.SyncShapeAdd(shapeName, destPath, categoryName);"
      },
      {
        "lineNumber": 1583,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1584,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1585,
        "author": {
          "gitId": "-"
        },
        "content": "            GraphicsUtil.ResumeDrawing(myShapeFlowLayout);"
      },
      {
        "lineNumber": 1586,
        "author": {
          "gitId": "-"
        },
        "content": "            _selectedThumbnail.Clear();"
      },
      {
        "lineNumber": 1587,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1588,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1589,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ThumbnailContextMenuStripItemClicked(object sender, ToolStripItemClickedEventArgs e)"
      },
      {
        "lineNumber": 1590,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1591,
        "author": {
          "gitId": "-"
        },
        "content": "            ToolStripItem item \u003d e.ClickedItem;"
      },
      {
        "lineNumber": 1592,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1593,
        "author": {
          "gitId": "-"
        },
        "content": "            if (item.Name.Contains(\"remove\"))"
      },
      {
        "lineNumber": 1594,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1595,
        "author": {
          "gitId": "-"
        },
        "content": "                ContextMenuStripRemoveClicked();"
      },
      {
        "lineNumber": 1596,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1597,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 1598,
        "author": {
          "gitId": "-"
        },
        "content": "            if (item.Name.Contains(\"edit\"))"
      },
      {
        "lineNumber": 1599,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1600,
        "author": {
          "gitId": "-"
        },
        "content": "                ContextMenuStripEditClicked();"
      },
      {
        "lineNumber": 1601,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1602,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 1603,
        "author": {
          "gitId": "-"
        },
        "content": "            if (item.Name.Contains(\"add\"))"
      },
      {
        "lineNumber": 1604,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1605,
        "author": {
          "gitId": "-"
        },
        "content": "                ContextMenuStripAddClicked();"
      },
      {
        "lineNumber": 1606,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1607,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1608,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1609,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        private void SelectionChanged(Selection selection)"
      },
      {
        "lineNumber": 1610,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1611,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            if ((selection \u003d\u003d null) || (selection.Type \u003d\u003d PpSelectionType.ppSelectionNone)"
      },
      {
        "lineNumber": 1612,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                || (selection.Type \u003d\u003d PpSelectionType.ppSelectionSlides))"
      },
      {
        "lineNumber": 1613,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1614,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                DisableAddShapesButton();"
      },
      {
        "lineNumber": 1615,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1616,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            else"
      },
      {
        "lineNumber": 1617,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1618,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                EnableAddShapesButton();"
      },
      {
        "lineNumber": 1619,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1620,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1621,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 1622,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ThumbnailContextMenuStripOpening(object sender, System.ComponentModel.CancelEventArgs e)"
      },
      {
        "lineNumber": 1623,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1624,
        "author": {
          "gitId": "-"
        },
        "content": "            if (Categories.Count \u003c 2)"
      },
      {
        "lineNumber": 1625,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1626,
        "author": {
          "gitId": "-"
        },
        "content": "                moveShapeToolStripMenuItem.Enabled \u003d false;"
      },
      {
        "lineNumber": 1627,
        "author": {
          "gitId": "-"
        },
        "content": "                copyToToolStripMenuItem.Enabled \u003d false;"
      },
      {
        "lineNumber": 1628,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1629,
        "author": {
          "gitId": "-"
        },
        "content": "                moveShapeToolStripMenuItem.DropDownItems.Clear();"
      },
      {
        "lineNumber": 1630,
        "author": {
          "gitId": "-"
        },
        "content": "                copyToToolStripMenuItem.DropDownItems.Clear();"
      },
      {
        "lineNumber": 1631,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1632,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 1633,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1634,
        "author": {
          "gitId": "-"
        },
        "content": "                moveShapeToolStripMenuItem.Enabled \u003d true;"
      },
      {
        "lineNumber": 1635,
        "author": {
          "gitId": "-"
        },
        "content": "                copyToToolStripMenuItem.Enabled \u003d true;"
      },
      {
        "lineNumber": 1636,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1637,
        "author": {
          "gitId": "-"
        },
        "content": "                // add a dummy entry to show right arrow"
      },
      {
        "lineNumber": 1638,
        "author": {
          "gitId": "-"
        },
        "content": "                moveShapeToolStripMenuItem.DropDownItems.Add(\"\");"
      },
      {
        "lineNumber": 1639,
        "author": {
          "gitId": "-"
        },
        "content": "                copyToToolStripMenuItem.DropDownItems.Add(\"\");"
      },
      {
        "lineNumber": 1640,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1641,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1642,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1643,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TimerTickHandler(object sender, EventArgs args)"
      },
      {
        "lineNumber": 1644,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1645,
        "author": {
          "gitId": "-"
        },
        "content": "            _timer.Stop();"
      },
      {
        "lineNumber": 1646,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1647,
        "author": {
          "gitId": "-"
        },
        "content": "            // if we got only 1 click in a threshold value, we take it as a single click"
      },
      {
        "lineNumber": 1648,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_clicks \u003d\u003d 1 \u0026\u0026"
      },
      {
        "lineNumber": 1649,
        "author": {
          "gitId": "-"
        },
        "content": "                _isLeftButton \u0026\u0026"
      },
      {
        "lineNumber": 1650,
        "author": {
          "gitId": "-"
        },
        "content": "                _clickOnSelected)"
      },
      {
        "lineNumber": 1651,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1652,
        "author": {
          "gitId": "-"
        },
        "content": "                _selectedThumbnail[0].StartNameEdit();"
      },
      {
        "lineNumber": 1653,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1654,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1655,
        "author": {
          "gitId": "-"
        },
        "content": "            ClickTimerReset();"
      },
      {
        "lineNumber": 1656,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1657,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 1658,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1659,
        "author": {
          "gitId": "-"
        },
        "content": "        #region search box appearance and behaviors"
      },
      {
        "lineNumber": 1660,
        "author": {
          "gitId": "-"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 1661,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool _searchBoxFocused \u003d false;"
      },
      {
        "lineNumber": 1662,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override void OnLoad(EventArgs e)"
      },
      {
        "lineNumber": 1663,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1664,
        "author": {
          "gitId": "-"
        },
        "content": "            var searchButton \u003d new Button();"
      },
      {
        "lineNumber": 1665,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1666,
        "author": {
          "gitId": "-"
        },
        "content": "            searchButton.Size \u003d new Size(25, searchBox.ClientSize.Height + 2);"
      },
      {
        "lineNumber": 1667,
        "author": {
          "gitId": "-"
        },
        "content": "            searchButton.Location \u003d new Point(searchBox.ClientSize.Width - searchButton.Width, -1);"
      },
      {
        "lineNumber": 1668,
        "author": {
          "gitId": "-"
        },
        "content": "            searchButton.Image \u003d Properties.Resources.EditNameContext;"
      },
      {
        "lineNumber": 1669,
        "author": {
          "gitId": "-"
        },
        "content": "            searchButton.Cursor \u003d Cursors.Hand;"
      },
      {
        "lineNumber": 1670,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1671,
        "author": {
          "gitId": "-"
        },
        "content": "            searchBox.Controls.Add(searchButton);"
      },
      {
        "lineNumber": 1672,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1673,
        "author": {
          "gitId": "-"
        },
        "content": "            // send EM_SETMARGINS to text box to prevent words from going under the button"
      },
      {
        "lineNumber": 1674,
        "author": {
          "gitId": "-"
        },
        "content": "            Native.SendMessage(searchBox.Handle, 0xd3, (IntPtr)2, (IntPtr)(searchButton.Width \u003c\u003c 16));"
      },
      {
        "lineNumber": 1675,
        "author": {
          "gitId": "-"
        },
        "content": "            base.OnLoad(e);"
      },
      {
        "lineNumber": 1676,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1677,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1678,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SearchBoxLeave(object sender, EventArgs e)"
      },
      {
        "lineNumber": 1679,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1680,
        "author": {
          "gitId": "-"
        },
        "content": "            _searchBoxFocused \u003d false;"
      },
      {
        "lineNumber": 1681,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1682,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1683,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SearchBoxEnter(object sender, EventArgs e)"
      },
      {
        "lineNumber": 1684,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1685,
        "author": {
          "gitId": "-"
        },
        "content": "            // only when user mouse down \u0026 up in the text box we do highlighting"
      },
      {
        "lineNumber": 1686,
        "author": {
          "gitId": "-"
        },
        "content": "            if (MouseButtons \u003d\u003d MouseButtons.None)"
      },
      {
        "lineNumber": 1687,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1688,
        "author": {
          "gitId": "-"
        },
        "content": "                searchBox.SelectAll();"
      },
      {
        "lineNumber": 1689,
        "author": {
          "gitId": "-"
        },
        "content": "                _searchBoxFocused \u003d true;"
      },
      {
        "lineNumber": 1690,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1691,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1692,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1693,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SearchBoxMouseUp(object sender, MouseEventArgs e)"
      },
      {
        "lineNumber": 1694,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1695,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!_searchBoxFocused)"
      },
      {
        "lineNumber": 1696,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1697,
        "author": {
          "gitId": "-"
        },
        "content": "                if (searchBox.SelectionLength \u003d\u003d 0)"
      },
      {
        "lineNumber": 1698,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1699,
        "author": {
          "gitId": "-"
        },
        "content": "                    searchBox.SelectAll();"
      },
      {
        "lineNumber": 1700,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1701,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1702,
        "author": {
          "gitId": "-"
        },
        "content": "                _searchBoxFocused \u003d true;"
      },
      {
        "lineNumber": 1703,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1704,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1705,
        "author": {
          "gitId": "-"
        },
        "content": "        */"
      },
      {
        "lineNumber": 1706,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 1707,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1708,
        "author": {
          "gitId": "-"
        },
        "content": "        #region GUI Handles"
      },
      {
        "lineNumber": 1709,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1710,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AddShapeButton_Click(object sender, EventArgs e)"
      },
      {
        "lineNumber": 1711,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1712,
        "author": {
          "gitId": "-"
        },
        "content": "            Selection selection \u003d ActionFrameworkExtensions.GetCurrentSelection();"
      },
      {
        "lineNumber": 1713,
        "author": {
          "gitId": "-"
        },
        "content": "            ThisAddIn addIn \u003d ActionFrameworkExtensions.GetAddIn();"
      },
      {
        "lineNumber": 1714,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1715,
        "author": {
          "gitId": "-"
        },
        "content": "            AddShapeFromSelection(selection, addIn);"
      },
      {
        "lineNumber": 1716,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1717,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 1718,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        // A disabled button cannot respond to any events."
      },
      {
        "lineNumber": 1719,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        // Thus we register the event to the pane and when the mouse moves over"
      },
      {
        "lineNumber": 1720,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        // the button, the tool tip will display."
      },
      {
        "lineNumber": 1721,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        private void CustomShapePane_MouseMove(object sender, MouseEventArgs e)"
      },
      {
        "lineNumber": 1722,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1723,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            Control parent \u003d sender as Control;"
      },
      {
        "lineNumber": 1724,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            if (parent \u003d\u003d null)"
      },
      {
        "lineNumber": 1725,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1726,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 1727,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1728,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            Control ctrl \u003d parent.GetChildAtPoint(e.Location);"
      },
      {
        "lineNumber": 1729,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            if (ctrl !\u003d null)"
      },
      {
        "lineNumber": 1730,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1731,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                if (ctrl.Visible \u0026\u0026 toolTip1.Tag \u003d\u003d null)"
      },
      {
        "lineNumber": 1732,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1733,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                    if (!_toolTipShown)"
      },
      {
        "lineNumber": 1734,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1735,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                        toolTip1.Show(ShapesLabText.DisabledAddShapeToolTip, ctrl, ctrl.Width / 2, ctrl.Height / 2);"
      },
      {
        "lineNumber": 1736,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                        toolTip1.Tag \u003d ctrl;"
      },
      {
        "lineNumber": 1737,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                        _toolTipShown \u003d true;"
      },
      {
        "lineNumber": 1738,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1739,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1740,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1741,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            else"
      },
      {
        "lineNumber": 1742,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1743,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                Control toolTipCtrl \u003d toolTip1.Tag as Control;"
      },
      {
        "lineNumber": 1744,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                if (toolTipCtrl !\u003d null)"
      },
      {
        "lineNumber": 1745,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1746,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                    toolTip1.Hide(toolTipCtrl);"
      },
      {
        "lineNumber": 1747,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                    toolTip1.Tag \u003d null;"
      },
      {
        "lineNumber": 1748,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                    _toolTipShown \u003d false;"
      },
      {
        "lineNumber": 1749,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1750,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1751,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1752,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 1753,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1754,
        "author": {
          "gitId": "-"
        },
        "content": "        #region ToolTip"
      },
      {
        "lineNumber": 1755,
        "author": {
          "gitId": "-"
        },
        "content": "        private void InitToolTipControl()"
      },
      {
        "lineNumber": 1756,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1757,
        "author": {
          "gitId": "-"
        },
        "content": "            toolTip1.SetToolTip(addShapeButton, ShapesLabText.AddShapeToolTip);"
      },
      {
        "lineNumber": 1758,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1759,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 1760,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1761,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 71,
      "YuPeiHenry": 2,
      "-": 1688
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ShortcutsLab/ConvertToPicture.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Forms;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using Office \u003d Microsoft.Office.Core;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPoint \u003d Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ShortcutsLab"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    internal static class ConvertToPicture"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "#pragma warning disable 0618"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void Convert(PowerPointPresentation pres, PowerPointSlide slide, PowerPoint.Selection selection)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            if (ShapeUtil.IsSelectionShapeOrText(selection))"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPoint.Shape shape \u003d GetShapeFromSelection(selection);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                int originalZOrder \u003d shape.ZOrderPosition;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                // In case shape is corrupted"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                if (ShapeUtil.IsCorrupted(shape))"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                    shape \u003d ShapeUtil.CorruptionCorrection(shape, slide);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                ConvertToPictureForShape(pres, slide, shape, originalZOrder);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(ShortcutsLabText.ErrorTypeNotSupported, ShortcutsLabText.ErrorWindowTitle);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        public static bool ConvertAndSave(ShapeRange selectedShapes, string fileName)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            if (!ShapeUtil.IsShapeRangeShapeOrText(selectedShapes))"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(ShortcutsLabText.ErrorTypeNotSupported, ShortcutsLabText.ErrorWindowTitle);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                GraphicsUtil.ExportShape(selectedShapes, fileName);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(\"Exception during export shapes: \" + e.Message, ShortcutsLabText.ErrorWindowTitle);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        private static void ConvertToPictureForShape(PowerPointPresentation pres, PowerPointSlide slide, PowerPoint.Shape shape, int originalZOrder)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            float rotation \u003d 0;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                rotation \u003d shape.Rotation;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                shape.Rotation \u003d 0;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.LogException(e, \"Chart cannot be rotated.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            ClipboardUtil.RestoreClipboardAfterAction(() \u003d\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                shape.Copy();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                float x \u003d shape.Left;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                float y \u003d shape.Top;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                float width \u003d shape.Width;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                float height \u003d shape.Height;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                shape.Delete();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPoint.Shape pic \u003d slide.Shapes.PasteSpecial(PowerPoint.PpPasteDataType.ppPastePNG)[1];"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                pic.Left \u003d x + (width - pic.Width) / 2;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                pic.Top \u003d y + (height - pic.Height) / 2;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                pic.Rotation \u003d rotation;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                // move picture to original z-order"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                while (pic.ZOrderPosition \u003e originalZOrder)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                    pic.ZOrder(Office.MsoZOrderCmd.msoSendBackward);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                while (pic.ZOrderPosition \u003c originalZOrder)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                    pic.ZOrder(Office.MsoZOrderCmd.msoBringForward);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                pic.Select();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                return pic;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            }, pres, slide);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        private static PowerPoint.Shape GetShapeFromSelection(PowerPoint.Selection selection)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            return GetShapeFromSelection(selection.ShapeRange);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        private static PowerPoint.Shape GetShapeFromSelection(PowerPoint.ShapeRange shapeRange)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Shape result \u003d shapeRange.Count \u003e 1 ? shapeRange.Group() : shapeRange[1];"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 1,
      "-": 107
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/ArtisticEffectFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Core;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * ArtisticEffects cannot be chained, despite the PictureEffect returning a collection of PictureEffect objects"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * It is not clear what a PictureEffect truly represents"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * Users cannot manually select picture effects they wish to apply"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    class ArtisticEffectFormat: Format"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                return formatShape.Fill.PictureEffects.Count \u003e 0;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            } "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            catch"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync ArtisticEffect Format\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            Bitmap image \u003d GraphicsUtil.ShapeToBitmap(formatShape);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            return image;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        public static List\u003cMsoPictureEffectType\u003e GetArtisticEffects(Shape shape)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cMsoPictureEffectType\u003e artisticEffects \u003d new List\u003cMsoPictureEffectType\u003e();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                PictureEffects effects \u003d shape.Fill.PictureEffects;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                for (int i \u003d 1; i \u003c\u003d effects.Count; i++)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                    PictureEffect effect \u003d effects[i];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                    artisticEffects.Add(effect.Type);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                // do nothing, shape does not support picture effect"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            return artisticEffects;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void ClearArtisticEffects(Shape shape)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                PictureEffects dest \u003d shape.Fill.PictureEffects;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                for (int i \u003d 1; i \u003c\u003d dest.Count; i++)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                    dest.Delete(i);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                // ignore the exception, this shape is not compatible with ArtisticEffects."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void ApplyArtisticEffects(Shape shape, List\u003cMsoPictureEffectType\u003e effectTypes)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            // add new effects"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                PictureEffects dest \u003d shape.Fill.PictureEffects;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                for (int i \u003d 0; i \u003c effectTypes.Count; i++)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                    int index \u003d i + 1;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                    dest.Insert(effectTypes[i], index);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                // ignore the exception, this shape is not compatible with ArtisticEffects."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "         * Replace all existing artistic effects with those from the source shape"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                // access PictureEffects, just to make sure shapes are compatible with ArtisticEffect"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                // will throw an exception otherwise"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                PictureEffects dest \u003d newShape.Fill.PictureEffects;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                PictureEffects source \u003d formatShape.Fill.PictureEffects;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                List\u003cMsoPictureEffectType\u003e effectTypes \u003d GetArtisticEffects(formatShape);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                // clear the existing artistic effects,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                // might experience unexpected behavior if they are left in the shape"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                ClearArtisticEffects(newShape);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                ApplyArtisticEffects(newShape, effectTypes);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync ArtisticEffectFormat\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 3,
      "-": 124
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/BevelBottomFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Core;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using Shapes \u003d Microsoft.Office.Interop.PowerPoint.Shapes;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using ThreeDFormat \u003d Microsoft.Office.Interop.PowerPoint.ThreeDFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    class BevelBottomFormat: Format"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync BevelBottom Format\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            Shapes shapes \u003d SyncFormatUtil.GetTemplateShapes();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape shape \u003d shapes.AddShape("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                    MsoAutoShapeType.msoShapeRectangle, 0, 0, "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                    SyncFormatConstants.DisplayImageSize.Width,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                    SyncFormatConstants.DisplayImageSize.Height);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Line.Visible \u003d MsoTriState.msoFalse;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.ThreeD.Depth \u003d SyncFormatConstants.DisplayImageDepth;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            // don\u0027t set type if type is TypeMixed, it throws an exception"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            if (formatShape.ThreeD.BevelBottomType !\u003d MsoBevelType.msoBevelTypeMixed)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                // paste the effect type on the top bevel to reuse the rotation constants"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                shape.ThreeD.BevelTopType \u003d formatShape.ThreeD.BevelBottomType;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                // set depth \u0026 inset only if type is not none,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                // adjusting these 2 will automatically set type from None to Round"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                if (shape.ThreeD.BevelTopType !\u003d MsoBevelType.msoBevelNone)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                    shape.ThreeD.BevelTopDepth \u003d SyncFormatConstants.DisplayBevelHeight;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                    shape.ThreeD.BevelTopInset \u003d SyncFormatConstants.DisplayBevelWidth;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.ThreeD.BevelBottomType \u003d MsoBevelType.msoBevelNone;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.ThreeD.SetPresetCamera(MsoPresetCamera.msoCameraPerspectiveBelow);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.ThreeD.PresetLighting \u003d MsoLightRigType.msoLightRigBalanced;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            Bitmap image \u003d new Bitmap(GraphicsUtil.ShapeToBitmap(shape));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Delete();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            return image;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            ThreeDFormat source \u003d formatShape.ThreeD;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            ThreeDFormat dest \u003d newShape.ThreeD;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                // bottom bevel"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                // don\u0027t set type if type is TypeMixed, it throws an exception"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                if (source.BevelBottomType !\u003d MsoBevelType.msoBevelTypeMixed)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                    dest.BevelBottomType \u003d source.BevelBottomType;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                    // set depth \u0026 inset only if type is not none,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                    // adjusting these 2 will automatically set type from None to Round"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (source.BevelBottomType !\u003d MsoBevelType.msoBevelNone)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                        // set the settings anyway, setting the type alone is insufficient"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                        dest.BevelBottomDepth \u003d source.BevelBottomDepth;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                        dest.BevelBottomInset \u003d source.BevelBottomInset;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync BevelBottomFormat\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 3,
      "-": 92
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/BevelTopFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Core;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using Shapes \u003d Microsoft.Office.Interop.PowerPoint.Shapes;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using ThreeDFormat \u003d Microsoft.Office.Interop.PowerPoint.ThreeDFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    class BevelTopFormat: Format"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync BevelTop Format\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            Shapes shapes \u003d SyncFormatUtil.GetTemplateShapes();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape shape \u003d shapes.AddShape("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                    MsoAutoShapeType.msoShapeRectangle, 0, 0, "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                    SyncFormatConstants.DisplayImageSize.Width,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                    SyncFormatConstants.DisplayImageSize.Height);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Line.Visible \u003d MsoTriState.msoFalse;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.ThreeD.Depth \u003d SyncFormatConstants.DisplayImageDepth;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            // don\u0027t set type if type is TypeMixed, it throws an exception"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            if (formatShape.ThreeD.BevelTopType !\u003d MsoBevelType.msoBevelTypeMixed)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                shape.ThreeD.BevelTopType \u003d formatShape.ThreeD.BevelTopType;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                // set depth \u0026 inset only if type is not none,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                // adjusting these 2 will automatically set type from None to Round"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                if (shape.ThreeD.BevelTopType !\u003d MsoBevelType.msoBevelNone)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                    shape.ThreeD.BevelTopDepth \u003d SyncFormatConstants.DisplayBevelHeight;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                    shape.ThreeD.BevelTopInset \u003d SyncFormatConstants.DisplayBevelWidth;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.ThreeD.BevelBottomType \u003d MsoBevelType.msoBevelNone;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.ThreeD.SetPresetCamera(MsoPresetCamera.msoCameraPerspectiveAbove);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.ThreeD.PresetLighting \u003d MsoLightRigType.msoLightRigBalanced;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            Bitmap image \u003d new Bitmap(GraphicsUtil.ShapeToBitmap(shape));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Delete();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            return image;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            ThreeDFormat source \u003d formatShape.ThreeD;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            ThreeDFormat dest \u003d newShape.ThreeD;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                // don\u0027t set type if type is TypeMixed, it throws an exception"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                if (source.BevelTopType !\u003d MsoBevelType.msoBevelTypeMixed)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                    dest.BevelTopType \u003d source.BevelTopType;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                    // set depth \u0026 inset only if type is not none,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                    // adjusting these 2 will automatically set type from None to Round"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (source.BevelTopType !\u003d MsoBevelType.msoBevelNone)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                        // set the settings anyway, setting the type alone is insufficient"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                        dest.BevelTopDepth \u003d source.BevelTopDepth;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                        dest.BevelTopInset \u003d source.BevelTopInset;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync BevelTopFormat\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 2,
      "-": 91
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/ContourColorFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Core;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using Shapes \u003d Microsoft.Office.Interop.PowerPoint.Shapes;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using ThreeDFormat \u003d Microsoft.Office.Interop.PowerPoint.ThreeDFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    class ContourColorFormat: Format"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync ContourColor Format\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            Shapes shapes \u003d SyncFormatUtil.GetTemplateShapes();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape shape \u003d shapes.AddShape("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                    MsoAutoShapeType.msoShapeRectangle, 0, 0, "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                    SyncFormatConstants.DisplayImageSize.Width,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                    SyncFormatConstants.DisplayImageSize.Height);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Fill.ForeColor.RGB \u003d formatShape.ThreeD.ContourColor.RGB;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Fill.ForeColor.TintAndShade \u003d formatShape.ThreeD.ContourColor.TintAndShade;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Line.Visible \u003d MsoTriState.msoFalse;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            Bitmap image \u003d new Bitmap(GraphicsUtil.ShapeToBitmap(shape));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Delete();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            return image;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            ThreeDFormat source \u003d formatShape.ThreeD;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            ThreeDFormat dest \u003d newShape.ThreeD;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                // do not set SchemeColor, Brightness \u0026 ObjectThemeColor, setting them throws exceptions"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                dest.ContourColor.RGB \u003d source.ContourColor.RGB;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                dest.ContourColor.TintAndShade \u003d source.ContourColor.TintAndShade;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync ContourColorFormat\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 4,
      "-": 65
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/ContourWidthFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using ThreeDFormat \u003d Microsoft.Office.Interop.PowerPoint.ThreeDFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    class ContourWidthFormat: Format"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync ContourWidth Format\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            return SyncFormatUtil.GetTextDisplay("
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                $\"{Math.Round(formatShape.ThreeD.ContourWidth, 1)} {SyncFormatConstants.DisplaySizeUnit}\","
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatConstants.DisplayImageFont,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatConstants.DisplayImageSize);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            ThreeDFormat source \u003d formatShape.ThreeD;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            ThreeDFormat dest \u003d newShape.ThreeD;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                dest.ContourWidth \u003d source.ContourWidth;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync ContourWidthFormat\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 2,
      "-": 53
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/DepthColorFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Core;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using Shapes \u003d Microsoft.Office.Interop.PowerPoint.Shapes;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using ThreeDFormat \u003d Microsoft.Office.Interop.PowerPoint.ThreeDFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    class DepthColorFormat: Format"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync DepthColor Format\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            Shapes shapes \u003d SyncFormatUtil.GetTemplateShapes();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape shape \u003d shapes.AddShape("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                    MsoAutoShapeType.msoShapeRectangle, 0, 0, "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                    SyncFormatConstants.DisplayImageSize.Width,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                    SyncFormatConstants.DisplayImageSize.Height);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            // do not sync extrusion theme color with forecolor, it throws an exception"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Fill.ForeColor.RGB \u003d formatShape.ThreeD.ExtrusionColor.RGB;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Fill.ForeColor.TintAndShade \u003d formatShape.ThreeD.ExtrusionColor.TintAndShade;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Line.Visible \u003d MsoTriState.msoFalse;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            Bitmap image \u003d new Bitmap(GraphicsUtil.ShapeToBitmap(shape));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Delete();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            return image;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            ThreeDFormat source \u003d formatShape.ThreeD;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            ThreeDFormat dest \u003d newShape.ThreeD;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                // don\u0027t set type if type is TypeMixed, it throws an exception"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                if (source.ExtrusionColorType !\u003d MsoExtrusionColorType.msoExtrusionColorTypeMixed)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                    dest.ExtrusionColorType \u003d source.ExtrusionColorType;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                if (source.ExtrusionColorType !\u003d MsoExtrusionColorType.msoExtrusionColorAutomatic)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                    // do not set SchemeColor \u0026 Brightness, setting them throws exceptions"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                    dest.ExtrusionColor.ObjectThemeColor \u003d source.ExtrusionColor.ObjectThemeColor;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                    dest.ExtrusionColor.RGB \u003d source.ExtrusionColor.RGB;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                    dest.ExtrusionColor.TintAndShade \u003d source.ExtrusionColor.TintAndShade;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync DepthColorFormat\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 2,
      "-": 76
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/DepthSizeFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Core;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using ThreeDFormat \u003d Microsoft.Office.Interop.PowerPoint.ThreeDFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    class DepthSizeFormat: Format"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync DepthSize Format\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            float depth \u003d formatShape.ThreeD.Depth;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            if (HasErrorneousDepth(formatShape))"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                depth \u003d 0f;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            return SyncFormatUtil.GetTextDisplay("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                $\"{Math.Round(depth, 1)} {SyncFormatConstants.DisplaySizeUnit}\","
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatConstants.DisplayImageFont,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatConstants.DisplayImageSize);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            ThreeDFormat source \u003d formatShape.ThreeD;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            ThreeDFormat dest \u003d newShape.ThreeD;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                if (HasErrorneousDepth(formatShape) \u0026\u0026 HasErrorneousDepth(newShape))"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                    // both have no 3d settings, do nothing"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                    // setting depth here changes the color of the shape slightly for unknown reasons"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                    // we cannot revert this change"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                float depth \u003d source.Depth;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                if (HasErrorneousDepth(formatShape))"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                    // fresh shapes actually have 0 depth"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                    depth \u003d 0f;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                dest.Depth \u003d depth;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync DepthSizeFormat\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "         * Checks if the shape gives the wrong depth"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "         * The API gives the wrong depth value at times (gives 36, when it should be 0)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool HasErrorneousDepth(Shape shape)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            // seems to happen PresetMaterial \u003d\u003d Mixed "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            // the Mixed type seems to be reserved for shapes with untouched depth, material or contour"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            return shape.ThreeD.PresetMaterial \u003d\u003d MsoPresetMaterial.msoPresetMaterialMixed;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 2,
      "-": 85
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/FillFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    class FillFormat: Format "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape duplicateShape \u003d formatShape.Duplicate()[1];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            bool canCopy \u003d Sync(formatShape, duplicateShape);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            duplicateShape.Delete();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            return canCopy;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync Fill\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            Shapes shapes \u003d SyncFormatUtil.GetTemplateShapes();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape shape \u003d shapes.AddShape("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                    Microsoft.Office.Core.MsoAutoShapeType.msoShapeRectangle, 0, 0, "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                    SyncFormatConstants.DisplayImageSize.Width,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                    SyncFormatConstants.DisplayImageSize.Height);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Line.Visible \u003d Microsoft.Office.Core.MsoTriState.msoFalse;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            SyncFormat(formatShape, shape);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            Bitmap image \u003d new Bitmap(GraphicsUtil.ShapeToBitmap(shape));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Delete();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            return image;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                // force msoFillMixed to msoFillSolid"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                // freshly created textboxes have the msoFillMixed type "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                // otherwise, msoFillMixed only appears when multiple shapes are selected"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                // manual conversion is needed as msoFillMixed textboxes risk system forced conversions to msoFillSolid"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                // system forced conversions will set fill color to black"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                //"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                // lines also have the msoFillMixed type"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                // they have no fill, throwing an exception in the following if block"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                // this is desired behavior, disabling FillFormat for lines"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                if (formatShape.Fill.Type \u003d\u003d Microsoft.Office.Core.MsoFillType.msoFillMixed)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                    int oldColor \u003d formatShape.Fill.ForeColor.RGB;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                    float oldTransparency \u003d formatShape.Fill.Transparency;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                    formatShape.Fill.Solid();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                    formatShape.Fill.ForeColor.RGB \u003d oldColor;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                    formatShape.Fill.Transparency \u003d oldTransparency;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                switch (formatShape.Fill.Type)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    case Microsoft.Office.Core.MsoFillType.msoFillPatterned:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                        newShape.Fill.Patterned(formatShape.Fill.Pattern);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                        newShape.Fill.ForeColor.RGB \u003d formatShape.Fill.ForeColor.RGB;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                        newShape.Fill.BackColor.RGB \u003d formatShape.Fill.BackColor.RGB;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    case Microsoft.Office.Core.MsoFillType.msoFillBackground:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                        newShape.Fill.Background();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    case Microsoft.Office.Core.MsoFillType.msoFillSolid:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                        newShape.Fill.Solid();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                        newShape.Fill.ForeColor.RGB \u003d formatShape.Fill.ForeColor.RGB;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    case Microsoft.Office.Core.MsoFillType.msoFillGradient:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                        SyncGradient(formatShape, newShape);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync FillFormat\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        private static void SyncGradient(Shape formatShape, Shape newShape) //should return bool?"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            Microsoft.Office.Core.MsoGradientColorType gradientColorType \u003d formatShape.Fill.GradientColorType;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            if (gradientColorType \u003d\u003d Microsoft.Office.Core.MsoGradientColorType.msoGradientOneColor)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                newShape.Fill.OneColorGradient(formatShape.Fill.GradientStyle, formatShape.Fill.GradientVariant, formatShape.Fill.GradientDegree);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncInitialGradientStops(formatShape, newShape);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (gradientColorType \u003d\u003d Microsoft.Office.Core.MsoGradientColorType.msoGradientTwoColors)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                newShape.Fill.TwoColorGradient(formatShape.Fill.GradientStyle, formatShape.Fill.GradientVariant);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncInitialGradientStops(formatShape, newShape);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (gradientColorType \u003d\u003d Microsoft.Office.Core.MsoGradientColorType.msoGradientPresetColors)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                newShape.Fill.PresetGradient(formatShape.Fill.GradientStyle, formatShape.Fill.GradientVariant, formatShape.Fill.PresetGradientType);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (gradientColorType \u003d\u003d Microsoft.Office.Core.MsoGradientColorType.msoGradientMultiColor)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                int formatGradientVarient \u003d 1;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                try"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                    formatGradientVarient \u003d formatShape.Fill.GradientVariant;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                catch"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                    formatGradientVarient \u003d 1;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                newShape.Fill.OneColorGradient(formatShape.Fill.GradientStyle, formatGradientVarient, 0);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncInitialGradientStops(formatShape, newShape);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                for (int i \u003d 3; i \u003c\u003d formatShape.Fill.GradientStops.Count; i++)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                    newShape.Fill.GradientStops.Insert(formatShape.Fill.GradientStops[i].Color.RGB,"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                        formatShape.Fill.GradientStops[i].Position, formatShape.Fill.GradientStops[i].Transparency);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "                try"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                    newShape.Fill.GradientAngle \u003d formatShape.Fill.GradientAngle;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                catch (Exception)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "                    //gradient has no angle"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        private static void SyncInitialGradientStops(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            newShape.Fill.GradientStops[1].Color.RGB \u003d formatShape.Fill.GradientStops[1].Color.RGB;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            newShape.Fill.GradientStops[1].Position \u003d formatShape.Fill.GradientStops[1].Position;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            newShape.Fill.GradientStops[2].Color.RGB \u003d formatShape.Fill.GradientStops[2].Color.RGB;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            newShape.Fill.GradientStops[2].Position \u003d formatShape.Fill.GradientStops[2].Position;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "            newShape.Fill.RotateWithObject \u003d formatShape.Fill.RotateWithObject;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 13,
      "-": 141
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/FillTransparencyFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    class FillTransparencyFormat: Format"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "            return Sync(formatShape, formatShape);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync Fill Transparency\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            return SyncFormatUtil.GetTextDisplay("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                Math.Round(formatShape.Fill.Transparency*100).ToString() + \"%\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatConstants.DisplayImageFont,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatConstants.DisplayImageSize);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                newShape.Fill.Transparency \u003d formatShape.Fill.Transparency;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync FillTransparencyFormat\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 3,
      "-": 44
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/FontColorFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Core;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using Shapes \u003d Microsoft.Office.Interop.PowerPoint.Shapes;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    class FontColorFormat: Format"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            return formatShape.HasTextFrame \u003d\u003d MsoTriState.msoTrue;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync Font Color\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            Shapes shapes \u003d SyncFormatUtil.GetTemplateShapes();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape shape \u003d shapes.AddShape("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                    Microsoft.Office.Core.MsoAutoShapeType.msoShapeRectangle, 0, 0,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                    SyncFormatConstants.DisplayImageSize.Width,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                    SyncFormatConstants.DisplayImageSize.Height);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Line.Visible \u003d Microsoft.Office.Core.MsoTriState.msoFalse;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            int guessedColor \u003d ShapeUtil.GuessTextColor(formatShape);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Fill.ForeColor.RGB \u003d guessedColor;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Fill.BackColor.RGB \u003d guessedColor;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Fill.Solid();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            Bitmap image \u003d GraphicsUtil.ShapeToBitmap(shape);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Delete();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            return image;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                int guessedColor \u003d ShapeUtil.GuessTextColor(formatShape);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                newShape.TextFrame.TextRange.Font.Color.RGB \u003d guessedColor;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync FontColorFormat\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 3,
      "-": 59
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/FontFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    class FontFormat: Format"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "            return Sync(formatShape, formatShape);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync Font Format\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            return SyncFormatUtil.GetTextDisplay("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatConstants.DisplayFontString,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                new System.Drawing.Font(formatShape.TextEffect.FontName,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                                        SyncFormatConstants.DisplayImageFontSize),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatConstants.DisplayImageSize);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                newShape.TextEffect.FontName \u003d formatShape.TextEffect.FontName;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync FontFormat\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 3,
      "-": 45
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/FontSizeFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    class FontSizeFormat: Format"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "            return Sync(formatShape, formatShape);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync Font Size\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            return SyncFormatUtil.GetTextDisplay("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                Math.Round(formatShape.TextEffect.FontSize).ToString(),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatConstants.DisplayImageFont,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatConstants.DisplayImageSize);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                newShape.TextEffect.FontSize \u003d formatShape.TextEffect.FontSize;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync FontSizeFormat\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 3,
      "-": 44
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/FontStyleFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    class FontStyleFormat: Format"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "            return Sync(formatShape, formatShape);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync Font Style\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Drawing.Font font \u003d SyncFormatConstants.DisplayImageFont;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            Microsoft.Office.Interop.PowerPoint.Font formatFont \u003d formatShape.TextFrame.TextRange.Font;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            FontStyle style \u003d 0;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            if (formatFont.Underline \u003d\u003d Microsoft.Office.Core.MsoTriState.msoTrue)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                style |\u003d FontStyle.Underline;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            if (formatFont.Bold \u003d\u003d Microsoft.Office.Core.MsoTriState.msoTrue)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                style |\u003d FontStyle.Bold;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            if (formatFont.Italic \u003d\u003d Microsoft.Office.Core.MsoTriState.msoTrue)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                style |\u003d FontStyle.Italic;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            font \u003d new System.Drawing.Font(font.FontFamily, font.Size, style);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            return SyncFormatUtil.GetTextDisplay(SyncFormatConstants.DisplayFontString, font,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                                                SyncFormatConstants.DisplayImageSize);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncTextRange(formatShape.TextFrame.TextRange, newShape.TextFrame.TextRange);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync FontStyleFormat\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        private static void SyncTextRange(TextRange formatTextRange, TextRange newTextRange)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            newTextRange.Font.Underline \u003d formatTextRange.Font.Underline;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            newTextRange.Font.Bold \u003d formatTextRange.Font.Bold;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            newTextRange.Font.Italic \u003d formatTextRange.Font.Italic;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 3,
      "-": 65
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/GlowColorFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Core;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using Shapes \u003d Microsoft.Office.Interop.PowerPoint.Shapes;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    class GlowColorFormat: Format"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            GlowFormat glow \u003d formatShape.Glow;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            return glow.Radius \u003e 0 \u0026\u0026 glow.Transparency \u003e 0.0f;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync GlowEffect Format\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            Shapes shapes \u003d SyncFormatUtil.GetTemplateShapes();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape shape \u003d shapes.AddShape("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                    Microsoft.Office.Core.MsoAutoShapeType.msoShapeRectangle, 0, 0,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                    SyncFormatConstants.DisplayImageSize.Width,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                    SyncFormatConstants.DisplayImageSize.Height);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Line.Visible \u003d Microsoft.Office.Core.MsoTriState.msoFalse;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Fill.ForeColor.RGB \u003d formatShape.Glow.Color.RGB;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Fill.ForeColor.Brightness \u003d formatShape.Glow.Color.Brightness;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Fill.ForeColor.TintAndShade \u003d formatShape.Glow.Color.TintAndShade;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Fill.Solid();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            Bitmap image \u003d GraphicsUtil.ShapeToBitmap(shape);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Delete();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            return image;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                GlowFormat dest \u003d newShape.Glow;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                GlowFormat source \u003d formatShape.Glow;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                // Color.SchemeColor must be skipped, setting it sometimes throws an exception for unknown reasons."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                // Color.ObjectThemeColor must be set despite the unrelated description in documentation."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                // The color intensity of glow will not match otherwise"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                // syncing NotThemeColor throws an exception"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                if (source.Color.ObjectThemeColor !\u003d MsoThemeColorIndex.msoNotThemeColor)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                    dest.Color.ObjectThemeColor \u003d source.Color.ObjectThemeColor;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                dest.Color.RGB \u003d source.Color.RGB;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                dest.Color.Brightness \u003d source.Color.Brightness;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                dest.Color.TintAndShade \u003d source.Color.TintAndShade;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync GlowColorFormat\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 3,
      "-": 75
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/GlowSizeFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Core;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    class GlowSizeFormat: Format"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            GlowFormat glow \u003d formatShape.Glow;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            return glow.Radius \u003e 0 \u0026\u0026 glow.Transparency \u003e 0.0f;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync GlowSize Format\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            return SyncFormatUtil.GetTextDisplay("
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                Math.Round(formatShape.Glow.Radius).ToString(),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatConstants.DisplayImageFont,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatConstants.DisplayImageSize);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                GlowFormat dest \u003d newShape.Glow;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                GlowFormat source \u003d formatShape.Glow;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                dest.Radius \u003d source.Radius;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync GlowSizeFormat\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 3,
      "-": 50
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/GlowTransparencyFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Core;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    class GlowTransparencyFormat: Format"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            GlowFormat glow \u003d formatShape.Glow;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            return glow.Radius \u003e 0 \u0026\u0026 glow.Transparency \u003e 0.0f;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync GlowTransparency Format\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            return SyncFormatUtil.GetTextDisplay("
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                Math.Round(formatShape.Glow.Transparency * 100).ToString() + \"%\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatConstants.DisplayImageFont,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatConstants.DisplayImageSize);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                GlowFormat dest \u003d newShape.Glow;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                GlowFormat source \u003d formatShape.Glow;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                dest.Transparency \u003d source.Transparency;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync GlowTransparencyFormat\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 3,
      "-": 50
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/LightingAngleFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using ThreeDFormat \u003d Microsoft.Office.Interop.PowerPoint.ThreeDFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    class LightingAngleFormat: Format"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync LightingEffect Format\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            return SyncFormatUtil.GetTextDisplay("
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                $\"{formatShape.ThreeD.LightAngle}{SyncFormatConstants.DisplayDegreeSymbol}\","
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatConstants.DisplayImageFont,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatConstants.DisplayImageSize);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            ThreeDFormat source \u003d formatShape.ThreeD;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            ThreeDFormat dest \u003d newShape.ThreeD;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                dest.LightAngle \u003d source.LightAngle;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync LightingAngleFormat\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 2,
      "-": 52
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/LightingEffectFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Core;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using Shapes \u003d Microsoft.Office.Interop.PowerPoint.Shapes;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using ThreeDFormat \u003d Microsoft.Office.Interop.PowerPoint.ThreeDFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    class LightingEffectFormat: Format"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync LightingEffect Format\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            Shapes shapes \u003d SyncFormatUtil.GetTemplateShapes();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape shape \u003d shapes.AddShape("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                    MsoAutoShapeType.msoShapeRectangle, 0, 0, "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                    SyncFormatConstants.DisplayImageSize.Width,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                    SyncFormatConstants.DisplayImageSize.Height);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Line.Visible \u003d MsoTriState.msoFalse;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.ThreeD.Depth \u003d SyncFormatConstants.DisplayImageDepth;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.ThreeD.BevelTopType \u003d SyncFormatConstants.DisplayBevelType;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.ThreeD.BevelTopDepth \u003d SyncFormatConstants.DisplayBevelHeight;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.ThreeD.BevelTopInset \u003d SyncFormatConstants.DisplayBevelWidth;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.ThreeD.BevelBottomType \u003d SyncFormatConstants.DisplayBevelType;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.ThreeD.BevelBottomDepth \u003d SyncFormatConstants.DisplayBevelHeight;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.ThreeD.BevelBottomInset \u003d SyncFormatConstants.DisplayBevelWidth;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            // setting mixed throws an exception"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            if (formatShape.ThreeD.PresetLighting !\u003d MsoLightRigType.msoLightRigMixed)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                shape.ThreeD.PresetLighting \u003d formatShape.ThreeD.PresetLighting;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.ThreeD.SetPresetCamera(SyncFormatConstants.DisplayCameraPreset);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            Bitmap image \u003d new Bitmap(GraphicsUtil.ShapeToBitmap(shape));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Delete();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            return image;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            ThreeDFormat source \u003d formatShape.ThreeD;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            ThreeDFormat dest \u003d newShape.ThreeD;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                // set lighting manually if type Mixed, setting type to Mixed throws an exception"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                if (source.PresetLighting \u003d\u003d MsoLightRigType.msoLightRigMixed)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                    dest.PresetLightingDirection \u003d source.PresetLightingDirection;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                    dest.PresetLightingSoftness \u003d source.PresetLightingSoftness;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                    // set lighting preset if not type Mixed"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                    dest.PresetLighting \u003d source.PresetLighting;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync LightingEffectFormat\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 4,
      "-": 85
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/LineArrowFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    class LineArrowFormat: Format"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            return Sync(formatShape, formatShape);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync Line Arrow\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            Shapes shapes \u003d SyncFormatUtil.GetTemplateShapes();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape shape \u003d shapes.AddLine("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                0, SyncFormatConstants.DisplayImageSize.Height,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatConstants.DisplayImageSize.Width, 0);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            SyncFormat(formatShape, shape);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            Bitmap image \u003d GraphicsUtil.ShapeToBitmap(shape);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Delete();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            return image;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                newShape.Line.BeginArrowheadLength \u003d formatShape.Line.BeginArrowheadLength;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                newShape.Line.BeginArrowheadStyle \u003d formatShape.Line.BeginArrowheadStyle;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                newShape.Line.BeginArrowheadWidth \u003d formatShape.Line.BeginArrowheadWidth;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                newShape.Line.EndArrowheadLength \u003d formatShape.Line.EndArrowheadLength;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                newShape.Line.EndArrowheadStyle \u003d formatShape.Line.EndArrowheadStyle;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                newShape.Line.EndArrowheadWidth \u003d formatShape.Line.EndArrowheadWidth;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync LineArrowFormat\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 2,
      "-": 56
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/LineCompoundTypeFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    class LineCompoundTypeFormat: Format"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            return Sync(formatShape, formatShape);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync Line Style\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            Shapes shapes \u003d SyncFormatUtil.GetTemplateShapes();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape shape \u003d shapes.AddLine("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                0, SyncFormatConstants.DisplayImageSize.Height,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatConstants.DisplayImageSize.Width, 0);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            SyncFormat(formatShape, shape);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Line.ForeColor.RGB \u003d SyncFormatConstants.ColorBlack;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Line.Weight \u003d SyncFormatConstants.DisplayLineWeight;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            Bitmap image \u003d GraphicsUtil.ShapeToBitmap(shape);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Delete();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            return image;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                newShape.Line.Style \u003d formatShape.Line.Style;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync LineCompoundTypeFormat\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 3,
      "-": 51
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/LineDashTypeFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    class LineDashTypeFormat: Format"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            return Sync(formatShape, formatShape);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync Dash Style\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            Shapes shapes \u003d SyncFormatUtil.GetTemplateShapes();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape shape \u003d shapes.AddLine("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                0, SyncFormatConstants.DisplayImageSize.Height,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatConstants.DisplayImageSize.Width, 0);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            SyncFormat(formatShape, shape);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Line.ForeColor.RGB \u003d SyncFormatConstants.ColorBlack;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Line.Weight \u003d SyncFormatConstants.DisplayLineWeight;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            Bitmap image \u003d GraphicsUtil.ShapeToBitmap(shape);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Delete();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            return image;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                newShape.Line.DashStyle \u003d formatShape.Line.DashStyle;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync LineDashTypeFormat\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 3,
      "-": 51
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/LineFillFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    class LineFillFormat: Format"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            return Sync(formatShape, formatShape);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync Line Fill\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            Shapes shapes \u003d SyncFormatUtil.GetTemplateShapes();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape shape \u003d shapes.AddShape("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                    Microsoft.Office.Core.MsoAutoShapeType.msoShapeRectangle, 0, 0,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                    SyncFormatConstants.DisplayImageSize.Width,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                    SyncFormatConstants.DisplayImageSize.Height);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Line.Visible \u003d Microsoft.Office.Core.MsoTriState.msoFalse;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Fill.ForeColor \u003d formatShape.Line.ForeColor;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            Bitmap image \u003d GraphicsUtil.ShapeToBitmap(shape);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Delete();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            return image;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                newShape.Line.ForeColor.RGB \u003d formatShape.Line.ForeColor.RGB;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                newShape.Line.BackColor.RGB \u003d formatShape.Line.BackColor.RGB;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync LineFillFormat\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 3,
      "-": 52
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/LineTransparencyFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    class LineTransparencyFormat: Format"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "            return Sync(formatShape, formatShape);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync Transparency\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            return SyncFormatUtil.GetTextDisplay("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                Math.Round(formatShape.Line.Transparency * 100).ToString() + \"%\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatConstants.DisplayImageFont,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatConstants.DisplayImageSize);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                newShape.Line.Transparency \u003d formatShape.Line.Transparency;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync LineTransparencyFormat\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 3,
      "-": 44
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/LineWeightFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    class LineWeightFormat: Format"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "            return Sync(formatShape, formatShape);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync Line Weight\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            return SyncFormatUtil.GetTextDisplay("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                Math.Max(formatShape.Line.Weight, 0).ToString(\".#\"),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatConstants.DisplayImageFont,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatConstants.DisplayImageSize);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                newShape.Line.Weight \u003d formatShape.Line.Weight;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync LineWeightFormat\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 3,
      "-": 44
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/MaterialEffectFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Core;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using Shapes \u003d Microsoft.Office.Interop.PowerPoint.Shapes;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using ThreeDFormat \u003d Microsoft.Office.Interop.PowerPoint.ThreeDFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    class MaterialEffectFormat: Format"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync MaterialEffect Format\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            Shapes shapes \u003d SyncFormatUtil.GetTemplateShapes();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape shape \u003d shapes.AddShape("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                    MsoAutoShapeType.msoShapeRectangle, 0, 0, "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                    SyncFormatConstants.DisplayImageSize.Width,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                    SyncFormatConstants.DisplayImageSize.Height);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Line.Visible \u003d MsoTriState.msoFalse;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.ThreeD.Depth \u003d SyncFormatConstants.DisplayImageDepth;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.ThreeD.BevelTopType \u003d SyncFormatConstants.DisplayBevelType;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.ThreeD.BevelTopDepth \u003d SyncFormatConstants.DisplayBevelHeight;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.ThreeD.BevelTopInset \u003d SyncFormatConstants.DisplayBevelWidth;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.ThreeD.BevelBottomType \u003d SyncFormatConstants.DisplayBevelType;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.ThreeD.BevelBottomDepth \u003d SyncFormatConstants.DisplayBevelHeight;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.ThreeD.BevelBottomInset \u003d SyncFormatConstants.DisplayBevelWidth;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            // setting mixed throws an exception"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            // show flat type instead, which looks very similar"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            if (formatShape.ThreeD.PresetMaterial \u003d\u003d MsoPresetMaterial.msoPresetMaterialMixed)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                shape.ThreeD.PresetMaterial \u003d MsoPresetMaterial.msoMaterialFlat;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                shape.ThreeD.PresetMaterial \u003d formatShape.ThreeD.PresetMaterial;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.ThreeD.SetPresetCamera(SyncFormatConstants.DisplayCameraPreset);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            Bitmap image \u003d new Bitmap(GraphicsUtil.ShapeToBitmap(shape));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Delete();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            return image;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            ThreeDFormat source \u003d formatShape.ThreeD;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            ThreeDFormat dest \u003d newShape.ThreeD;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                // setting Mixed throws an exception"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                // the user is unable to set Mixed type manually"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                // it seems to be reserved for shapes that have all 3d settings set to default"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                // show Flat type instead, which looks very similar"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                if (source.PresetMaterial \u003d\u003d MsoPresetMaterial.msoPresetMaterialMixed)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                    dest.PresetMaterial \u003d MsoPresetMaterial.msoMaterialFlat;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                    dest.PresetMaterial \u003d source.PresetMaterial;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync MaterialEffectFormat\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 4,
      "-": 89
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/ReflectionBlurFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Core;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    class ReflectionBlurFormat: Format"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            return formatShape.Reflection.Type !\u003d MsoReflectionType.msoReflectionTypeNone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync ReflectionBlur format\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            return SyncFormatUtil.GetTextDisplay("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                Math.Round(formatShape.Reflection.Blur, 1).ToString(),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatConstants.DisplayImageFont,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatConstants.DisplayImageSize);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                ReflectionFormat srcFormat \u003d formatShape.Reflection;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                ReflectionFormat destFormat \u003d newShape.Reflection;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                destFormat.Blur \u003d srcFormat.Blur;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync ReflectionBlurFormat\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 3,
      "-": 49
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/ReflectionDistanceFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Core;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    class ReflectionDistanceFormat: Format"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            return formatShape.Reflection.Type !\u003d MsoReflectionType.msoReflectionTypeNone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync ReflectionDistance format\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            return SyncFormatUtil.GetTextDisplay("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                Math.Round(formatShape.Reflection.Offset, 1).ToString(),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatConstants.DisplayImageFont,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatConstants.DisplayImageSize);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                ReflectionFormat srcFormat \u003d formatShape.Reflection;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                ReflectionFormat destFormat \u003d newShape.Reflection;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                destFormat.Offset \u003d srcFormat.Offset;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync ReflectionDistanceFormat\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 3,
      "-": 49
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/ReflectionSizeFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Core;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    class ReflectionSizeFormat: Format"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            return formatShape.Reflection.Type !\u003d MsoReflectionType.msoReflectionTypeNone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync ReflectionSize format\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            return SyncFormatUtil.GetTextDisplay("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                Math.Round(formatShape.Reflection.Size, 1).ToString() + \"%\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatConstants.DisplayImageFont,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatConstants.DisplayImageSize);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                ReflectionFormat srcFormat \u003d formatShape.Reflection;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                ReflectionFormat destFormat \u003d newShape.Reflection;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                destFormat.Size \u003d srcFormat.Size;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync ReflectionSizeFormat\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 3,
      "-": 49
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/ReflectionTransparencyFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Core;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    class ReflectionTransparencyFormat: Format"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            return formatShape.Reflection.Type !\u003d MsoReflectionType.msoReflectionTypeNone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync ReflectionTransparency format\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            // transparency is a float from 0-1, multiply by 100 to get percentage"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            return SyncFormatUtil.GetTextDisplay("
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                Math.Round(formatShape.Reflection.Transparency * 100).ToString() + \"%\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatConstants.DisplayImageFont,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatConstants.DisplayImageSize);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                ReflectionFormat srcFormat \u003d formatShape.Reflection;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                ReflectionFormat destFormat \u003d newShape.Reflection;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                destFormat.Transparency \u003d srcFormat.Transparency;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync ReflectionTransparencyFormat\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 3,
      "-": 50
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/SoftEdgeEffectFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Core;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    class SoftEdgeEffectFormat: Format"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            SoftEdgeFormat softEdge \u003d formatShape.SoftEdge;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            // do not check softEdge.Type, it can sometimes \u003d\u003d msoSoftEdgeTypeNone when there is a soft edge"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            return softEdge.Radius \u003e 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync SoftEdgeEffect Format\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            return SyncFormatUtil.GetTextDisplay("
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                Math.Round(formatShape.SoftEdge.Radius, 1).ToString(),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatConstants.DisplayImageFont,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatConstants.DisplayImageSize);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                SoftEdgeFormat dest \u003d newShape.SoftEdge;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                SoftEdgeFormat source \u003d formatShape.SoftEdge;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                // skip setting type, SoftEdgeFormat.Type is not reliable"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                dest.Radius \u003d source.Radius;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync SoftEdgeEffectFormat\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 3,
      "-": 52
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/TextHorizontalAlignmentFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    class TextHorizontalAlignmentFormat : Format"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            return Sync(formatShape, formatShape);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync Horizontal Text Alignment\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            string alignmentArt \u003d"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                \"\u003d\u003d\u003d\u003d\u003d\u003d\\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                \"\u003d\u003d\u003d\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            return SyncFormatUtil.GetTextDisplay("
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                alignmentArt,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                new System.Drawing.Font(formatShape.TextEffect.FontName,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                                        SyncFormatConstants.DisplayImageFontSize,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                                        FontStyle.Bold),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                SyncFormatConstants.DisplayImageSize);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            try"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                newShape.TextFrame.HorizontalAnchor \u003d formatShape.TextFrame2.HorizontalAnchor;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                newShape.TextFrame.TextRange.ParagraphFormat.Alignment \u003d"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    formatShape.TextFrame.TextRange.ParagraphFormat.Alignment;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync TextAlignmentFormat\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 54
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/TextLineSpacingFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    class TextLineSpacingFormat : Format"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            return Sync(formatShape, formatShape);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync Line Spacing\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            string spacingArt \u003d"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                \"--------\\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                \"____\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            return SyncFormatUtil.GetTextDisplay("
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                spacingArt,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                new System.Drawing.Font(formatShape.TextEffect.FontName,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                                        SyncFormatConstants.DisplayImageFontSize,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                                        FontStyle.Bold),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                SyncFormatConstants.DisplayImageSize);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            try"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                newShape.TextFrame.TextRange.ParagraphFormat.SpaceAfter \u003d"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    formatShape.TextFrame2.TextRange.ParagraphFormat.SpaceAfter;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                newShape.TextFrame.TextRange.ParagraphFormat.SpaceBefore \u003d"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    formatShape.TextFrame2.TextRange.ParagraphFormat.SpaceBefore;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                newShape.TextFrame.TextRange.ParagraphFormat.SpaceWithin \u003d"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    formatShape.TextFrame2.TextRange.ParagraphFormat.SpaceWithin;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync TextLineSpacingFormat\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 57
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/TextOrientationFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    class TextOrientationFormat : Format"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            return Sync(formatShape, formatShape);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync Text Orientation\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            Shapes shapes \u003d SyncFormatUtil.GetTemplateShapes();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            Shape shape \u003d shapes.AddLine("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                0, SyncFormatConstants.DisplayImageSize.Height,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                SyncFormatConstants.DisplayImageSize.Width, 0);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            SyncFormat(formatShape, shape);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            shape.Line.ForeColor.RGB \u003d SyncFormatConstants.ColorBlack;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            shape.Line.Weight \u003d SyncFormatConstants.DisplayLineWeight;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            Bitmap image \u003d GraphicsUtil.ShapeToBitmap(shape);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            shape.Delete();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            return image;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            try"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                newShape.TextFrame.Orientation \u003d formatShape.TextFrame2.Orientation;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync TextOrientationFormat\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 54
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/TextVerticalAlignmentFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    class TextVerticalAlignmentFormat : Format"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            return Sync(formatShape, formatShape);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync Vertical Text Alignment\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            string alignmentArt \u003d"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                \"||\\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                \"||\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            return SyncFormatUtil.GetTextDisplay("
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                alignmentArt,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                new System.Drawing.Font(formatShape.TextEffect.FontName,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                                        SyncFormatConstants.DisplayImageFontSize,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                                        FontStyle.Bold),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                SyncFormatConstants.DisplayImageSize);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            try"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                newShape.TextFrame.VerticalAnchor \u003d formatShape.TextFrame2.VerticalAnchor;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync TextAlignmentFormat\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 52
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/ObjectFormats/ThreeDRotationEffectFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Core;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using ThreeDFormat \u003d Microsoft.Office.Interop.PowerPoint.ThreeDFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    class ThreeDRotationEffectFormat: Format"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        private static readonly float TOLERANCE \u003d Single.Epsilon;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool CanCopy(Shape formatShape)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            ThreeDFormat threeD \u003d formatShape.ThreeD;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            // equality check for floating point numbers"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            return Math.Abs(threeD.RotationX) \u003e TOLERANCE"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                   || Math.Abs(threeD.RotationY) \u003e TOLERANCE"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                   || Math.Abs(threeD.RotationZ) \u003e TOLERANCE"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                   || Math.Abs(threeD.FieldOfView) \u003e TOLERANCE"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                   || threeD.Perspective \u003d\u003d MsoTriState.msoTrue;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        public override void SyncFormat(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Sync(formatShape, newShape))"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(newShape.Type + \" unable to sync 3DRotation Format\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        public override Bitmap DisplayImage(Shape formatShape)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            Bitmap image \u003d GraphicsUtil.ShapeToBitmap(formatShape);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            return image;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool Sync(Shape formatShape, Shape newShape)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            ThreeDFormat source \u003d formatShape.ThreeD;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            ThreeDFormat dest \u003d newShape.ThreeD;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                if (source.PresetThreeDFormat \u003d\u003d MsoPresetThreeDFormat.msoPresetThreeDFormatMixed)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                    // skip setting PresetCamera if Mixed. setting it throws an error"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (source.PresetCamera !\u003d MsoPresetCamera.msoPresetCameraMixed)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                        dest.SetPresetCamera(source.PresetCamera);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                    // set FieldOfView anyway, PresetCamera doesn\u0027t seem to set it"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                    dest.FieldOfView \u003d source.FieldOfView;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                    dest.RotationX \u003d source.RotationX;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                    dest.RotationZ \u003d source.RotationZ;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                    dest.RotationY \u003d source.RotationY;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                    // set perspective only if it is different,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                    // setting the same perspective applies an unknown change to the lighting of the shape"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                    // this change is visible to the eye, but we cannot undo it"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (dest.Perspective !\u003d source.Perspective)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                        dest.Perspective \u003d source.Perspective;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                    dest.SetThreeDFormat(source.PresetThreeDFormat);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                // ThreeDFormat.Z must be between -4000 \u0026 4000 exclusive."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                // when source.Z \u003e 4000 or source.Z \u003c - 4000, it actually means 0"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                float nearestZ \u003d source.Z;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                nearestZ \u003d nearestZ \u003e 4000 ? 0f : nearestZ;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                nearestZ \u003d nearestZ \u003c -4000 ? 0f : nearestZ;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                dest.Z \u003d nearestZ;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                dest.ProjectText \u003d source.ProjectText;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Logger.LogException(e, \"Sync ThreeDRotationEffectFormat\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 3,
      "-": 94
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/SyncFormatConstants.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System.Collections.Generic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Core;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.SyncLab.Views;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using Font \u003d System.Drawing.Font;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.ObjectFormats"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public class SyncFormatConstants"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        public static readonly Size DisplayImageSize \u003d new Size(30, 30);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        // values for bevel display"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        public static readonly float DisplayImageDepth \u003d 15;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        public static readonly float DisplayBevelWidth \u003d 5;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        public static readonly float DisplayBevelHeight \u003d 5;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        public static readonly MsoBevelType DisplayBevelType \u003d MsoBevelType.msoBevelCircle;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        public static readonly MsoPresetCamera DisplayCameraPreset \u003d MsoPresetCamera.msoCameraIsometricOffAxis2Top;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        public static readonly string DisplaySizeUnit \u003d \"pt\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        public static readonly string DisplayFontString \u003d \"Text\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        public static readonly string DisplayDegreeSymbol \u003d \"°\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        public static readonly int DisplayImageFontSize \u003d 12;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        public static readonly Font DisplayImageFont \u003d new Font(\"Arial\", DisplayImageFontSize);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        public static readonly int ColorBlack \u003d 0;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        public static readonly int DisplayLineWeight \u003d 5;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        public static readonly string FormatNameSeparator \u003d \"\u003e\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        public static FormatTreeNode[] FormatCategories \u003d\u003e CreateFormatCategories();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        public static List\u003cFormat\u003e Formats"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                List\u003cFormat\u003e list \u003d new List\u003cFormat\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                list.AddRange(GetFormatsFromFormatTreeNode(FormatCategories));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                return list;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cSummary\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Collect all format objects from an array of FormatTreeNodes"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/Summary\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"nodes\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003creturns\u003eCollected formats\u003c/returns\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        private static Format[] GetFormatsFromFormatTreeNode(FormatTreeNode[] nodes)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cFormat\u003e list \u003d new List\u003cFormat\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (FormatTreeNode node in nodes)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                if (node.IsFormatNode)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                    list.Add(node.Format);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                else if (node.ChildrenNodes !\u003d null)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                    list.AddRange(GetFormatsFromFormatTreeNode(node.ChildrenNodes));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            return list.ToArray();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        private static FormatTreeNode[] CreateFormatCategories()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            FormatTreeNode[] formats \u003d"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                    new FormatTreeNode("
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                            \"Text\","
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                            new FormatTreeNode(\"Font\", new FontFormat()),"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                            new FormatTreeNode(\"Font Size\", new FontSizeFormat()),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                            new FormatTreeNode(\"Font Color\", new FontColorFormat()),"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                            new FormatTreeNode(\"Style\", new FontStyleFormat()),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                            new FormatTreeNode(\"Alignment\","
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                                new FormatTreeNode(\"Horizontal Alignment\", new TextHorizontalAlignmentFormat()),"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                                new FormatTreeNode(\"Vertical Alignment\", new TextVerticalAlignmentFormat())),"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                            new FormatTreeNode(\"Line Spacing\", new TextLineSpacingFormat()),"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                            new FormatTreeNode(\"Orientation\", new TextOrientationFormat())),"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                    new FormatTreeNode("
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                            \"Fill\","
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                            new FormatTreeNode(\"Color\", new FillFormat()),"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                            new FormatTreeNode(\"Transparency\", new FillTransparencyFormat())),"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                    new FormatTreeNode("
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                            \"Line\","
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                            new FormatTreeNode(\"Width\", new LineWeightFormat()),"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                            new FormatTreeNode(\"Compound Type\", new LineCompoundTypeFormat()),"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                            new FormatTreeNode(\"Dash Type\", new LineDashTypeFormat()),"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                            new FormatTreeNode(\"Arrow\", new LineArrowFormat()),"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                            new FormatTreeNode(\"Color\", new LineFillFormat()),"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                            new FormatTreeNode(\"Transparency\", new LineTransparencyFormat())),"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                    new FormatTreeNode("
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                            \"Visual Effects\","
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                            new FormatTreeNode(\"Artistic Effect\", new ArtisticEffectFormat()),"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                            new FormatTreeNode(\"Glow\", "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                                new FormatTreeNode(\"Color\", new GlowColorFormat()),"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                                new FormatTreeNode(\"Size\", new GlowSizeFormat()),"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                                new FormatTreeNode(\"Transparency\", new GlowTransparencyFormat())),"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "                            new FormatTreeNode(\"Reflection\", "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                                new FormatTreeNode(\"Transparency\", new ReflectionTransparencyFormat()),"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                                new FormatTreeNode(\"Size\", new ReflectionSizeFormat()),"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                                new FormatTreeNode(\"Blur\", new ReflectionBlurFormat()),"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                                new FormatTreeNode(\"Distance\", new ReflectionDistanceFormat())),"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                            new FormatTreeNode(\"Shadow\", new ShadowEffectFormat()),"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                            new FormatTreeNode(\"Soft Edge\", new SoftEdgeEffectFormat()),"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                            new FormatTreeNode(\"3D Effects\", "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                                new FormatTreeNode(\"Bevel Top\", new BevelTopFormat()),"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                                new FormatTreeNode(\"Bevel Bottom\", new BevelBottomFormat()),"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                                new FormatTreeNode(\"Contour\", "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                                    new FormatTreeNode(\"Color\", new ContourColorFormat()),"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                                    new FormatTreeNode(\"Width\", new ContourWidthFormat())),"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                                new FormatTreeNode(\"Depth\", "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                                    new FormatTreeNode(\"Color\", new DepthColorFormat()),"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                                    new FormatTreeNode(\"Size\", new DepthSizeFormat())),"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                                new FormatTreeNode(\"Lighting\", "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                                    new FormatTreeNode(\"Angle\", new LightingAngleFormat()),"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                                    new FormatTreeNode(\"Preset Lighting\", new LightingEffectFormat())),"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                                new FormatTreeNode(\"Material\", new MaterialEffectFormat())),"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                            new FormatTreeNode(\"3D Rotation\", new ThreeDRotationEffectFormat())),"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                    new FormatTreeNode("
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                            \"Size/Position\","
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                            new FormatTreeNode(\"Width\", new PositionWidthFormat()),"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                            new FormatTreeNode(\"Height\", new PositionHeightFormat()),"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                            new FormatTreeNode(\"X\", new PositionXFormat()),"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "                            new FormatTreeNode(\"Y\", new PositionYFormat()))"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "                };"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            return formats;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 8,
      "-": 127
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/Views/SyncFormatPaneItem.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "using System.Text;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Controls;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Input;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Interop;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Media.Imaging;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "using PowerPointLabs.SyncLab.ObjectFormats;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.Views"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    /// Interaction logic for SyncFormatPaneItem.xaml"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class SyncFormatPaneItem : UserControl"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        private Bitmap image;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        private SyncPaneWPF parent;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        private string shapeKey \u003d null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        private SyncLabShapeStorage shapeStorage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        private FormatTreeNode[] formats \u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        #region Constructors"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        public SyncFormatPaneItem(SyncPaneWPF parent, string shapeKey,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                    SyncLabShapeStorage shapeStorage, FormatTreeNode[] formats)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            this.parent \u003d parent;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            this.shapeKey \u003d shapeKey;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            this.shapeStorage \u003d shapeStorage;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            this.formats \u003d formats;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            editImage.Source \u003d System.Windows.Interop.Imaging.CreateBitmapSourceFromHBitmap("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                Properties.Resources.SyncLabEditButton.GetHbitmap(),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                IntPtr.Zero,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                Int32Rect.Empty,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                BitmapSizeOptions.FromEmptyOptions());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            pasteImage.Source \u003d System.Windows.Interop.Imaging.CreateBitmapSourceFromHBitmap("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                Properties.Resources.SyncLabPasteButton.GetHbitmap(),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                IntPtr.Zero,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                Int32Rect.Empty,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                BitmapSizeOptions.FromEmptyOptions()); "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            deleteImage.Source \u003d System.Windows.Interop.Imaging.CreateBitmapSourceFromHBitmap("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                Properties.Resources.SyncLabDeleteButton.GetHbitmap(),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                IntPtr.Zero,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                Int32Rect.Empty,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                BitmapSizeOptions.FromEmptyOptions());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            UpdateToolTipBody();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        #region Getters and Setters"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        public string FormatShapeKey"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                return shapeKey;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        public FormatTreeNode[] Formats"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                return formats;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                formats \u003d value;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        public Bitmap Image"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                return image;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                image \u003d value;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateImage();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool FormatShapeExists"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                return shapeStorage.GetShape(shapeKey) !\u003d null;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateImage()"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            // if image isn\u0027t set, fill the control with the label"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            if (image \u003d\u003d null)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                imageBox.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                col1.Width \u003d new GridLength(0);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                BitmapSource source \u003d Imaging.CreateBitmapSourceFromHBitmap("
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                                        image.GetHbitmap(),"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                                        IntPtr.Zero,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                                        Int32Rect.Empty,"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                                        BitmapSizeOptions.FromEmptyOptions());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                imageBox.Source \u003d source;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                imageBox.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                col1.Width \u003d new GridLength(60);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        public string Text"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                return textBlock.Text;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                textBlock.Text \u003d value;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                toolTipName.Text \u003d value;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        #region Helper Functions"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private void UpdateToolTipBody()"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            StringBuilder toolTipBodyText \u003d new StringBuilder();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            foreach (FormatTreeNode format in formats)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                toolTipBodyText.Append(GetNamesOfCheckedNodes(format.Name, format));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            toolTipBody.Text \u003d toolTipBodyText.ToString().Trim(\"\\n\".ToCharArray());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private string GetNamesOfCheckedNodes(string rootName, FormatTreeNode node)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            if (node.IsChecked ?? false)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                return (node.Name.Equals(rootName) ? \"\" : rootName +"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    SyncFormatConstants.FormatNameSeparator) + node.Name + \"\\n\";"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            StringBuilder result \u003d new StringBuilder();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            foreach (FormatTreeNode child in node.ChildrenNodes ?? new FormatTreeNode[] { })"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                result.Append(GetNamesOfCheckedNodes(rootName, child));"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            return result.ToString();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private void ApplyFormatToSelected()"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            Shape formatShape \u003d shapeStorage.GetShape(shapeKey);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            if (formatShape \u003d\u003d null)"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                MessageBox.Show(SyncLabText.ErrorShapeDeleted, SyncLabText.ErrorDialogTitle);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                parent.ClearInvalidFormats();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            this.StartNewUndoEntry();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            parent.ApplyFormats(formats, formatShape);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        #region Event Handlers"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        private void PasteButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            ApplyFormatToSelected();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        private void EditButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape shape \u003d shapeStorage.GetShape(shapeKey);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            parent.Dialog \u003d new SyncFormatDialog(shape, Text, formats);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            parent.Dialog.ObjectName \u003d this.Text;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "            bool? result \u003d parent.Dialog.ShowDialog();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!result.HasValue || !(bool)result)"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "            this.formats \u003d parent.Dialog.Formats;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            this.Text \u003d parent.Dialog.ObjectName;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "            parent.Dialog \u003d null;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            UpdateToolTipBody();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        private void DeleteButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            parent.RemoveFormatItem(this);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        private void OnMouseDoubleClick(object sender, MouseButtonEventArgs e)"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "            ApplyFormatToSelected();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 64,
      "-": 155
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/Views/SyncFormatPanelItemStub.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "﻿using System.Drawing;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "namespace PowerPointLabs.SyncLab.Views"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    class SyncFormatPaneItemStub : SyncFormatPaneItem"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        public SyncFormatPaneItemStub(FormatTreeNode[] formats) :"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            base(null, null, null, formats)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        new public string FormatShapeKey \u003d null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        new public Bitmap Image \u003d null;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        new public bool FormatShapeExists \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 18
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/Views/SyncPane.Designer.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "﻿using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "namespace PowerPointLabs.SyncLab.Views"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    partial class SyncPane"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Required designer variable."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        private System.ComponentModel.IContainer components \u003d null;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        public void UpdateOnSelectionChange(Selection sel)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            this.SyncPaneWPF1.UpdateCopyButtonEnabledStatus(sel);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Clean up any resources being used."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"disposing\"\u003etrue if managed resources should be disposed; otherwise, false.\u003c/param\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override void Dispose(bool disposing)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            if (disposing \u0026\u0026 (components !\u003d null))"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                components.Dispose();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            base.Dispose(disposing);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Component Designer generated code"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Required method for Designer support - do not modify "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        /// the contents of this method with the code editor."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        private void InitializeComponent()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            this.elementHost1 \u003d new System.Windows.Forms.Integration.ElementHost();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            this.SyncPaneWPF1 \u003d new PowerPointLabs.SyncLab.Views.SyncPaneWPF();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            this.SuspendLayout();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            // elementHost1"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            this.elementHost1.Dock \u003d System.Windows.Forms.DockStyle.Fill;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            this.elementHost1.Location \u003d new System.Drawing.Point(0, 0);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            this.elementHost1.Name \u003d \"elementHost1\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            this.elementHost1.Size \u003d new System.Drawing.Size(300, 833);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            this.elementHost1.TabIndex \u003d 0;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            this.elementHost1.Text \u003d \"elementHost1\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            this.elementHost1.Child \u003d this.SyncPaneWPF1;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            // SyncPane"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            this.AutoScaleDimensions \u003d new System.Drawing.SizeF(6F, 13F);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            this.AutoScaleMode \u003d System.Windows.Forms.AutoScaleMode.Font;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            this.Controls.Add(this.elementHost1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            this.Name \u003d \"SyncPane\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            this.Size \u003d new System.Drawing.Size(300, 833);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            this.ResumeLayout(false);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        private System.Windows.Forms.Integration.ElementHost elementHost1;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        public SyncPaneWPF SyncPaneWPF1 { get; private set; }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 8,
      "-": 60
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/Views/SyncPaneWPF.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Controls;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Media.Imaging;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Core;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.SyncLab.ObjectFormats;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "using ShapeRange \u003d Microsoft.Office.Interop.PowerPoint.ShapeRange;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.Views"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /// Interaction logic for SyncPaneWPF.xaml"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class SyncPaneWPF : UserControl"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        public SyncFormatDialog Dialog { get; set; }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        private readonly SyncLabShapeStorage shapeStorage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        public SyncPaneWPF()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            shapeStorage \u003d SyncLabShapeStorage.Instance;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            copyImage.Source \u003d System.Windows.Interop.Imaging.CreateBitmapSourceFromHBitmap("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                    Properties.Resources.SyncLabCopyButton.GetHbitmap(),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                    IntPtr.Zero,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                    Int32Rect.Empty,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                    BitmapSizeOptions.FromEmptyOptions());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SyncPaneWPF_Loaded(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            Microsoft.Office.Tools.CustomTaskPane syncLabPane \u003d this.GetAddIn().GetActivePane(typeof(SyncPane));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            if (syncLabPane \u003d\u003d null || !(syncLabPane.Control is SyncPane))"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(TextCollection.SyncLabText.ErrorSyncPaneNotOpened);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            SyncPane syncLab \u003d syncLabPane.Control as SyncPane;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            UpdateCopyButtonEnabledStatus(this.GetCurrentSelection());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            syncLab.HandleDestroyed +\u003d SyncPane_Closing;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SyncPane_Closing(Object sender, EventArgs e)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            if (Dialog !\u003d null)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                Dialog.Close();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        #region GUI API"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        public int FormatCount"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                return formatListBox.Items.Count;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        public void UpdateCopyButtonEnabledStatus(Selection selection)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            if ((selection \u003d\u003d null) || (selection.Type \u003d\u003d PpSelectionType.ppSelectionNone) "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                || (selection.Type \u003d\u003d PpSelectionType.ppSelectionSlides))"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                copyButton.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                toolTipTextBox.Text \u003d SyncLabText.DisabledToolTipText;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            else"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                copyButton.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                toolTipTextBox.Text \u003d SyncLabText.EnabledToolTipText;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        public bool GetCopyButtonEnabledStatus()"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            return copyButton.IsEnabled;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        public FormatTreeNode[] GetFormats(int index)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            return (formatListBox.Items[index] as SyncFormatPaneItem).Formats;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        public string GetFormatText(int index)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            return (formatListBox.Items[index] as SyncFormatPaneItem).Text;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SetFormatText(int index, string text)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            (formatListBox.Items[index] as SyncFormatPaneItem).Text \u003d text;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Sync API"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        public void RemoveFormatItem(Object format)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            int index \u003d 0;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            while (index \u003c formatListBox.Items.Count)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                if (formatListBox.Items[index] \u003d\u003d format)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                    formatListBox.Items.RemoveAt(index);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ClearInvalidFormats()"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            int index \u003d 0;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            while (index \u003c formatListBox.Items.Count)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatPaneItem item \u003d formatListBox.Items[index] as SyncFormatPaneItem;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "                if (item.FormatShapeExists)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "                    formatListBox.Items.RemoveAt(index);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Applies a set of formats from a source shape to shapes selected by the user "
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"nodes\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"formatShape\"\u003esource shape\u003c/param\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ApplyFormats(FormatTreeNode[] nodes, Shape formatShape)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange selectedShapes \u003d GetSelectedShapesForFormatting();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "            if (selectedShapes \u003d\u003d null)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(SyncLabText.ErrorPasteSelectionInvalid, SyncLabText.ErrorDialogTitle);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "                Format[] formats \u003d GetFormatsToApply(nodes);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                ShapeUtil.ApplyFormats(formats, formatShape, selectedShapes);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "                "
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        private Format[] GetFormatsToApply(FormatTreeNode[] nodes)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cFormat\u003e list \u003d new List\u003cFormat\u003e();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (FormatTreeNode node in nodes)"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "                if (node.IsFormatNode \u0026\u0026 node.IsChecked.HasValue \u0026\u0026 node.IsChecked.Value)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "                    list.Add(node.Format);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "                else if (node.ChildrenNodes !\u003d null)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "                    list.AddRange(GetFormatsToApply(node.ChildrenNodes));"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            return list.ToArray();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Get shapes selected by user"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003creturns\u003eShapeRange of selected shapes, or null."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Null is returned over an empty collection as selections may not contain ShapeRanges"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/returns\u003e"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        private ShapeRange GetSelectedShapesForFormatting()"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            Selection selection \u003d this.GetCurrentSelection();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            if ((selection.Type !\u003d PpSelectionType.ppSelectionShapes \u0026\u0026"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "                selection.Type !\u003d PpSelectionType.ppSelectionText) ||"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "                selection.ShapeRange.Count \u003d\u003d 0)"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange shapes \u003d selection.ShapeRange;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            if (selection.HasChildShapeRange)"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "                shapes \u003d selection.ChildShapeRange;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "            return shapes;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AddFormatToList(Shape shape, string name, FormatTreeNode[] formats)"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "            string shapeKey \u003d CopyShape(shape, formats);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            if (shapeKey \u003d\u003d null)"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(SyncLabText.ErrorCopy);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "            SyncFormatPaneItem item \u003d new SyncFormatPaneItem(this, shapeKey, shapeStorage, formats);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "            item.Text \u003d name;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            item.Image \u003d new System.Drawing.Bitmap(GraphicsUtil.ShapeToBitmap(shape));"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "            formatListBox.Items.Insert(0, item);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "            formatListBox.SelectedIndex \u003d 0;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        #region GUI Handles"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CopyButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "            Selection selection \u003d this.GetCurrentSelection();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "            if ((selection.Type !\u003d PpSelectionType.ppSelectionShapes \u0026\u0026"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "                selection.Type !\u003d PpSelectionType.ppSelectionText) ||"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "                selection.ShapeRange.Count !\u003d 1)"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(SyncLabText.ErrorCopySelectionInvalid, SyncLabText.ErrorDialogTitle);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape shape \u003d selection.ShapeRange[1];"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "            if (shape.Type \u003d\u003d MsoShapeType.msoSmartArt) "
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(SyncLabText.ErrorSmartArtUnsupported, SyncLabText.ErrorDialogTitle);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "            if (selection.HasChildShapeRange)"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "                if (selection.ChildShapeRange.Count !\u003d 1)"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "                    MessageBox.Show(SyncLabText.ErrorCopySelectionInvalid, SyncLabText.ErrorDialogTitle);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "                shape \u003d selection.ChildShapeRange[1];"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "            bool canSyncPlaceHolder \u003d"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "                shape.Type \u003d\u003d MsoShapeType.msoPlaceholder \u0026\u0026 "
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "                ShapeUtil.CanCopyMsoPlaceHolder(shape, SyncFormatUtil.GetTemplateShapes());"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "            if (shape.Type !\u003d MsoShapeType.msoAutoShape \u0026\u0026"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "                shape.Type !\u003d MsoShapeType.msoLine \u0026\u0026"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "                shape.Type !\u003d MsoShapeType.msoPicture \u0026\u0026"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "                shape.Type !\u003d MsoShapeType.msoTextBox \u0026\u0026"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "                !canSyncPlaceHolder)"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(SyncLabText.ErrorCopySelectionInvalid, SyncLabText.ErrorDialogTitle);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "            Dialog \u003d new SyncFormatDialog(shape);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "            Dialog.ObjectName \u003d shape.Name;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "            bool? result \u003d Dialog.ShowDialog();"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!result.HasValue || !(bool)result)"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "            AddFormatToList(shape, Dialog.ObjectName, Dialog.Formats);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "            Dialog \u003d null;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Shape Saving"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "        // Saves shape into another powerpoint file"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "        // Returns a key to find the shape by,"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "        // or null if the shape cannot be copied"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "        private string CopyShape(Shape shape, FormatTreeNode[] nodes)"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "            return shapeStorage.CopyShape(shape, GetFormatsToApply(nodes));"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 23,
      "-": 266
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/TextCollection/ColorsLabText.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿namespace PowerPointLabs.TextCollection"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    internal static class ColorsLabText"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Action Framework Tags"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string RibbonMenuId \u003d \"ColorsLabButton\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string RibbonMenuLabel \u003d \"Colors\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string RibbonMenuSupertip \u003d"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Use Colors Lab to add beautiful colors to your slide.\\n\\n\" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Click this button to open the Colors Lab interface.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string PaneTag \u003d \"ColorsLab\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string TaskPanelTitle \u003d \"Colors Lab\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string MainColorBoxTooltip \u003d \"Choose the main color: \" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                                   \"\\r\\nDrag the box to favorites palatte, \" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                                   \"\\r\\nor click it to choose one from the Color dialog.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string FontColorButtonTooltip \u003d \"Change the font color of the selected shapes: \" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                                                 \"\\r\\nDrag the button to pick a color.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string LineColorButtonTooltip \u003d \"Change the line color of the selected shapes: \" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                                                 \"\\r\\nDrag the button to pick a color.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string FillColorButtonTooltip \u003d \"Change the fill color of the selected shapes: \" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                                                 \"\\r\\nDrag the button to pick a color.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public const string EyeDropperButtonTooltip \u003d \"Choose the main color with eyedropper: \" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                                                    \"\\r\\nDrag the button to pick a color.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string BrightnessSliderTooltip \u003d \"Move the slider to adjust the main color’s brightness.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string SaturationSliderTooltip \u003d \"Move the slider to adjust the main color’s saturation.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string SaveFavoriteColorsButtonTooltip \u003d \"Save the favorite color palette.\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string LoadFavoriteColorsButtonTooltip \u003d \"Load an existing favorite color palette.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ResetFavoriteColorsButtonTooltip \u003d \"Reset the current favorite color palette to those last loaded.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string EmptyFavoriteColorsButtonTooltip \u003d \"Empty the favorite color palette.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ColorRectangleTooltip \u003d \"Click the color to select it as the main color. You can drag-and-drop these colors into the favorites palette.\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ThemeColorRectangleTooltip \u003d \"Click the color to select it as the main color.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ErrorDialogTitle \u003d \"Unable to execute action\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ErrorNoSelection \u003d \"To use this feature, select at least one shape.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 6,
      "-": 33
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/TextCollection/ShapesLabText.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿namespace PowerPointLabs.TextCollection"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    internal static class ShapesLabText"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Action Framework Tags"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string RibbonMenuId \u003d \"ShapesLabMenu\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string RibbonMenuSupertip \u003d \"Use Shapes Lab to manage your custom shapes.\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string RibbonMenuLabel \u003d \"Shapes\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ShapesLabButtonLabel \u003d \"Shapes Lab\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ShapesLabButtonSupertip \u003d \"Click this button to open the Shapes Lab interface.\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string PaneTag \u003d \"ShapesLab\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string TaskPanelTitle \u003d \"Shapes Lab\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ErrorDialogTitle \u003d \"Unable to execute action\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ErrorAddSelectionInvalid \u003d \"Please select one shape to add.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ErrorFileNameInvalid \u003d \"Invalid shape name.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ErrorNoShapeTextFirstLine \u003d \"No shapes saved yet.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ErrorNoShapeTextSecondLine \u003d \"Right-click any object on a slide to save it in this panel.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ErrorNoPanelSelected \u003d \"No shape selected.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ErrorViewTypeNotSupported \u003d \"Shapes Lab does not support the current view type.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string SuccessSaveLocationChanged \u003d"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Default saving path has been changed to \\n{0}\\nAll shapes have been moved to the new location.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string SuccessSaveLocationChangedTitle \u003d \"Success\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string SuccessSetAsDefaultCategory \u003d \"{0} has been set as default category.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ErrorMigration \u003d"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            \"The folder cannot be migrated entirely. Please check if your destination location forbids this action.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ErrorOriginalFolderDeletion \u003d"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            \"The original folder could not be deleted because some of the files in folder is still in use. You could \" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            \"try to delete this folder manually when those files are closed.\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string MigratingDialogTitle \u003d \"Migrating...\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string MigratingDialogContent \u003d \"Shapes are being migrated, please wait...\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ErrorRemoveLastCategory \u003d \"Removing the last category is not allowed.\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ErrorDuplicateCategoryName \u003d \"The name has already been used.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string RemoveDefaultCategoryMessage \u003d"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            \"You are removing your default category. After removing this category, the first category will be made \" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            \"as default category. Continue?\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string RemoveDefaultCategoryCaption \u003d \"Removing Default Category\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ErrorImportFile \u003d \"Import File could not be opened.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ErrorImportNoSlide \u003d \"Import File is empty.\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ErrorImportAppendCategory \u003d \"Your computer does not support this feature.\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ErrorImportSingleCategory \u003d"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            \"{0} contains multiple categories. Try \\\"Import Category\\\" instead.\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string SuccessImport \u003d \"Successfully imported.\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ImportShapeFileDialogTitle \u003d \"Import Shapes\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ImportLibraryFileDialogTitle \u003d \"Import Library\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ShapeContextStripAddToSlide \u003d \"Add To Slide\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ShapeContextStripEditName \u003d \"Edit Name\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ShapeContextStripMoveShape \u003d \"Move Shape To\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ShapeContextStripRemoveShape \u003d \"Remove Shape\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ShapeContextStripCopyShape \u003d \"Copy Shape To\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string CategoryContextStripAddCategory \u003d \"Add Category\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string CategoryContextStripRemoveCategory \u003d \"Remove Category\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string CategoryContextStripRenameCategory \u003d \"Rename Category\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string CategoryContextStripImportCategory \u003d \"Import Library\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string CategoryContextStripImportShapes \u003d \"Import Shapes\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string CategoryContextStripSetAsDefaultCategory \u003d \"Set as Default Category\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string CategoryContextStripCategorySettings \u003d \"Shapes Lab Settings\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ErrorSameShapeNameInDestination \u003d \"{0} exists in {1}. Please rename your shape before moving.\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ErrorShapeCorrupted \u003d \"Some shapes in the Shapes Lab were corrupted, but some of the them are recovered.\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string FolderDialogDescription \u003d \"Select the directory that you want to use as the default.\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ErrorFolderNonEmpty \u003d \"Please select an empty folder as default saving folder.\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string AddShapeToolTip \u003d \"Adds a shape to Shapes Lab.\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        public const string DisabledAddShapeToolTip \u003d AddShapeToolTip + \"\\nStart by selecting a shape.\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 1,
      "-": 74
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/TextCollection/SyncLabText.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿namespace PowerPointLabs.TextCollection"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    internal static class SyncLabText"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Action Framework Tags"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string RibbonMenuId \u003d \"SyncLabButton\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string RibbonMenuLabel \u003d \"Sync\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string RibbonMenuSupertip \u003d"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Use Sync Lab to make your slides look more consistent.\\n\\n\" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Click this button to open the Sync Lab interface.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string PaneTag \u003d \"SyncLab\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string TaskPanelTitle \u003d \"Sync Lab\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string StorageFileName \u003d \"Sync Lab - Do not edit\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string DefaultFormatName \u003d \"Format\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        public const string EnabledToolTipText \u003d"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            \"Opens a dialog box that will allow you to copy formats\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            \"from the shape that is currently selected.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        public const string DisabledToolTipText \u003d"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            EnabledToolTipText + \"\\nStart by selecting a shape.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ErrorDialogTitle \u003d \"Unable to execute action\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ErrorCopy \u003d \"Error: Unable to copy selected item.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ErrorSmartArtUnsupported \u003d \"Error: SmartArt is currently not supported by SyncLab.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ErrorCopySelectionInvalid \u003d \"Please select one shape to copy.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ErrorPasteSelectionInvalid \u003d \"Please select at least one item to apply this format to.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ErrorShapeDeleted \u003d \"Error in loading shape formats. Removing invalid formats from the list.\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ErrorSyncPaneNotOpened \u003d \"Error: SyncPane not opened.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string WarningDialogTitle \u003d \"Warning\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string WarningSyncPerspectiveShadow \u003d"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            \"PowerPointLabs is unable to differentiate between custom perspective shadows and custom outer shadows.\\n\\n\" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Outer shadows will be applied when syncing.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 6,
      "-": 31
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/TextCollection/TooltipsLabText.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿namespace PowerPointLabs.TextCollection"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    internal static class TooltipsLabText"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #region Action Framework Tags"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public const string RibbonMenuId \u003d \"TooltipsLabMenu\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public const string CreateMenuTag \u003d \"CreateMenu\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public const string CreateTooltipTag \u003d \"CreateTooltip\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public const string CreateCalloutTag \u003d \"CreateCallout\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public const string CreateTriggerTag \u003d \"CreateTrigger\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public const string AssignTooltipTag \u003d \"AssignTooltip\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        public const string AddTextboxTag \u003d \"AddTextbox\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public const string SettingsTag \u003d \"TooltipsLabSettings\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #region GUI Text"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public const string RibbonMenuLabel \u003d \"Tooltips\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public const string CreateMenuLabel \u003d \"Create\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public const string CreateTooltipButtonLabel \u003d \"Tooltip\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public const string CreateCalloutButtonLabel \u003d \"Callout\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public const string CreateTriggerButtonLabel \u003d \"Trigger\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public const string AssignTooltipButtonLabel \u003d \"Assign Tooltip\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        public const string AddTextboxButtonLabel \u003d \"Add Textbox\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public const string SettingsButtonLabel \u003d \"Settings\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        public const string RibbonMenuSupertip \u003d \"Use Tooltips Lab to add Tooltips easily.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        public const string CreateTooltipButtonSupertip \u003d"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            \"Create a trigger shape and a callout shape.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public const string CreateCalloutButtonSupertip \u003d"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            \"Create a callout with a specified trigger shape. \\n\\n\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            \"To perform this action, select your desired trigger shape. A callout will be generated for you.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public const string CreateTriggerButtonSupertip \u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            \"Create a trigger shape with a specified callout. \\n\\n\" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            \"To perform this action, select your desired callout. A trigger shape will be generated for you.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        public const string AssignTooltipButtonSupertip \u003d"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            \"Attach a trigger animation to a group of shapes. \\n\\n\" +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            \"To perform this action, select a group of shapes, the first shape selected with the trigger shape.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        public const string SettingsButtonSupertip \u003d \"Configure the settings for Tooltips Lab.\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        public const string ErrorTooltipsDialogTitle \u003d \"Unable to execute action\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        public const string ErrorLessThanTwoShapesSelected \u003d \"Please select at least two shapes. The first shape will be the trigger shape.\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public const string ErrorNoTriggerShapeSelected \u003d \"Please select 1 or more shapes as your trigger shape.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public const string ErrorNoCalloutShapeSelected \u003d \"Please select 1 or more shapes as your callout shape.\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 8,
      "blewjy": 36,
      "YuPeiHenry": 2
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ThisAddIn.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Diagnostics;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Globalization;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.IO;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using System.IO.Compression;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Linq;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Runtime.ExceptionServices;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Runtime.InteropServices;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Runtime.Remoting;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Runtime.Remoting.Channels;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Runtime.Remoting.Channels.Ipc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Text.RegularExpressions;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Forms;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Threading;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Tools;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.AutoUpdate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.CaptionsLab;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.ELearningWorkspace.Views;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Service;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Views;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.FunctionalTestInterface.Impl;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.FunctionalTestInterface.Impl.Controller;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.PositionsLab;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ResizeLab;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.SaveLab;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ShapesLab;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "using PowerPointLabs.SyncLab.Views;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TimerLab;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Views;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "using PPExtraEventHelper;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "using MessageBox \u003d System.Windows.Forms.MessageBox;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "using Office \u003d Microsoft.Office.Core;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPoint \u003d Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class ThisAddIn"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "#pragma warning disable 0618"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        public readonly string OfficeVersion2013 \u003d \"15.0\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        public readonly string OfficeVersion2010 \u003d \"14.0\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        public static string AppDataFolder \u003d"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData), \"PowerPointLabs\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        public Ribbon1 Ribbon;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        internal ShapesLabConfigSaveFile ShapesLabConfig;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        internal PowerPointShapeGalleryPresentation ShapePresentation;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        private delegate void SyncElearningItemsDelegate();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string AppLogName \u003d \"PowerPointLabs.log\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string SlideXmlSearchPattern \u003d @\"slide(\\d+)\\.xml\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string TempFolderNamePrefix \u003d @\"\\PowerPointLabs Temp\\\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string ShapeGalleryPptxName \u003d \"ShapeGallery\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private const string SyncLabPptxName \u003d \"Sync Lab - Do not edit\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string TempZipName \u003d \"tempZip.zip\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        private string _deactivatedPresFullName;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        private string tempFolderName;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private bool _pptLabsShouldTerminate;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool isResizePaneVisible;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        private readonly Dictionary\u003cPowerPoint.DocumentWindow,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cCustomTaskPane\u003e\u003e _documentPaneMapper \u003d new Dictionary\u003cPowerPoint.DocumentWindow, List\u003cCustomTaskPane\u003e\u003e();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        private readonly Dictionary\u003cPowerPoint.DocumentWindow,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            string\u003e _documentHashcodeMapper \u003d new Dictionary\u003cPowerPoint.DocumentWindow, string\u003e();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        /// The channel for .NET Remoting calls."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        private IChannel _ftChannel;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        #region API"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool IsApplicationVersion2010()"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            return Application.Version \u003d\u003d OfficeVersion2010;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool IsApplicationVersion2013()"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            return Application.Version \u003d\u003d OfficeVersion2013;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        public Control GetActiveControl(Type type)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomTaskPane taskPane \u003d GetActivePane(type);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            return taskPane \u003d\u003d null ? null : taskPane.Control;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        public string GetTempFolderName()"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            return tempFolderName;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        public CustomTaskPane GetActivePane(Type type)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.DocumentWindow activeWindow;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                activeWindow \u003d Application.ActiveWindow;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (COMException)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            return GetPaneFromWindow(type, activeWindow);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        public Control GetControlFromWindow(Type type, PowerPoint.DocumentWindow window)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomTaskPane taskPane \u003d GetPaneFromWindow(typeof(CustomShapePane), window);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            return taskPane \u003d\u003d null ? null : taskPane.Control;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        public CustomTaskPane GetPaneFromWindow(Type type, PowerPoint.DocumentWindow window)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!_documentPaneMapper.ContainsKey(window))"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cCustomTaskPane\u003e panes \u003d _documentPaneMapper[window];"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (CustomTaskPane pane in panes)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                try"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                    UserControl control \u003d pane.Control;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (control.GetType() \u003d\u003d type)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "                        return pane;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                catch (Exception)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                    return null;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        public string GetActiveWindowTempName()"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "            return _documentHashcodeMapper[Application.ActiveWindow];"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        public void InitializeShapeGallery()"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            // achieves singleton ShapePresentation"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            if (ShapePresentation !\u003d null \u0026\u0026 ShapePresentation.Opened)"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "            string shapeRootFolderPath \u003d ShapesLabSettings.SaveFolderPath;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapePresentation \u003d"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "                new PowerPointShapeGalleryPresentation(shapeRootFolderPath, ShapeGalleryPptxName);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!ShapePresentation.Open(withWindow: false, focus: false) \u0026\u0026"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "                !ShapePresentation.Opened)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "                // if the presentation gets some error during opening, and the error could not"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "                // be resolved by consistency check, prompt the user about the error"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(CommonText.ErrorShapeGalleryInit);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            if (ShapePresentation.HasCategory(ShapesLabConfig.DefaultCategory))"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "                ShapePresentation.DefaultCategory \u003d ShapesLabConfig.DefaultCategory;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "            // if we do not have the default category, create and add it to ShapeGallery"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapePresentation.AddCategory(ShapesLabConfig.DefaultCategory);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapePresentation.Save();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        public void InitializeShapesLabConfig()"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "            // if ShapesLabConfig has already been intialized, do nothing"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            if (ShapesLabConfig !\u003d null)"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapesLabConfig \u003d new ShapesLabConfigSaveFile(AppDataFolder);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "            // create a directory under specified location if the location does not exist"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Directory.Exists(ShapesLabSettings.SaveFolderPath))"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "                Directory.CreateDirectory(ShapesLabSettings.SaveFolderPath);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        public void PrepareMediaFiles(PowerPoint.Presentation pres, string tempPath)"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "            string presFullName \u003d pres.FullName;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            string presName \u003d pres.Name;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "            // in case of embedded slides, we need to regulate the file name and full name"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "            RegulatePresentationName(pres, tempPath, ref presName, ref presFullName);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "                if (IsEmptyFile(presFullName))"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "                string zipFullPath \u003d tempPath + TempZipName;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "                // before we do everything, check if there\u0027s an undelete old zip file"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "                // due to some error"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "                try"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "                    FileDir.DeleteFile(zipFullPath);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "                    FileDir.CopyFile(presFullName, zipFullPath);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "                catch (Exception e)"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "                    ErrorDialogBox.ShowDialog(CommonText.ErrorAccessTempFolder, string.Empty, e);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "                ExtractMediaFiles(zipFullPath, tempPath);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "                ErrorDialogBox.ShowDialog(CommonText.ErrorPrepareMedia, \"Files cannot be linked.\", e);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "        public string PrepareTempFolder(PowerPoint.Presentation pres)"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "            string presName \u003d pres.Name;"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "            string presFullName \u003d pres.FullName;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "            // here presFullName makes no use, just to fit in the signature"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "            RegulatePresentationName(pres, null, ref presName, ref presFullName);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "            string tempPath \u003d GetPresentationTempFolder(presName);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "            // if temp folder doesn\u0027t exist, create"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "                if (Directory.Exists(tempPath))"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "                    Directory.Delete(tempPath, true);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "                ErrorDialogBox.ShowDialog(CommonText.ErrorCreateTempFolder, string.Empty, e);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "            finally"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "                Directory.CreateDirectory(tempPath);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "            return tempPath;"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        public void RegisterResizePane(PowerPoint.Presentation presentation)"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "            if (GetActivePane(typeof(ResizeLabPane)) !\u003d null)"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.DocumentWindow activeWindow \u003d presentation.Application.ActiveWindow;"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "            RegisterTaskPane(new ResizeLabPane(), ResizeLabText.TaskPaneTitle, activeWindow,"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "                ResizeTaskPaneVisibleValueChangedEventHandler, null);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "        public void RegisterRecorderPane(PowerPoint.DocumentWindow activeWindow, string tempFullPath)"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "            if (GetActivePane(typeof(RecorderTaskPane)) !\u003d null)"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "            RegisterTaskPane(new RecorderTaskPane(tempFullPath), NarrationsLabText.RecManagementPanelTitle, activeWindow,"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "                TaskPaneVisibleValueChangedEventHandler, null);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "        public void RegisterShapesLabPane(PowerPoint.Presentation presentation)"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "            if (GetActivePane(typeof(CustomShapePane)) !\u003d null)"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.DocumentWindow activeWindow \u003d presentation.Application.ActiveWindow;"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "            RegisterTaskPane("
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "                new CustomShapePane(ShapesLabSettings.SaveFolderPath, ShapesLabConfig.DefaultCategory),"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "                ShapesLabText.TaskPanelTitle, activeWindow, null, null);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SyncShapeAdd(string shapeName, string shapeFullName, string category)"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (PowerPoint.DocumentWindow window in Globals.ThisAddIn.Application.Windows)"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "                if (window \u003d\u003d Application.ActiveWindow)"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "                CustomShapePane shapePaneControl \u003d GetControlFromWindow(typeof(CustomShapePane), window) as CustomShapePane;"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "                if (shapePaneControl !\u003d null \u0026\u0026"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "                    shapePaneControl.CurrentCategory \u003d\u003d category)"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "                    shapePaneControl.AddCustomShape(shapeName, shapeFullName, false);"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SyncShapeRemove(string shapeName, string category)"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (PowerPoint.DocumentWindow window in Globals.ThisAddIn.Application.Windows)"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "                if (window \u003d\u003d Application.ActiveWindow)"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "                CustomShapePane shapePaneControl \u003d GetControlFromWindow(typeof(CustomShapePane), window) as CustomShapePane;"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "                if (shapePaneControl !\u003d null \u0026\u0026"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "                    shapePaneControl.CurrentCategory \u003d\u003d category)"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "                    shapePaneControl.RemoveCustomShape(shapeName);"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SyncShapeRename(string shapeOldName, string shapeNewName, string category)"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (PowerPoint.DocumentWindow window in Globals.ThisAddIn.Application.Windows)"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "                if (window \u003d\u003d Application.ActiveWindow)"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "                CustomShapePane shapePaneControl \u003d GetControlFromWindow(typeof(CustomShapePane), window) as CustomShapePane;"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "                if (shapePaneControl !\u003d null \u0026\u0026"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "                    shapePaneControl.CurrentCategory \u003d\u003d category)"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "                    shapePaneControl.RenameCustomShape(shapeOldName, shapeNewName);"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool VerifyOnLocal(PowerPoint.Presentation pres)"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "            Regex invalidPathRegex \u003d new Regex(\"^[hH]ttps?:\");"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "            return !invalidPathRegex.IsMatch(pres.Path);"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool VerifyVersion(PowerPoint.Presentation pres)"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "            return !pres.Name.EndsWith(\".ppt\");"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Helper Functions"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "        public CustomTaskPane RegisterTaskPane(UserControl control, string title, PowerPoint.DocumentWindow wnd,"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "    EventHandler visibleChangeEventHandler \u003d null,"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "    EventHandler dockPositionChangeEventHandler \u003d null)"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "            LoadingDialogBox loadingDialog \u003d new LoadingDialogBox();"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "            loadingDialog.Show();"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "            // note down the control\u0027s width"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "            int width \u003d control.Width;"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "            // register the user control to the CustomTaskPanes collection and set it as"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "            // current active task pane;"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomTaskPane taskPane \u003d CustomTaskPanes.Add(control, title, wnd);"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "            // task pane UI setup"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "            taskPane.Visible \u003d false;"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "            taskPane.Width \u003d width + 20;"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "            // map the current window with the task pane"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!_documentPaneMapper.ContainsKey(wnd))"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "                _documentPaneMapper[wnd] \u003d new List\u003cCustomTaskPane\u003e();"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "            _documentPaneMapper[wnd].Add(taskPane);"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "            Trace.TraceInformation("
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "                \"After Pane Width Change: \" +"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "                string.Format(\"Pane Width \u003d {0}, Pane Height \u003d {1}, Control Width \u003d {2}, Control Height {3}\","
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "                    taskPane.Width, taskPane.Height, control.Width, control.Height));"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "            // event handlers register"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "            if (visibleChangeEventHandler !\u003d null)"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "                taskPane.VisibleChanged +\u003d visibleChangeEventHandler;"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "            if (dockPositionChangeEventHandler !\u003d null)"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "                taskPane.DockPositionChanged +\u003d dockPositionChangeEventHandler;"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "            loadingDialog.Close();"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "            return taskPane;"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override Microsoft.Office.Core.IRibbonExtensibility CreateRibbonExtensibilityObject()"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon \u003d new Ribbon1();"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "            return Ribbon;"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SetupLogger()"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "            // Check if folder exists and if not, create it"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Directory.Exists(AppDataFolder))"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "                Directory.CreateDirectory(AppDataFolder);"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "            string fileName \u003d DateTime.Now.ToString(\"yyyy-MM-dd\") + AppLogName;"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "            string logPath \u003d Path.Combine(AppDataFolder, fileName);"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "            Trace.AutoFlush \u003d true;"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "            Trace.Listeners.Add(new TextWriterTraceListener(logPath));"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ShutDownRecorderPane()"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "            RecorderTaskPane recorder \u003d GetActiveControl(typeof(RecorderTaskPane)) as RecorderTaskPane;"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "            if (recorder !\u003d null \u0026\u0026"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "                recorder.HasEvent())"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "                recorder.ForceStopEvent();"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void ShutDownPictureSlidesLab()"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PictureSlidesLab.Views.PictureSlidesLabWindow pictureSlidesLabWindow \u003d Ribbon.PictureSlidesLabWindow;"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (pictureSlidesLabWindow !\u003d null \u0026\u0026 pictureSlidesLabWindow.IsOpen)"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                pictureSlidesLabWindow.Close();"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "        private void RemoveTaskPanes(PowerPoint.DocumentWindow activeWindow)"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!_documentPaneMapper.ContainsKey(activeWindow))"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cCustomTaskPane\u003e activePanes \u003d _documentPaneMapper[activeWindow];"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (CustomTaskPane pane in activePanes)"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "                CustomTaskPanes.Remove(pane);"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "            _documentPaneMapper.Remove(activeWindow);"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "        private void RemoveTaskPane(PowerPoint.DocumentWindow window, Type paneType)"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!_documentPaneMapper.ContainsKey(window))"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cCustomTaskPane\u003e activePanes \u003d _documentPaneMapper[window];"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d activePanes.Count - 1; i \u003e\u003d 0; i--)"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "                CustomTaskPane pane \u003d activePanes[i];"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "                if (pane.Control.GetType() !\u003d paneType)"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "                CustomTaskPanes.Remove(pane);"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "                activePanes.RemoveAt(i);"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "        private void RegulatePresentationName(PowerPoint.Presentation pres, string tempPath, ref string presName,"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "            ref string presFullName)"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "            // this function is used to handle \"embed on other application\" issue. In this case,"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "            // all of presentation name, path and full name do not match the usual rule: name is"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "            // \"Untitled\", path is empty string and full name is \"slide in XX application\". We need"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "            // to regulate these fields properly."
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!presName.Contains(\".pptx\"))"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "                presName +\u003d \".pptx\";"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "            if (tempPath !\u003d null)"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "                // every time when recorder pane is open,"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "                // save this presentation\u0027s copy, which will be used"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "                // to load audio files later"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "                pres.SaveCopyAs(tempPath + presName);"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "                presFullName \u003d tempPath + presName;"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TaskPaneVisibleValueChangedEventHandler(object sender, EventArgs e)"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomTaskPane recorderPane \u003d GetActivePane(typeof(RecorderTaskPane));"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "            if (recorderPane \u003d\u003d null)"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "            RecorderTaskPane recorder \u003d recorderPane.Control as RecorderTaskPane;"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "            // trigger close form event when closing hide the pane"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "            if (recorder !\u003d null \u0026\u0026 !recorderPane.Visible)"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "                recorder.RecorderPaneClosing();"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "                // remove recorder pane and force it to reload when next time open"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "                RemoveTaskPane(Application.ActiveWindow, typeof(RecorderTaskPane));"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ResizeTaskPaneVisibleValueChangedEventHandler(object sender, EventArgs e)"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomTaskPane resizePane \u003d GetActivePane(typeof(ResizeLabPane));"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "            if (resizePane \u003d\u003d null)"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "            isResizePaneVisible \u003d resizePane.Visible;"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool SlidesInRangeHaveCaptions(PowerPoint.SlideRange sldRange)"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (PowerPoint.Slide slide in sldRange)"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPointSlide pptSlide \u003d PowerPointSlide.FromSlideFactory(slide);"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "                if (pptSlide.HasCaptions())"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool SlidesInRangeHaveAudio(PowerPoint.SlideRange sldRange)"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (PowerPoint.Slide slide in sldRange)"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPointSlide pptSlide \u003d PowerPointSlide.FromSlideFactory(slide);"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "                if (pptSlide.HasAudio())"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SlideShowBeginHandler(PowerPoint.SlideShowWindow wn)"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "            _isInSlideShow \u003d true;"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "            AgendaLab.AgendaLabMain.SlideShowBeginHandler();"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SlideShowEndHandler(PowerPoint.Presentation presentation)"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "            _isInSlideShow \u003d false;"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "            RecorderTaskPane recorder \u003d GetActiveControl(typeof(RecorderTaskPane)) as RecorderTaskPane;"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "            if (recorder \u003d\u003d null)"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "                AgendaLab.AgendaLabMain.SlideShowEndHandler();"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "            // force recording session ends"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "            if (recorder.HasEvent())"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "                recorder.ForceStopEvent();"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "            // enable slide show button"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "            recorder.EnableSlideShow();"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "            // when leave the show, dispose the in-show control if we have one"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "            recorder.DisposeInSlideControlBox();"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "            // if audio buffer is not empty, render the effects"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "            if (recorder.AudioBuffer.Count !\u003d 0)"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "                List\u003cPowerPointSlide\u003e slides \u003d PowerPointPresentation.Current.Slides.ToList();"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "                for (int i \u003d 0; i \u003c recorder.AudioBuffer.Count; i++)"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (recorder.AudioBuffer[i].Count \u003d\u003d 0)"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "                    foreach (Tuple\u003cAudioMisc.Audio, int\u003e audio in recorder.AudioBuffer[i])"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "                        audio.Item1.EmbedOnSlide(slides[i], audio.Item2);"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "                        if (ELearningLab.Service.ComputerVoiceRuntimeService.IsRemoveAudioEnabled)"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "                            continue;"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "                        ELearningLab.Service.ComputerVoiceRuntimeService.IsRemoveAudioEnabled \u003d true;"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "                        Ribbon.RefreshRibbonControl(\"RemoveNarrationsButton\");"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "            // clear the buffer after embed"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "            recorder.AudioBuffer.Clear();"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "            // change back the slide range settings"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "            Application.ActivePresentation.SlideShowSettings.RangeType \u003d PowerPoint.PpSlideShowRangeType.ppShowAll;"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "            AgendaLab.AgendaLabMain.SlideShowEndHandler();"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool IsEmptyFile(string filePath)"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!File.Exists(filePath))"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "            FileInfo fileInfo \u003d new FileInfo(filePath);"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "            return fileInfo.Length \u003d\u003d 0;"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateRecorderPane(int count, int id)"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomTaskPane recorderPane \u003d GetActivePane(typeof(RecorderTaskPane));"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "            // if there\u0027s no active pane associated with the current window, return"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "            if (recorderPane \u003d\u003d null)"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "            RecorderTaskPane recorder \u003d recorderPane.Control as RecorderTaskPane;"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "            if (recorder \u003d\u003d null)"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "            // if the user has selected none or more than 1 slides, recorder pane should show nothing"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "            if (count !\u003d 1)"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "                if (recorderPane.Visible)"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": "                    recorder.ClearDisplayLists();"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "                // initailize the current slide"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": "                recorder.InitializeAudioAndScript(PowerPointCurrentPresentationInfo.CurrentSlide, null, false);"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "                // if the pane is shown, refresh the pane immediately"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": "                if (recorderPane.Visible)"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": "                    recorder.UpdateLists(id);"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateTimerPane(bool isVisible)"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomTaskPane timerPane \u003d GetActivePane(typeof(TimerPane));"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "            if (timerPane !\u003d null)"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "                timerPane.Visible \u003d isVisible;"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateELearningPane(int selectedSlidesCount)"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomTaskPane elearningLabPane \u003d GetActivePane(typeof(ELearningLabTaskpane));"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "            if (elearningLabPane \u003d\u003d null)"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "            ELearningLabTaskpane taskpane \u003d elearningLabPane.Control as ELearningLabTaskpane;"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "            if (selectedSlidesCount \u003e 0)"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "                taskpane.eLearningLabMainPanel1.HandleSlideChangedEvent();"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "                taskpane.eLearningLabMainPanel1.HandleELearningPaneSlideSelectionChanged();"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": "                elearningLabPane.Visible \u003d false;"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "        private string GetPresentationTempFolder(string presName)"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": "            string tempName \u003d presName.GetHashCode().ToString(CultureInfo.InvariantCulture);"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "            string tempPath \u003d Path.GetTempPath() + TempFolderNamePrefix + tempName + @\"\\\";"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "            return tempPath;"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CleanUp(PowerPoint.DocumentWindow associatedWindow)"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_documentHashcodeMapper.ContainsKey(associatedWindow))"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": "                _documentHashcodeMapper.Remove(associatedWindow);"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": "            // if there exists some task panes, remove them"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "            RemoveTaskPanes(associatedWindow);"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ExtractMediaFiles(string zipFullPath, string tempPath)"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "                ZipStorer zip \u003d ZipStorer.Open(zipFullPath, FileAccess.Read);"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": "                List\u003cZipStorer.ZipFileEntry\u003e dir \u003d zip.ReadCentralDir();"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "                Regex regex \u003d new Regex(SlideXmlSearchPattern);"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": "                foreach (ZipStorer.ZipFileEntry entry in dir)"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": "                    string name \u003d Path.GetFileName(entry.FilenameInZip);"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (name \u003d\u003d null)"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (name.Contains(\".wav\") ||"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": "                        regex.IsMatch(name))"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "                        zip.ExtractFile(entry, tempPath + name);"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "                zip.Close();"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "                FileDir.DeleteFile(zipFullPath);"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": "                ErrorDialogBox.ShowDialog(CommonText.ErrorExtract, \"Archived files cannot be retrieved.\", e);"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "        private void BreakRecorderEvents()"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": "            RecorderTaskPane recorder \u003d GetActiveControl(typeof(RecorderTaskPane)) as RecorderTaskPane;"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "            if (recorder !\u003d null \u0026\u0026"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": "                recorder.HasEvent())"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": "                recorder.ForceStopEvent();"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void ShutDownSyncLab()"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // If sync lab open, then close it."
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PowerPoint.Presentation syncLabPpt \u003d GetOpenedSyncLabPresentation();"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (syncLabPpt !\u003d null)"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                syncLabPpt.Close();"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                Trace.TraceInformation(\"SyncLab terminated.\");"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private PowerPoint.Presentation GetOpenedSyncLabPresentation()"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            foreach (PowerPoint.Presentation presentation in Application.Presentations)"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                if (presentation.Name.Contains(SyncLabPptxName))"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    return presentation;"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void ShutDownShapesLab()"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (ShapePresentation !\u003d null \u0026\u0026"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                ShapePresentation.Opened)"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                if (string.IsNullOrEmpty(ShapesLabConfig.DefaultCategory))"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    ShapesLabConfig.DefaultCategory \u003d ShapePresentation.Categories[0];"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                ShapePresentation.Close();"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                Trace.TraceInformation(\"ShapesLab terminated.\");"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": "        # endregion"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": "        # region Powerpoint Application Event Handlers"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ThisAddInStartup(object sender, EventArgs e)"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "-"
        },
        "content": "            SetupLogger();"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": "            Logger.Log(\"PowerPointLabs Started\");"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": "            CultureUtil.SetDefaultCulture(CultureInfo.GetCultureInfo(\"en-US\"));"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": "            new Updater().TryUpdate();"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": "            SetupFunctionalTestChannels();"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": "            PPMouse.Init(Application);"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": "            PPKeyboard.Init(Application);"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": "            PPCopy.Init(Application);"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": "            UIThreadExecutor.Init();"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": "            SetupDoubleClickHandler();"
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "-"
        },
        "content": "            SetupTabActivateHandler();"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": "            SetupAfterCopyPasteHandler();"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": "            SaveLabSettings.InitialiseLocalStorage();"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": "            // According to MSDN, when more than 1 event are triggered, callback\u0027s invoking sequence"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": "            // follows the defining order. I.e. the earlier you defined, the earlier it will be"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": "            // executed."
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": "            // Here, we want the priority to be: Application action \u003e Window action \u003e Slide action"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": "            // Priority High: Application Actions"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": "            ((PowerPoint.EApplication_Event)Application).NewPresentation +\u003d ThisAddInNewPresentation;"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": "            Application.AfterNewPresentation +\u003d ThisAddInAfterNewPresentation;"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": "            Application.PresentationOpen +\u003d ThisAddInPresentationOpen;"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "-"
        },
        "content": "            Application.PresentationClose +\u003d ThisAddInPresentationClose;"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "-"
        },
        "content": "            // Priority Mid: Window Actions"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": "            Application.WindowActivate +\u003d ThisAddInApplicationOnWindowActivate;"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": "            Application.WindowDeactivate +\u003d ThisAddInApplicationOnWindowDeactivate;"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": "            Application.WindowSelectionChange +\u003d ThisAddInSelectionChanged;"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": "            Application.SlideShowBegin +\u003d SlideShowBeginHandler;"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": "            Application.SlideShowEnd +\u003d SlideShowEndHandler;"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "-"
        },
        "content": "            // Priority Low: Slide Actions"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "-"
        },
        "content": "            Application.SlideSelectionChanged +\u003d ThisAddInSlideSelectionChanged;"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ThisAddInApplicationOnWindowDeactivate(PowerPoint.Presentation pres, PowerPoint.DocumentWindow wn)"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Trace.TraceInformation(pres.Name + \" (Presentation) and \" + wn.Caption + \" (Window) deactivated.\");"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "-"
        },
        "content": "            _deactivatedPresFullName \u003d pres.FullName;"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ThisAddInApplicationOnWindowActivate(PowerPoint.Presentation pres, PowerPoint.DocumentWindow wn)"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "-"
        },
        "content": "            if (pres !\u003d null)"
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                Trace.TraceInformation(pres.Name + \" (Presentation) and \" + wn.Caption + \" (Window) activated.\");"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "-"
        },
        "content": "                CustomShapePane customShape \u003d GetActiveControl(typeof(CustomShapePane)) as CustomShapePane;"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": "                // make sure ShapeGallery\u0027s default category is consistent with current presentation"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "-"
        },
        "content": "                if (customShape !\u003d null)"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "-"
        },
        "content": "                    string currentCategory \u003d customShape.CurrentCategory;"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "-"
        },
        "content": "                    ShapePresentation.DefaultCategory \u003d currentCategory;"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                // If a window was activated in any way, PptLabs should not terminate."
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                _pptLabsShouldTerminate \u003d false;"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ThisAddInSlideSelectionChanged(PowerPoint.SlideRange sldRange)"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "-"
        },
        "content": "            // TODO: doing range sweep to check these var may affect performance, consider initializing these"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "-"
        },
        "content": "            // TODO: variables only at program starts"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "-"
        },
        "content": "            NotesToCaptions.IsRemoveCaptionsEnabled \u003d SlidesInRangeHaveCaptions(sldRange);"
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "-"
        },
        "content": "            ComputerVoiceRuntimeService.IsRemoveAudioEnabled \u003d SlidesInRangeHaveAudio(sldRange);"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "-"
        },
        "content": "            // update recorder pane"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "-"
        },
        "content": "            if (sldRange.Count \u003e 0)"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "-"
        },
        "content": "                int slideID;"
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "-"
        },
        "content": "                try"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "-"
        },
        "content": "                    slideID \u003d sldRange[1].SlideID;"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "-"
        },
        "content": "                catch (COMException)"
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateRecorderPane(sldRange.Count, slideID);"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "-"
        },
        "content": "                TimerLab.TimerLab.IsTimerEnabled \u003d true;"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "-"
        },
        "content": "                ELearningService.IsELearningWorkspaceEnabled \u003d true;"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                PictureSlidesLab.PictureSlidesLab.IsPictureSlidesEnabled \u003d true;"
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateRecorderPane(sldRange.Count, -1);"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "-"
        },
        "content": "                TimerLab.TimerLab.IsTimerEnabled \u003d false;"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateTimerPane(false);"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "-"
        },
        "content": "                ELearningService.IsELearningWorkspaceEnabled \u003d false;"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                PictureSlidesLab.PictureSlidesLab.IsPictureSlidesEnabled \u003d false;"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                ShutDownPictureSlidesLab();"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateELearningPane(sldRange.Count);"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "-"
        },
        "content": "            // in case the recorder is on event"
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "-"
        },
        "content": "            BreakRecorderEvents();"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "-"
        },
        "content": "            // ribbon function init"
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "-"
        },
        "content": "            HighlightLab.HighlightBulletsText.IsHighlightPointsEnabled \u003d true;"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "-"
        },
        "content": "            HighlightLab.HighlightBulletsBackground.IsHighlightBackgroundEnabled \u003d true;"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "-"
        },
        "content": "            if (sldRange.Count !\u003d 1)"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "-"
        },
        "content": "                HighlightLab.HighlightBulletsText.IsHighlightPointsEnabled \u003d false;"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "-"
        },
        "content": "                HighlightLab.HighlightBulletsBackground.IsHighlightBackgroundEnabled \u003d false;"
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPoint.Slide tmp \u003d sldRange[1];"
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPoint.Presentation presentation \u003d PowerPointPresentation.Current.Presentation;"
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "-"
        },
        "content": "                int slideIndex \u003d tmp.SlideIndex;"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPoint.Slide next \u003d tmp;"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPoint.Slide prev \u003d tmp;"
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "-"
        },
        "content": "                if (slideIndex \u003c presentation.Slides.Count)"
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "-"
        },
        "content": "                    next \u003d presentation.Slides[slideIndex + 1];"
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "-"
        },
        "content": "                if (slideIndex \u003e 1)"
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "-"
        },
        "content": "                    prev \u003d presentation.Slides[slideIndex - 1];"
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"CreateMenu\");"
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"PictureSlidesLabButton\");"
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"TimerLabButton\");"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"HighlightPointsButton\");"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"HighlightBackgroundButton\");"
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"RemoveCaptionsButton\");"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"RemoveAudioButton\");"
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"ELearningTaskPaneButton\");"
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "-"
        },
        "content": "        // To handle AccessViolationException"
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "-"
        },
        "content": "        [HandleProcessCorruptedStateExceptions]"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ThisAddInSelectionChanged(PowerPoint.Selection sel)"
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "-"
        },
        "content": "            if (sel.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionShapes)"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPoint.Shape sh \u003d null;"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "-"
        },
        "content": "                try"
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "-"
        },
        "content": "                    sh \u003d sel.ShapeRange[1];"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "-"
        },
        "content": "                catch (AccessViolationException e)"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "-"
        },
        "content": "                    Logger.LogException(e, \"ThisAddInSelectionChanged\");"
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "-"
        },
        "content": "                    Logger.Log(\"We do not have access to the ShapeRange now!\");"
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "-"
        },
        "content": "                if (isResizePaneVisible)"
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "-"
        },
        "content": "                    sel.ShapeRange.LockAspectRatio \u003d ResizeLabPaneWPF.IsAspectRatioLocked"
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "-"
        },
        "content": "                        ? Office.MsoTriState.msoTrue"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "-"
        },
        "content": "                        : Office.MsoTriState.msoFalse;"
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            // When there is no selection on the slide, disable the add/copy buttons on"
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            // customshapepane and syncpane respectively"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            if (GetActivePane(typeof(SyncPane)) !\u003d null)"
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                SyncPane syncPane \u003d GetActivePane(typeof(SyncPane)).Control as SyncPane;"
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                syncPane.UpdateOnSelectionChange(sel);"
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            if (GetActivePane(typeof(CustomShapePane)) !\u003d null)"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                CustomShapePane customShapePane \u003d GetActivePane(typeof(CustomShapePane)).Control as CustomShapePane;"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                customShapePane.UpdateOnSelectionChange(sel);"
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"AnimateInSlideButton\");"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"DrillDownButton\");"
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"StepBackButton\");"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"AddSpotlightButton\");"
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"AddZoomInButton\");"
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"AddZoomOutButton\");"
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"ZoomToAreaButton\");"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"ReplaceWithClipboardButton\");"
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"PasteIntoGroupButton\");"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"AssignTooltipButton\");"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "-"
        },
        "content": "            // To grey out the \"HighlightText\" button whenever non-text fragment or nothing has been selected"
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"HighlightTextButton\");"
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ThisAddInNewPresentation(PowerPoint.Presentation pres)"
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.DocumentWindow activeWindow \u003d pres.Application.ActiveWindow;"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "-"
        },
        "content": "            string tempName \u003d pres.Name.GetHashCode().ToString(CultureInfo.InvariantCulture);"
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "-"
        },
        "content": "            _documentHashcodeMapper[activeWindow] \u003d tempName;"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "-"
        },
        "content": "            // Refresh ribbon to enable the menu buttons"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "-"
        },
        "content": "            RefreshRibbonMenuButtons();"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "-"
        },
        "content": "            // Initialise the \"Maintain Tab Focus\" checkbox"
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.InitialiseVisibilityCheckbox();"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "-"
        },
        "content": "        // solve new un-modified unsave problem"
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ThisAddInAfterNewPresentation(PowerPoint.Presentation pres)"
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "-"
        },
        "content": "            //Access the BuiltInDocumentProperties so that the property storage does get created."
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "-"
        },
        "content": "            object o \u003d pres.BuiltInDocumentProperties;"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "-"
        },
        "content": "            pres.Saved \u003d Microsoft.Office.Core.MsoTriState.msoTrue;"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ThisAddInPresentationOpen(PowerPoint.Presentation pres)"
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "-"
        },
        "content": "            // Windows count could be zero if presentation is opened as preview of template slides"
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "-"
        },
        "content": "            if (pres.Application.Windows.Count \u003e 0)"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPoint.DocumentWindow activeWindow \u003d pres.Application.ActiveWindow;"
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "-"
        },
        "content": "                tempFolderName \u003d pres.Name.GetHashCode().ToString(CultureInfo.InvariantCulture);"
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "-"
        },
        "content": "                // if we opened a new window, register the window with its name"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!_documentHashcodeMapper.ContainsKey(activeWindow))"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "-"
        },
        "content": "                    _documentHashcodeMapper[activeWindow] \u003d tempFolderName;"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "-"
        },
        "content": "                // Refresh ribbon to enable the menu buttons if there are now at least one window"
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "-"
        },
        "content": "                RefreshRibbonMenuButtons();"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "-"
        },
        "content": "                // Initialise the \"Maintain Tab Focus\" checkbox"
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "-"
        },
        "content": "                Ribbon.InitialiseVisibilityCheckbox();"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "-"
        },
        "content": "            // load audio setting preference for elearning lab"
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "-"
        },
        "content": "            AudioSettingStorageService.LoadAudioSettingPreference();"
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ThisAddInPresentationClose(PowerPoint.Presentation pres)"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Trace.TraceInformation(\"Closing \" + pres.Name + \"...\");"
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // We need to check if there is only one window AND the active window\u0027s presentation "
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // has the same name as the one we are closing because it is possible for background "
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // presentation (those without windows) to close and trigger this event as well."
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // We only want to shut down PPTLabs if we are closing the main presentation."
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (Application.Windows.Count \u003d\u003d 1 \u0026\u0026"
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                Application.ActiveWindow.Presentation.FullName \u003d\u003d pres.FullName)"
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                // If this current window we are closing is the last window, then PptLabs should terminate."
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                _pptLabsShouldTerminate \u003d true;"
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // special case: if we are closing \u0027ShapeGallery.pptx\u0027 or \u0027Sync Lab - Do not edit.pptx\u0027, no other action will be done"
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (pres.Name.Contains(ShapeGalleryPptxName) || pres.Name.Contains(SyncLabPptxName))"
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (_pptLabsShouldTerminate)"
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                ShutDownSyncLab();"
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                ShutDownShapesLab();"
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                ShutDownPictureSlidesLab();"
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "-"
        },
        "content": "            ShutDownRecorderPane();"
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "-"
        },
        "content": "            // find the document that holds the presentation with pres.Name"
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "-"
        },
        "content": "            // special case will be embedded slide. in this case pres.Windows return exception"
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.DocumentWindow associatedWindow;"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                Trace.TraceInformation(\"Total windows of closing presentation \u003d \" + pres.Windows.Count);"
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "-"
        },
        "content": "                Trace.TraceInformation(\"Windows are: \");"
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "-"
        },
        "content": "                foreach (PowerPoint.DocumentWindow window in pres.Windows)"
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    Trace.TraceInformation(\"\\t\" + window.Caption);"
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "-"
        },
        "content": "                associatedWindow \u003d pres.Windows[1];"
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception)"
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                Trace.TraceInformation(\"Closing presentation - \" + pres.FullName + \" - has no window.\");"
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "-"
        },
        "content": "            // for Functional Test to close presentation"
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "-"
        },
        "content": "            if (PowerPointLabsFT.IsFunctionalTestOn)"
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "-"
        },
        "content": "                IntPtr handle \u003d Native.FindWindow(\"PPTFrameClass\", pres.Name + \" - Microsoft PowerPoint\");"
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "-"
        },
        "content": "                Native.SetForegroundWindow(handle);"
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "-"
        },
        "content": "                SendKeys.Send(\"N\");"
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "-"
        },
        "content": "            Trace.TraceInformation(\"Closing associated window...\");"
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "-"
        },
        "content": "            CleanUp(associatedWindow);"
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "-"
        },
        "content": "            // save audio setting preference for elearning lab"
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "-"
        },
        "content": "            AudioSettingStorageService.SaveAudioSettingPreference();"
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "-"
        },
        "content": "            // Refresh ribbon to grey out the menu / buttons if there are no windows open"
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "-"
        },
        "content": "            RefreshRibbonMenuButtons();"
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "-"
        },
        "content": "        private void RefreshRibbonMenuButtons()"
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(AnimationLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(ZoomLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(NarrationsLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(CaptionsLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(HighlightLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(EffectsLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(PositionsLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(ResizeLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(ColorsLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(SaveLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(SyncLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(ShapesLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(CropLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(PasteLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(TimerLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(AgendaLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(PictureSlidesLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ThisAddInShutdown(object sender, EventArgs e)"
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "-"
        },
        "content": "            PPMouse.StopHook();"
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "-"
        },
        "content": "            PPKeyboard.StopHook();"
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "-"
        },
        "content": "            PPCopy.StopHook();"
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "-"
        },
        "content": "            PositionsPaneWpf.ClearAllEventHandlers();"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "-"
        },
        "content": "            UIThreadExecutor.TearDown();"
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "-"
        },
        "content": "            Trace.TraceInformation(DateTime.Now.ToString(\"yyyyMMddHHmmss\") + \": PowerPointLabs Exiting\");"
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "-"
        },
        "content": "            Trace.Close();"
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_ftChannel !\u003d null)"
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "-"
        },
        "content": "                ChannelServices.UnregisterChannel(_ftChannel);"
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "-"
        },
        "content": "        # region Copy paste handlers"
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "-"
        },
        "content": "        private PowerPoint.DocumentWindow _copyFromWnd;"
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "-"
        },
        "content": "        private readonly Regex _shapeNamePattern \u003d new Regex(@\"^[^\\[]\\D+\\s\\d+$\");"
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "-"
        },
        "content": "        private HashSet\u003cString\u003e _isShapeMatchedAlready;"
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AfterPasteEventHandler(PowerPoint.Selection selection)"
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPoint.Slide currentSlide \u003d Application.ActiveWindow.View.Slide as PowerPoint.Slide;"
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "-"
        },
        "content": "                string pptName \u003d Application.ActivePresentation.Name;"
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "-"
        },
        "content": "                if (selection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionShapes"
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 currentSlide !\u003d null"
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 currentSlide.SlideID !\u003d _previousSlideForCopyEvent.SlideID"
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 pptName \u003d\u003d _previousPptName)"
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "-"
        },
        "content": "                    PowerPoint.ShapeRange pastedShapes \u003d selection.ShapeRange;"
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "-"
        },
        "content": "                    List\u003cstring\u003e nameListForPastedShapes \u003d new List\u003cstring\u003e();"
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "-"
        },
        "content": "                    Dictionary\u003cstring, string\u003e nameDictForPastedShapes \u003d new Dictionary\u003cstring, string\u003e();"
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "-"
        },
        "content": "                    List\u003cstring\u003e nameListForCopiedShapes \u003d new List\u003cstring\u003e();"
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "-"
        },
        "content": "                    List\u003cPowerPoint.Shape\u003e corruptedShapes \u003d new List\u003cPowerPoint.Shape\u003e();"
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "-"
        },
        "content": "                    foreach (PowerPoint.Shape shape in _copiedShapes)"
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "-"
        },
        "content": "                        try"
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "-"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "-"
        },
        "content": "                            nameListForCopiedShapes.Add(shape.Name);"
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "-"
        },
        "content": "                        catch"
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "-"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "-"
        },
        "content": "                            //handling corrupted shapes"
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "-"
        },
        "content": "                            shape.Copy();"
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "-"
        },
        "content": "                            PowerPoint.Shape fixedShape \u003d _previousSlideForCopyEvent.Shapes.Paste()[1];"
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "-"
        },
        "content": "                            fixedShape.Left \u003d shape.Left;"
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "-"
        },
        "content": "                            fixedShape.Top \u003d shape.Top;"
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "-"
        },
        "content": "                            while (fixedShape.ZOrderPosition \u003e shape.ZOrderPosition)"
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "-"
        },
        "content": "                            {"
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "-"
        },
        "content": "                                fixedShape.ZOrder(Office.MsoZOrderCmd.msoSendBackward);"
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "-"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "-"
        },
        "content": "                            corruptedShapes.Add(shape);"
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "-"
        },
        "content": "                            nameListForCopiedShapes.Add(fixedShape.Name);"
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "-"
        },
        "content": "                    foreach (PowerPoint.Shape shape in corruptedShapes)"
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "-"
        },
        "content": "                        shape.Delete();"
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "-"
        },
        "content": "                    _isShapeMatchedAlready \u003d new HashSet\u003cstring\u003e();"
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "-"
        },
        "content": "                    for (int i \u003d 1; i \u003c\u003d pastedShapes.Count; i++)"
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "-"
        },
        "content": "                        PowerPoint.Shape shape \u003d pastedShapes[i];"
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "-"
        },
        "content": "                        int matchedShapeIndex \u003d FindMatchedShape(shape);"
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "-"
        },
        "content": "                        string uniqueName \u003d Guid.NewGuid().ToString();"
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "-"
        },
        "content": "                        nameDictForPastedShapes[uniqueName] \u003d nameListForCopiedShapes[matchedShapeIndex];"
      },
      {
        "lineNumber": 1265,
        "author": {
          "gitId": "-"
        },
        "content": "                        shape.Name \u003d uniqueName;"
      },
      {
        "lineNumber": 1266,
        "author": {
          "gitId": "-"
        },
        "content": "                        nameListForPastedShapes.Add(shape.Name);"
      },
      {
        "lineNumber": 1267,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1268,
        "author": {
          "gitId": "-"
        },
        "content": "                    //Re-select pasted shapes"
      },
      {
        "lineNumber": 1269,
        "author": {
          "gitId": "-"
        },
        "content": "                    PowerPoint.ShapeRange range \u003d currentSlide.Shapes.Range(nameListForPastedShapes.ToArray());"
      },
      {
        "lineNumber": 1270,
        "author": {
          "gitId": "-"
        },
        "content": "                    foreach (PowerPoint.Shape shape in range)"
      },
      {
        "lineNumber": 1271,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1272,
        "author": {
          "gitId": "-"
        },
        "content": "                        shape.Name \u003d nameDictForPastedShapes[shape.Name];"
      },
      {
        "lineNumber": 1273,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1274,
        "author": {
          "gitId": "-"
        },
        "content": "                    range.Select();"
      },
      {
        "lineNumber": 1275,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1276,
        "author": {
          "gitId": "-"
        },
        "content": "                else if (selection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionSlides)"
      },
      {
        "lineNumber": 1277,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1278,
        "author": {
          "gitId": "-"
        },
        "content": "                    List\u003cPowerPoint.Slide\u003e pastedSlides \u003d selection.SlideRange.Cast\u003cPowerPoint.Slide\u003e().OrderBy(x \u003d\u003e x.SlideIndex).ToList();"
      },
      {
        "lineNumber": 1279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1280,
        "author": {
          "gitId": "-"
        },
        "content": "                    for (int i \u003d 0; i \u003c pastedSlides.Count; i++)"
      },
      {
        "lineNumber": 1281,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1282,
        "author": {
          "gitId": "-"
        },
        "content": "                        if (AgendaLab.AgendaSlide.IsReferenceslide(_copiedSlides[i]))"
      },
      {
        "lineNumber": 1283,
        "author": {
          "gitId": "-"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 1284,
        "author": {
          "gitId": "-"
        },
        "content": "                            pastedSlides[i].Name \u003d _copiedSlides[i].Name;"
      },
      {
        "lineNumber": 1285,
        "author": {
          "gitId": "-"
        },
        "content": "                            pastedSlides[i].Design \u003d _copiedSlides[i].Design;"
      },
      {
        "lineNumber": 1286,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 1287,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1288,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1289,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1290,
        "author": {
          "gitId": "-"
        },
        "content": "            catch"
      },
      {
        "lineNumber": 1291,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1292,
        "author": {
          "gitId": "-"
        },
        "content": "                //TODO: log in ThisAddIn.cs"
      },
      {
        "lineNumber": 1293,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1294,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1296,
        "author": {
          "gitId": "-"
        },
        "content": "        private int FindMatchedShape(PowerPoint.Shape shape)"
      },
      {
        "lineNumber": 1297,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1298,
        "author": {
          "gitId": "-"
        },
        "content": "            //Strong matching:"
      },
      {
        "lineNumber": 1299,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 0; i \u003c _copiedShapes.Count; i++)"
      },
      {
        "lineNumber": 1300,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1301,
        "author": {
          "gitId": "-"
        },
        "content": "                if (IsSimilarShape(shape, _copiedShapes[i])"
      },
      {
        "lineNumber": 1302,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 IsSimilarName(shape.Name, _copiedShapes[i].Name)"
      },
      {
        "lineNumber": 1303,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 Math.Abs(shape.Left - _copiedShapes[i].Left) \u003c float.Epsilon"
      },
      {
        "lineNumber": 1304,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 Math.Abs(shape.Height - _copiedShapes[i].Height) \u003c float.Epsilon"
      },
      {
        "lineNumber": 1305,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 !_isShapeMatchedAlready.Contains(_copiedShapes[i].Id.ToString(CultureInfo.InvariantCulture)))"
      },
      {
        "lineNumber": 1306,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1307,
        "author": {
          "gitId": "-"
        },
        "content": "                    _isShapeMatchedAlready.Add(_copiedShapes[i].Id.ToString(CultureInfo.InvariantCulture));"
      },
      {
        "lineNumber": 1308,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1309,
        "author": {
          "gitId": "-"
        },
        "content": "                    return i;"
      },
      {
        "lineNumber": 1310,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1311,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1312,
        "author": {
          "gitId": "-"
        },
        "content": "            //Blur matching:"
      },
      {
        "lineNumber": 1313,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 0; i \u003c _copiedShapes.Count; i++)"
      },
      {
        "lineNumber": 1314,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1315,
        "author": {
          "gitId": "-"
        },
        "content": "                if (IsSimilarShape(shape, _copiedShapes[i])"
      },
      {
        "lineNumber": 1316,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 IsSimilarName(shape.Name, _copiedShapes[i].Name)"
      },
      {
        "lineNumber": 1317,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 !_isShapeMatchedAlready.Contains(_copiedShapes[i].Id.ToString(CultureInfo.InvariantCulture)))"
      },
      {
        "lineNumber": 1318,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1319,
        "author": {
          "gitId": "-"
        },
        "content": "                    _isShapeMatchedAlready.Add(_copiedShapes[i].Id.ToString(CultureInfo.InvariantCulture));"
      },
      {
        "lineNumber": 1320,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1321,
        "author": {
          "gitId": "-"
        },
        "content": "                    return i;"
      },
      {
        "lineNumber": 1322,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1323,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1324,
        "author": {
          "gitId": "-"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 1325,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1326,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1327,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool IsSimilarShape(PowerPoint.Shape shape, PowerPoint.Shape shape2)"
      },
      {
        "lineNumber": 1328,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1329,
        "author": {
          "gitId": "-"
        },
        "content": "            return Math.Abs(shape.Width - shape2.Width) \u003c float.Epsilon"
      },
      {
        "lineNumber": 1330,
        "author": {
          "gitId": "-"
        },
        "content": "                   \u0026\u0026 Math.Abs(shape.Height - shape2.Height) \u003c float.Epsilon"
      },
      {
        "lineNumber": 1331,
        "author": {
          "gitId": "-"
        },
        "content": "                   \u0026\u0026 shape.Type \u003d\u003d shape2.Type"
      },
      {
        "lineNumber": 1332,
        "author": {
          "gitId": "-"
        },
        "content": "                   \u0026\u0026 (shape.Type !\u003d Office.MsoShapeType.msoAutoShape"
      },
      {
        "lineNumber": 1333,
        "author": {
          "gitId": "-"
        },
        "content": "                       || shape.AutoShapeType \u003d\u003d shape2.AutoShapeType);"
      },
      {
        "lineNumber": 1334,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1335,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1336,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1337,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Similar name defi:"
      },
      {
        "lineNumber": 1338,
        "author": {
          "gitId": "-"
        },
        "content": "        /// 1. if they\u0027re not default shape name, they must be the exact same"
      },
      {
        "lineNumber": 1339,
        "author": {
          "gitId": "-"
        },
        "content": "        /// 2. if they\u0027re default shape name, the shape type in the name must be the exact same"
      },
      {
        "lineNumber": 1340,
        "author": {
          "gitId": "-"
        },
        "content": "        /// 3. otherwise not similar"
      },
      {
        "lineNumber": 1341,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1342,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"name1\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 1343,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"name2\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 1344,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003creturns\u003e\u003c/returns\u003e"
      },
      {
        "lineNumber": 1345,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool IsSimilarName(string name1, string name2)"
      },
      {
        "lineNumber": 1346,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1347,
        "author": {
          "gitId": "-"
        },
        "content": "            //remove enclosing brackets for name2"
      },
      {
        "lineNumber": 1348,
        "author": {
          "gitId": "-"
        },
        "content": "            Regex nameEnclosedInBrackets \u003d new Regex(@\"^\\[\\D+\\s\\d+\\]$\");"
      },
      {
        "lineNumber": 1349,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!nameEnclosedInBrackets.IsMatch(name1)"
      },
      {
        "lineNumber": 1350,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 nameEnclosedInBrackets.IsMatch(name2)"
      },
      {
        "lineNumber": 1351,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 name2.Length \u003e 2)"
      },
      {
        "lineNumber": 1352,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1353,
        "author": {
          "gitId": "-"
        },
        "content": "                name2 \u003d name2.Substring(1, name2.Length - 2);"
      },
      {
        "lineNumber": 1354,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1355,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1356,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!_shapeNamePattern.IsMatch(name1)"
      },
      {
        "lineNumber": 1357,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 !_shapeNamePattern.IsMatch(name2))"
      },
      {
        "lineNumber": 1358,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1359,
        "author": {
          "gitId": "-"
        },
        "content": "                return name1.Equals(name2);"
      },
      {
        "lineNumber": 1360,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1361,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1362,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_shapeNamePattern.IsMatch(name1)"
      },
      {
        "lineNumber": 1363,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 _shapeNamePattern.IsMatch(name2))"
      },
      {
        "lineNumber": 1364,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1365,
        "author": {
          "gitId": "-"
        },
        "content": "                Regex shapeTypeInName \u003d new Regex(@\"^[^\\[]\\D+\\s(?\u003d\\d+$)\");"
      },
      {
        "lineNumber": 1366,
        "author": {
          "gitId": "-"
        },
        "content": "                string shapeTypeForName1 \u003d shapeTypeInName.Match(name1).ToString();"
      },
      {
        "lineNumber": 1367,
        "author": {
          "gitId": "-"
        },
        "content": "                string shapeTypeForName2 \u003d shapeTypeInName.Match(name2).ToString();"
      },
      {
        "lineNumber": 1368,
        "author": {
          "gitId": "-"
        },
        "content": "                return shapeTypeForName1.Equals(shapeTypeForName2);"
      },
      {
        "lineNumber": 1369,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1370,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 1371,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1372,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1373,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AfterPasteRecorderEventHandler(PowerPoint.Selection selection)"
      },
      {
        "lineNumber": 1374,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1375,
        "author": {
          "gitId": "-"
        },
        "content": "            if (selection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionSlides)"
      },
      {
        "lineNumber": 1376,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1377,
        "author": {
          "gitId": "-"
        },
        "content": "                // invalid paste event triggered because of system message loss"
      },
      {
        "lineNumber": 1378,
        "author": {
          "gitId": "-"
        },
        "content": "                if (_copiedSlides.Count \u003c 1)"
      },
      {
        "lineNumber": 1379,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1380,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 1381,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1382,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1383,
        "author": {
          "gitId": "-"
        },
        "content": "                // if we copied from a presentation without recorder pane or pasted to a"
      },
      {
        "lineNumber": 1384,
        "author": {
          "gitId": "-"
        },
        "content": "                // presentation without recorder pane, paste event will not be entertained"
      },
      {
        "lineNumber": 1385,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!_documentPaneMapper.ContainsKey(_copyFromWnd) ||"
      },
      {
        "lineNumber": 1386,
        "author": {
          "gitId": "-"
        },
        "content": "                    _documentPaneMapper[_copyFromWnd] \u003d\u003d null ||"
      },
      {
        "lineNumber": 1387,
        "author": {
          "gitId": "-"
        },
        "content": "                    GetActivePane(typeof(RecorderTaskPane)) \u003d\u003d null)"
      },
      {
        "lineNumber": 1388,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1389,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 1390,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1391,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1392,
        "author": {
          "gitId": "-"
        },
        "content": "                RecorderTaskPane copyFromRecorderPane \u003d"
      },
      {
        "lineNumber": 1393,
        "author": {
          "gitId": "-"
        },
        "content": "                    GetPaneFromWindow(typeof(RecorderTaskPane), _copyFromWnd).Control as RecorderTaskPane;"
      },
      {
        "lineNumber": 1394,
        "author": {
          "gitId": "-"
        },
        "content": "                RecorderTaskPane activeRecorderPane \u003d GetActivePane(typeof(RecorderTaskPane)).Control as RecorderTaskPane;"
      },
      {
        "lineNumber": 1395,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1396,
        "author": {
          "gitId": "-"
        },
        "content": "                if (activeRecorderPane \u003d\u003d null ||"
      },
      {
        "lineNumber": 1397,
        "author": {
          "gitId": "-"
        },
        "content": "                    copyFromRecorderPane \u003d\u003d null)"
      },
      {
        "lineNumber": 1398,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1399,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 1400,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1401,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1402,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPoint.SlideRange slideRange \u003d selection.SlideRange;"
      },
      {
        "lineNumber": 1403,
        "author": {
          "gitId": "-"
        },
        "content": "                int oriSlide \u003d 0;"
      },
      {
        "lineNumber": 1404,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1405,
        "author": {
          "gitId": "-"
        },
        "content": "                foreach (object sld in slideRange)"
      },
      {
        "lineNumber": 1406,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1407,
        "author": {
          "gitId": "-"
        },
        "content": "                    PowerPointSlide oldSlide \u003d PowerPointSlide.FromSlideFactory(_copiedSlides[oriSlide]);"
      },
      {
        "lineNumber": 1408,
        "author": {
          "gitId": "-"
        },
        "content": "                    PowerPointSlide newSlide \u003d PowerPointSlide.FromSlideFactory(sld as PowerPoint.Slide);"
      },
      {
        "lineNumber": 1409,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1410,
        "author": {
          "gitId": "-"
        },
        "content": "                    activeRecorderPane.PasteSlideAudioAndScript(newSlide,"
      },
      {
        "lineNumber": 1411,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                copyFromRecorderPane.CopySlideAudioAndScript(oldSlide));"
      },
      {
        "lineNumber": 1412,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1413,
        "author": {
          "gitId": "-"
        },
        "content": "                    oriSlide++;"
      },
      {
        "lineNumber": 1414,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1415,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1416,
        "author": {
          "gitId": "-"
        },
        "content": "                // update the lists when all done"
      },
      {
        "lineNumber": 1417,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateRecorderPane(slideRange.Count, slideRange[1].SlideID);"
      },
      {
        "lineNumber": 1418,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1419,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1420,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1421,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AfterCopyEventHandler(PowerPoint.Selection selection)"
      },
      {
        "lineNumber": 1422,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1423,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 1424,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1425,
        "author": {
          "gitId": "-"
        },
        "content": "                _copyFromWnd \u003d Application.ActiveWindow;"
      },
      {
        "lineNumber": 1426,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1427,
        "author": {
          "gitId": "-"
        },
        "content": "                if (selection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionSlides)"
      },
      {
        "lineNumber": 1428,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1429,
        "author": {
          "gitId": "-"
        },
        "content": "                    _copiedSlides.Clear();"
      },
      {
        "lineNumber": 1430,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1431,
        "author": {
          "gitId": "-"
        },
        "content": "                    foreach (object sld in selection.SlideRange)"
      },
      {
        "lineNumber": 1432,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1433,
        "author": {
          "gitId": "-"
        },
        "content": "                        PowerPoint.Slide slide \u003d sld as PowerPoint.Slide;"
      },
      {
        "lineNumber": 1434,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1435,
        "author": {
          "gitId": "-"
        },
        "content": "                        _copiedSlides.Add(slide);"
      },
      {
        "lineNumber": 1436,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1437,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1438,
        "author": {
          "gitId": "-"
        },
        "content": "                    _copiedSlides.Sort((x, y) \u003d\u003e (x.SlideIndex - y.SlideIndex));"
      },
      {
        "lineNumber": 1439,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1440,
        "author": {
          "gitId": "-"
        },
        "content": "                else if (selection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionShapes)"
      },
      {
        "lineNumber": 1441,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1442,
        "author": {
          "gitId": "-"
        },
        "content": "                    _copiedShapes.Clear();"
      },
      {
        "lineNumber": 1443,
        "author": {
          "gitId": "-"
        },
        "content": "                    _previousSlideForCopyEvent \u003d Application.ActiveWindow.View.Slide as PowerPoint.Slide;"
      },
      {
        "lineNumber": 1444,
        "author": {
          "gitId": "-"
        },
        "content": "                    _previousPptName \u003d Application.ActivePresentation.Name;"
      },
      {
        "lineNumber": 1445,
        "author": {
          "gitId": "-"
        },
        "content": "                    foreach (object sh in selection.ShapeRange)"
      },
      {
        "lineNumber": 1446,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1447,
        "author": {
          "gitId": "-"
        },
        "content": "                        PowerPoint.Shape shape \u003d sh as PowerPoint.Shape;"
      },
      {
        "lineNumber": 1448,
        "author": {
          "gitId": "-"
        },
        "content": "                        _copiedShapes.Add(shape);"
      },
      {
        "lineNumber": 1449,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1450,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1451,
        "author": {
          "gitId": "-"
        },
        "content": "                    _copiedShapes.Sort((x, y) \u003d\u003e (x.Id - y.Id));"
      },
      {
        "lineNumber": 1452,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1453,
        "author": {
          "gitId": "-"
        },
        "content": "                Ribbon.RefreshRibbonControl(\"PasteToFillSlideButton\");"
      },
      {
        "lineNumber": 1454,
        "author": {
          "gitId": "-"
        },
        "content": "                Ribbon.RefreshRibbonControl(\"PasteToFitSlideButton\");"
      },
      {
        "lineNumber": 1455,
        "author": {
          "gitId": "-"
        },
        "content": "                Ribbon.RefreshRibbonControl(\"PasteAtOriginalPositionButton\");"
      },
      {
        "lineNumber": 1456,
        "author": {
          "gitId": "-"
        },
        "content": "                Ribbon.RefreshRibbonControl(\"ReplaceWithClipboardButton\");"
      },
      {
        "lineNumber": 1457,
        "author": {
          "gitId": "-"
        },
        "content": "                Ribbon.RefreshRibbonControl(\"PasteIntoGroupButton\");"
      },
      {
        "lineNumber": 1458,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1459,
        "author": {
          "gitId": "-"
        },
        "content": "            catch"
      },
      {
        "lineNumber": 1460,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1461,
        "author": {
          "gitId": "-"
        },
        "content": "                //TODO: log in ThisAddIn.cs"
      },
      {
        "lineNumber": 1462,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1463,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1464,
        "author": {
          "gitId": "-"
        },
        "content": "        # endregion"
      },
      {
        "lineNumber": 1465,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1466,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Tab Activate"
      },
      {
        "lineNumber": 1467,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1468,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SetupTabActivateHandler()"
      },
      {
        "lineNumber": 1469,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1470,
        "author": {
          "gitId": "-"
        },
        "content": "            _tabActivate +\u003d TabActivateEventHandler;"
      },
      {
        "lineNumber": 1471,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1472,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1473,
        "author": {
          "gitId": "-"
        },
        "content": "        private Native.WinEventDelegate _tabActivate;"
      },
      {
        "lineNumber": 1474,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1475,
        "author": {
          "gitId": "-"
        },
        "content": "        private IntPtr _eventHook \u003d IntPtr.Zero;"
      },
      {
        "lineNumber": 1476,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1477,
        "author": {
          "gitId": "-"
        },
        "content": "        //This handler is used to check, whether Home tab is enabled or not"
      },
      {
        "lineNumber": 1478,
        "author": {
          "gitId": "-"
        },
        "content": "        //After Shortcut (Alt + H + O) is sent to PowerPoint by method OpenPropertyWindowForOffice10,"
      },
      {
        "lineNumber": 1479,
        "author": {
          "gitId": "-"
        },
        "content": "        //if unsuccessful (Home tab is not enabled), EVENT_SYSTEM_MENUEND will be received"
      },
      {
        "lineNumber": 1480,
        "author": {
          "gitId": "-"
        },
        "content": "        //if successful   (Property window is open), EVENT_OBJECT_CREATE will be received"
      },
      {
        "lineNumber": 1481,
        "author": {
          "gitId": "-"
        },
        "content": "        //To check the events occurred, use AccEvent32.exe"
      },
      {
        "lineNumber": 1482,
        "author": {
          "gitId": "-"
        },
        "content": "        //Refer to MSAA - Event Constants:"
      },
      {
        "lineNumber": 1483,
        "author": {
          "gitId": "-"
        },
        "content": "        //http://msdn.microsoft.com/en-us/library/windows/desktop/dd318066(v\u003dvs.85).aspx"
      },
      {
        "lineNumber": 1484,
        "author": {
          "gitId": "-"
        },
        "content": "        void TabActivateEventHandler(IntPtr hook, uint eventType,"
      },
      {
        "lineNumber": 1485,
        "author": {
          "gitId": "-"
        },
        "content": "        IntPtr hwnd, int idObject, int child, uint thread, uint time)"
      },
      {
        "lineNumber": 1486,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1487,
        "author": {
          "gitId": "-"
        },
        "content": "            if (eventType \u003d\u003d (uint)Native.Event.EVENT_SYSTEM_MENUEND"
      },
      {
        "lineNumber": 1488,
        "author": {
          "gitId": "-"
        },
        "content": "                || eventType \u003d\u003d (uint)Native.Event.EVENT_OBJECT_CREATE)"
      },
      {
        "lineNumber": 1489,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1490,
        "author": {
          "gitId": "-"
        },
        "content": "                Native.UnhookWinEvent(_eventHook);"
      },
      {
        "lineNumber": 1491,
        "author": {
          "gitId": "-"
        },
        "content": "                _eventHook \u003d IntPtr.Zero;"
      },
      {
        "lineNumber": 1492,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1493,
        "author": {
          "gitId": "-"
        },
        "content": "            if (eventType \u003d\u003d (uint)Native.Event.EVENT_SYSTEM_MENUEND)"
      },
      {
        "lineNumber": 1494,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1495,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(CommonText.ErrorTabActivate, CommonText.ErrorTabActivateTitle);"
      },
      {
        "lineNumber": 1496,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1497,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1498,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1499,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 1500,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1501,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Double Click to Open Property Window"
      },
      {
        "lineNumber": 1502,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string ShortcutAltHO \u003d \"%h%o\";"
      },
      {
        "lineNumber": 1503,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1504,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CommandOpenBackgroundFormat \u003d 0x8F;"
      },
      {
        "lineNumber": 1505,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1506,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool _isInSlideShow;"
      },
      {
        "lineNumber": 1507,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1508,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SetupAfterCopyPasteHandler()"
      },
      {
        "lineNumber": 1509,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1510,
        "author": {
          "gitId": "-"
        },
        "content": "            PPCopy.AfterCopy +\u003d AfterCopyEventHandler;"
      },
      {
        "lineNumber": 1511,
        "author": {
          "gitId": "-"
        },
        "content": "            PPCopy.AfterPaste +\u003d AfterPasteRecorderEventHandler;"
      },
      {
        "lineNumber": 1512,
        "author": {
          "gitId": "-"
        },
        "content": "            PPCopy.AfterPaste +\u003d AfterPasteEventHandler;"
      },
      {
        "lineNumber": 1513,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1514,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1515,
        "author": {
          "gitId": "-"
        },
        "content": "        private readonly List\u003cPowerPoint.Shape\u003e _copiedShapes \u003d new List\u003cPowerPoint.Shape\u003e();"
      },
      {
        "lineNumber": 1516,
        "author": {
          "gitId": "-"
        },
        "content": "        private readonly List\u003cPowerPoint.Slide\u003e _copiedSlides \u003d new List\u003cPowerPoint.Slide\u003e();"
      },
      {
        "lineNumber": 1517,
        "author": {
          "gitId": "-"
        },
        "content": "        private PowerPoint.Slide _previousSlideForCopyEvent;"
      },
      {
        "lineNumber": 1518,
        "author": {
          "gitId": "-"
        },
        "content": "        private string _previousPptName;"
      },
      {
        "lineNumber": 1519,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1520,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SetupDoubleClickHandler()"
      },
      {
        "lineNumber": 1521,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1522,
        "author": {
          "gitId": "-"
        },
        "content": "            PPMouse.DoubleClick +\u003d DoubleClickEventHandler;"
      },
      {
        "lineNumber": 1523,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1524,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1525,
        "author": {
          "gitId": "-"
        },
        "content": "        private void DoubleClickEventHandler(PowerPoint.Selection selection)"
      },
      {
        "lineNumber": 1526,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1527,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 1528,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1529,
        "author": {
          "gitId": "-"
        },
        "content": "                if (selection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionNone)"
      },
      {
        "lineNumber": 1530,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1531,
        "author": {
          "gitId": "-"
        },
        "content": "                    TrySelectTransparentShape();"
      },
      {
        "lineNumber": 1532,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1533,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1534,
        "author": {
          "gitId": "-"
        },
        "content": "                if (selection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionShapes)"
      },
      {
        "lineNumber": 1535,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1536,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (IsApplicationVersion2010())"
      },
      {
        "lineNumber": 1537,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1538,
        "author": {
          "gitId": "-"
        },
        "content": "                        OpenPropertyWindowForOffice10();"
      },
      {
        "lineNumber": 1539,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1540,
        "author": {
          "gitId": "-"
        },
        "content": "                    else"
      },
      {
        "lineNumber": 1541,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1542,
        "author": {
          "gitId": "-"
        },
        "content": "                        OpenPropertyWindowForOffice13OrHigher(selection);"
      },
      {
        "lineNumber": 1543,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1544,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1545,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1546,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (COMException e)"
      },
      {
        "lineNumber": 1547,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1548,
        "author": {
          "gitId": "-"
        },
        "content": "                string logText \u003d \"DoubleClickEventHandler\" + \": \" + e.Message + \": \" + e.StackTrace;"
      },
      {
        "lineNumber": 1549,
        "author": {
          "gitId": "-"
        },
        "content": "                Trace.TraceError(DateTime.Now.ToString(\"yyyyMMddHHmmss\") + \": \" + logText);"
      },
      {
        "lineNumber": 1550,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1551,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1552,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1553,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TrySelectTransparentShape()"
      },
      {
        "lineNumber": 1554,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1555,
        "author": {
          "gitId": "-"
        },
        "content": "            if (PowerPointCurrentPresentationInfo.CurrentSlide \u003d\u003d null)"
      },
      {
        "lineNumber": 1556,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1557,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 1558,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1559,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1560,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Shape overlappingShape \u003d null;"
      },
      {
        "lineNumber": 1561,
        "author": {
          "gitId": "-"
        },
        "content": "            int overlappingShapeZIndex \u003d -1;"
      },
      {
        "lineNumber": 1562,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1563,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Shapes shapesInCurrentSlide \u003d PowerPointCurrentPresentationInfo.CurrentSlide.Shapes;"
      },
      {
        "lineNumber": 1564,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (PowerPoint.Shape shape in shapesInCurrentSlide)"
      },
      {
        "lineNumber": 1565,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1566,
        "author": {
          "gitId": "-"
        },
        "content": "                if (IsMouseWithinShape(shape)"
      },
      {
        "lineNumber": 1567,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 shape.ZOrderPosition \u003e overlappingShapeZIndex)"
      },
      {
        "lineNumber": 1568,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1569,
        "author": {
          "gitId": "-"
        },
        "content": "                    overlappingShape \u003d shape;"
      },
      {
        "lineNumber": 1570,
        "author": {
          "gitId": "-"
        },
        "content": "                    overlappingShapeZIndex \u003d shape.ZOrderPosition;"
      },
      {
        "lineNumber": 1571,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1572,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1573,
        "author": {
          "gitId": "-"
        },
        "content": "            if (overlappingShape !\u003d null \u0026\u0026"
      },
      {
        "lineNumber": 1574,
        "author": {
          "gitId": "-"
        },
        "content": "                overlappingShape.Visible \u003d\u003d Office.MsoTriState.msoTrue)"
      },
      {
        "lineNumber": 1575,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1576,
        "author": {
          "gitId": "-"
        },
        "content": "                overlappingShape.Select();"
      },
      {
        "lineNumber": 1577,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1578,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1579,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1580,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool IsMouseWithinShape(PowerPoint.Shape sh)"
      },
      {
        "lineNumber": 1581,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1582,
        "author": {
          "gitId": "-"
        },
        "content": "            float x \u003d Cursor.Position.X;"
      },
      {
        "lineNumber": 1583,
        "author": {
          "gitId": "-"
        },
        "content": "            float y \u003d Cursor.Position.Y;"
      },
      {
        "lineNumber": 1584,
        "author": {
          "gitId": "-"
        },
        "content": "            int left \u003d Application.ActiveWindow.PointsToScreenPixelsX(sh.Left);"
      },
      {
        "lineNumber": 1585,
        "author": {
          "gitId": "-"
        },
        "content": "            int top \u003d Application.ActiveWindow.PointsToScreenPixelsY(sh.Top);"
      },
      {
        "lineNumber": 1586,
        "author": {
          "gitId": "-"
        },
        "content": "            int right \u003d Application.ActiveWindow.PointsToScreenPixelsX(sh.Left + sh.Width);"
      },
      {
        "lineNumber": 1587,
        "author": {
          "gitId": "-"
        },
        "content": "            int bottom \u003d Application.ActiveWindow.PointsToScreenPixelsY(sh.Top + sh.Height);"
      },
      {
        "lineNumber": 1588,
        "author": {
          "gitId": "-"
        },
        "content": "            return x \u003e left"
      },
      {
        "lineNumber": 1589,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 x \u003c right"
      },
      {
        "lineNumber": 1590,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 y \u003e top"
      },
      {
        "lineNumber": 1591,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 y \u003c bottom;"
      },
      {
        "lineNumber": 1592,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1593,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1594,
        "author": {
          "gitId": "-"
        },
        "content": "        //For office 2013 or Higher version:"
      },
      {
        "lineNumber": 1595,
        "author": {
          "gitId": "-"
        },
        "content": "        //Open Background Format window, then selecting the shape will"
      },
      {
        "lineNumber": 1596,
        "author": {
          "gitId": "-"
        },
        "content": "        //convert the window to Property window"
      },
      {
        "lineNumber": 1597,
        "author": {
          "gitId": "-"
        },
        "content": "        private void OpenPropertyWindowForOffice13OrHigher(PowerPoint.Selection selection)"
      },
      {
        "lineNumber": 1598,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1599,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!_isInSlideShow)"
      },
      {
        "lineNumber": 1600,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1601,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPoint.ShapeRange selectedShapes \u003d selection.ShapeRange;"
      },
      {
        "lineNumber": 1602,
        "author": {
          "gitId": "-"
        },
        "content": "                Native.SendMessage("
      },
      {
        "lineNumber": 1603,
        "author": {
          "gitId": "-"
        },
        "content": "                    Process.GetCurrentProcess().MainWindowHandle,"
      },
      {
        "lineNumber": 1604,
        "author": {
          "gitId": "-"
        },
        "content": "                    (uint)Native.Message.WM_COMMAND,"
      },
      {
        "lineNumber": 1605,
        "author": {
          "gitId": "-"
        },
        "content": "                    new IntPtr(CommandOpenBackgroundFormat),"
      },
      {
        "lineNumber": 1606,
        "author": {
          "gitId": "-"
        },
        "content": "                    IntPtr.Zero);"
      },
      {
        "lineNumber": 1607,
        "author": {
          "gitId": "-"
        },
        "content": "                selectedShapes.Select();"
      },
      {
        "lineNumber": 1608,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1609,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1610,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1611,
        "author": {
          "gitId": "-"
        },
        "content": "        //For office 2010 (in office 2013, this method has bad user exp)"
      },
      {
        "lineNumber": 1612,
        "author": {
          "gitId": "-"
        },
        "content": "        //Use hotkey (Alt - H - O) to activate Property window"
      },
      {
        "lineNumber": 1613,
        "author": {
          "gitId": "-"
        },
        "content": "        private void OpenPropertyWindowForOffice10()"
      },
      {
        "lineNumber": 1614,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1615,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 1616,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1617,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!_isInSlideShow)"
      },
      {
        "lineNumber": 1618,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1619,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (_eventHook \u003d\u003d IntPtr.Zero)"
      },
      {
        "lineNumber": 1620,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1621,
        "author": {
          "gitId": "-"
        },
        "content": "                        //Check whether Home tab is enabled or not"
      },
      {
        "lineNumber": 1622,
        "author": {
          "gitId": "-"
        },
        "content": "                        _eventHook \u003d Native.SetWinEventHook("
      },
      {
        "lineNumber": 1623,
        "author": {
          "gitId": "-"
        },
        "content": "                            (uint)Native.Event.EVENT_SYSTEM_MENUEND,"
      },
      {
        "lineNumber": 1624,
        "author": {
          "gitId": "-"
        },
        "content": "                            (uint)Native.Event.EVENT_OBJECT_CREATE,"
      },
      {
        "lineNumber": 1625,
        "author": {
          "gitId": "-"
        },
        "content": "                            IntPtr.Zero,"
      },
      {
        "lineNumber": 1626,
        "author": {
          "gitId": "-"
        },
        "content": "                            _tabActivate,"
      },
      {
        "lineNumber": 1627,
        "author": {
          "gitId": "-"
        },
        "content": "                            (uint)Process.GetCurrentProcess().Id,"
      },
      {
        "lineNumber": 1628,
        "author": {
          "gitId": "-"
        },
        "content": "                            0,"
      },
      {
        "lineNumber": 1629,
        "author": {
          "gitId": "-"
        },
        "content": "                            0);"
      },
      {
        "lineNumber": 1630,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1631,
        "author": {
          "gitId": "-"
        },
        "content": "                    SendKeys.Send(ShortcutAltHO);"
      },
      {
        "lineNumber": 1632,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1633,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1634,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (InvalidOperationException)"
      },
      {
        "lineNumber": 1635,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1636,
        "author": {
          "gitId": "-"
        },
        "content": "                // ignore exception"
      },
      {
        "lineNumber": 1637,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1638,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1639,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 1640,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1641,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SetupFunctionalTestChannels()"
      },
      {
        "lineNumber": 1642,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1643,
        "author": {
          "gitId": "-"
        },
        "content": "            _ftChannel \u003d new IpcChannel(\"PowerPointLabsFT\");"
      },
      {
        "lineNumber": 1644,
        "author": {
          "gitId": "-"
        },
        "content": "            ChannelServices.RegisterChannel(_ftChannel, false);"
      },
      {
        "lineNumber": 1645,
        "author": {
          "gitId": "-"
        },
        "content": "            RemotingConfiguration.RegisterWellKnownServiceType(typeof(PowerPointLabsFT),"
      },
      {
        "lineNumber": 1646,
        "author": {
          "gitId": "-"
        },
        "content": "                \"PowerPointLabsFT\", WellKnownObjectMode.Singleton);"
      },
      {
        "lineNumber": 1647,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1648,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1649,
        "author": {
          "gitId": "-"
        },
        "content": "        #region VSTO generated code"
      },
      {
        "lineNumber": 1650,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1651,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1652,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Required method for Designer support - do not modify"
      },
      {
        "lineNumber": 1653,
        "author": {
          "gitId": "-"
        },
        "content": "        /// the contents of this method with the code editor."
      },
      {
        "lineNumber": 1654,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1655,
        "author": {
          "gitId": "-"
        },
        "content": "        private void InternalStartup()"
      },
      {
        "lineNumber": 1656,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1657,
        "author": {
          "gitId": "-"
        },
        "content": "            Startup +\u003d ThisAddInStartup;"
      },
      {
        "lineNumber": 1658,
        "author": {
          "gitId": "-"
        },
        "content": "            Shutdown +\u003d ThisAddInShutdown;"
      },
      {
        "lineNumber": 1659,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1660,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1661,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 1662,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1663,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 21,
      "blewjy": 72,
      "-": 1570
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/TimerLab/TimerLabConstants.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.TimerLab"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    static class TimerLabConstants"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        public const double DefaultDisplayDuration \u003d 1.00;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        public const int DefaultDenomination \u003d 10;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public const bool DefaultCountdownSetting \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        public const int SizeStringLimit \u003d 3;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        public const float DefaultTimerWidth \u003d 600;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        public const float MinTimerWidth \u003d 100;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        public const float MaxTimerWidth \u003d 1000;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        public const float DefaultTimerHeight \u003d 50;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        public const float MinTimerHeight \u003d 10;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        public const float MaxTimerHeight \u003d 600;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        public const float DefaultMinutesLineMarkerWidth \u003d 4;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        public const float DefaultSecondsLineMarkerWidth \u003d 2;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        public const float DefaultTimeMarkerHeight \u003d 30;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        public const float DefaultTimeMarkerWidth \u003d 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        public const float DefaultSliderBodyWidth \u003d 4;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        public const float DefaultSliderHeadSize \u003d 20;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        public const int TransparencyTranparent \u003d 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        public const int Rotate180Degrees \u003d 180;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        public const float ColorChangeDuration \u003d 0.001f;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        public const int SecondsInMinute \u003d 60;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        public const int StartTime \u003d 0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        public const double FractionalDecrementOffset \u003d 0.60;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        public const double FractionalDecrementLowerBound \u003d 0.00;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        public const double FractionalIncrementOffset \u003d 0.99;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        public const double FractionalIncrementUpperBound \u003d 0.59;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ShapeId \u003d \"TimerLabShapeId\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string TimerBodyId \u003d \"TimerBody\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string TimerLineMarkerId \u003d \"TimerLineMarker\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string TimerLineMarkerGroupId \u003d \"TimerLineMarkerGroup\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string TimerTimeMarkerId \u003d \"TimerTimeMarker\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string TimerTimeMarkerGroupId \u003d \"TimerTimeMarkerGroup\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string TimerSliderHeadId \u003d \"TimerSliderHead\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string TimerSliderBodyId \u003d \"TimerSliderBody\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ErrorMessageOneTimerOnly \u003d \"Only one timer allowed per slide.\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 2,
      "-": 51
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/TimerLab/TimerLabPaneWPF.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Text.RegularExpressions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Controls;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Input;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPoint \u003d Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.TimerLab"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /// Interaction logic for TimerLabPaneWPF.xaml"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class TimerLabPaneWPF : UserControl"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        Shape timerBody \u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        Shape lineMarkerGroup \u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        Shape timeMarkerGroup \u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        Shape sliderHead \u003d null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        Shape sliderBody \u003d null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        public TimerLabPaneWPF()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Timer Properties"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        private int Duration()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            int duration \u003d TimerLabConstants.SecondsInMinute;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            if (DurationTextBox.Value !\u003d null)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                double value \u003d Math.Round(DurationTextBox.Value.Value, 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                int minutes \u003d (int)value;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                int seconds \u003d (int)(Math.Round(value - minutes, 2) * 100);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                duration \u003d (minutes * TimerLabConstants.SecondsInMinute) + seconds;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            return duration;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private bool Countdown()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            bool isCountdown \u003d TimerLabConstants.DefaultCountdownSetting;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (CountdownCheckBox.IsChecked.HasValue)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                isCountdown \u003d CountdownCheckBox.IsChecked.Value;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return isCountdown;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        private float TimerWidth()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            float width \u003d (float)WidthSlider.Value;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            return width;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        private float TimerHeight()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            float height \u003d (float)HeightSlider.Value;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            return height;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        private float DefaultTimerLeft(float slideWidth, float timerWidth)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            return (slideWidth - timerWidth) / 2;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        private float DefaultTimerTop(float slideHeight, float timerHeight)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            return (slideHeight - timerHeight) / 2;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        private int TimerBodyColor()"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            return GraphicsUtil.PackRgbInt(68, 84, 106);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        private int SliderColor()"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            return GraphicsUtil.PackRgbInt(247, 150, 70);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        private int TimeMarkerColor()"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            return GraphicsUtil.PackRgbInt(90, 90, 90);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        private int LineMarkerColor()"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            return GraphicsUtil.PackRgbInt(68, 114, 196);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Timer Creation"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void CreateBlocksTimer(int duration, float timerWidth, float timerHeight, float timerLeft, float timerTop, bool isCountdown)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            AddTimerBody(timerWidth, timerHeight, timerLeft, timerTop, TimerBodyColor());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            AddMarkers(duration, timerWidth, timerHeight, TimeMarkerColor(), LineMarkerColor(), isCountdown);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            AddSlider(duration, timerWidth, timerHeight, SliderColor(), SlideWidth());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Body"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AddTimerBody(float timerWidth, float timerHeight, float timerLeft, float timerTop, int timerBodyColor)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            timerBody \u003d this.GetCurrentSlide().Shapes.AddShape(Microsoft.Office.Core.MsoAutoShapeType.msoShapeRectangle,"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                timerLeft, timerTop, timerWidth, timerHeight);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            timerBody.Name \u003d TimerLabConstants.TimerBodyId;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            timerBody.Tags.Add(TimerLabConstants.ShapeId, TimerLabConstants.TimerBodyId);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            timerBody.Fill.ForeColor.RGB \u003d timerBodyColor;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            timerBody.Line.ForeColor.RGB \u003d timerBodyColor;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Markers"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void AddMarkers(int duration, float timerWidth, float timerHeight, int timeMarkerColor, int lineMarkerColor, bool isCountdown)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            if (duration \u003c\u003d TimerLabConstants.SecondsInMinute)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                AddSecondsMarker(duration, TimerLabConstants.DefaultDenomination, timerWidth, timerHeight, "
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                                TimerLabConstants.DefaultMinutesLineMarkerWidth, "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                                TimerLabConstants.DefaultTimeMarkerWidth, TimerLabConstants.DefaultTimeMarkerHeight,"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                                timeMarkerColor, lineMarkerColor, isCountdown);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "                AddMinutesMarker(duration, TimerLabConstants.DefaultDenomination, timerWidth, timerHeight,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                                TimerLabConstants.DefaultMinutesLineMarkerWidth,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                                TimerLabConstants.DefaultTimeMarkerWidth, TimerLabConstants.DefaultTimeMarkerHeight,"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                                timeMarkerColor, lineMarkerColor, isCountdown);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateMarkerPosition();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AddSecondsMarker(int duration, int denomination, float timerWidth, float timerHeight, "
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                                    float lineMarkerWidth, float timeMarkerWidth, float timeMarkerHeight,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                                    int timeMarkerColor, int lineMarkerColor, bool isCountdown)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e lineMarkers \u003d new List\u003cShape\u003e();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e timeMarkers \u003d new List\u003cShape\u003e();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            float widthPerSec \u003d timerWidth / duration;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            int currentMarker \u003d TimerLabConstants.StartTime;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            while (currentMarker \u003c\u003d duration) "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                // Get the marker text to be printed"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                String markerText \u003d isCountdown ? (duration - currentMarker).ToString() : currentMarker.ToString();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                // Add time marker"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                Shape timeMarker \u003d AddTimeMarker(currentMarker, widthPerSec, timerHeight, timeMarkerWidth, timeMarkerHeight, timeMarkerColor, markerText);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "                timeMarkers.Add(timeMarker);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                // Add line marker if it is not the start or end"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "                if (currentMarker !\u003d TimerLabConstants.StartTime \u0026\u0026 currentMarker !\u003d duration)"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "                    Shape lineMarker \u003d AddLineMarker(currentMarker, widthPerSec, timerHeight, "
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "                                                    TimerLabConstants.DefaultSecondsLineMarkerWidth, lineMarkerColor);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "                    lineMarkers.Add(lineMarker);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "                if (currentMarker \u003e\u003d duration)"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                currentMarker \u003d GetNextMarkerPosition(currentMarker, duration, denomination, isCountdown);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            lineMarkerGroup \u003d null;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "            if (lineMarkers.Count \u003d\u003d 1)"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "                lineMarkerGroup \u003d lineMarkers[0];"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (lineMarkers.Count \u003e 1)"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "                lineMarkerGroup \u003d GroupShapes(TimerLabConstants.TimerLineMarkerId, TimerLabConstants.TimerLineMarkerGroupId);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            timeMarkerGroup \u003d GroupShapes(TimerLabConstants.TimerTimeMarkerId, TimerLabConstants.TimerTimeMarkerGroupId);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AddMinutesMarker(int duration, int denomination, float timerWidth, float timerHeight, "
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "                                    float lineMarkerWidth, float timeMarkerWidth, float timeMarkerHeight, "
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                                    int timeMarkerColor, int lineMarkerColor, bool isCountdown)"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e lineMarkers \u003d new List\u003cShape\u003e();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e timeMarkers \u003d new List\u003cShape\u003e();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            float widthPerSec \u003d timerWidth / duration;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            int currentMarker \u003d TimerLabConstants.StartTime;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            while (currentMarker \u003c\u003d duration)"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                bool isStart \u003d currentMarker \u003d\u003d 0;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                bool isMinuteMark \u003d isCountdown ? (duration - currentMarker) % TimerLabConstants.SecondsInMinute \u003d\u003d 0 : currentMarker % TimerLabConstants.SecondsInMinute \u003d\u003d 0;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                bool isEnd \u003d currentMarker \u003d\u003d duration;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "                // Add time markers for start, every minute, and end"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                if (isStart || isMinuteMark || isEnd)"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "                    // Add time marker"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    Shape timeMarker \u003d AddMinuteTimeMarker(duration, currentMarker, widthPerSec, timerHeight, timeMarkerWidth, timeMarkerHeight, timeMarkerColor, isCountdown);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "                    timeMarkers.Add(timeMarker);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "                // Add line marker if it is not the start or end"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "                if (currentMarker !\u003d TimerLabConstants.StartTime \u0026\u0026 currentMarker !\u003d duration)"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "                    // Thicken the line if it is a minute marker"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    Shape lineMarker \u003d AddMinuteLineMarker(duration, currentMarker, widthPerSec, timerHeight, lineMarkerColor, isCountdown);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "                    lineMarkers.Add(lineMarker);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "                if (currentMarker \u003e\u003d duration)"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                currentMarker \u003d GetNextMarkerPosition(currentMarker, duration, denomination, isCountdown);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "            lineMarkerGroup \u003d GroupShapes(TimerLabConstants.TimerLineMarkerId, TimerLabConstants.TimerLineMarkerGroupId);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "            timeMarkerGroup \u003d GroupShapes(TimerLabConstants.TimerTimeMarkerId, TimerLabConstants.TimerTimeMarkerGroupId);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private int GetNextMarkerPosition(int currentMarker, int duration, int denomination, bool isCountdown)"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // If it\u0027s Countdown Timer and we are at the start, take into account specified durations that are not multiple of denomination"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (isCountdown \u0026\u0026 currentMarker \u003d\u003d 0 \u0026\u0026 duration % denomination !\u003d 0)"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return duration % denomination;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            else"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return Math.Min(currentMarker + denomination, duration);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private Shape AddMinuteTimeMarker(int duration, int currentMarker, float widthPerSec, float timerHeight,"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                                    float timeMarkerWidth, float timeMarkerHeight, int timeMarkerColor, bool isCountdown)"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // Get the marker text to be printed"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            int remainingDuration \u003d duration - currentMarker;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            String markerText \u003d isCountdown ? remainingDuration.ToString() : currentMarker.ToString();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Shape timeMarker \u003d AddTimeMarker(currentMarker, widthPerSec, timerHeight, timeMarkerWidth, timeMarkerHeight, timeMarkerColor, markerText);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (!isCountdown)"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                int remainingSeconds \u003d currentMarker % TimerLabConstants.SecondsInMinute;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                if (currentMarker \u003d\u003d duration \u0026\u0026 remainingSeconds !\u003d 0)"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    timeMarker.TextFrame.TextRange.Text \u003d (currentMarker / TimerLabConstants.SecondsInMinute).ToString() +"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                                                            \".\" + remainingSeconds.ToString(\"D2\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                else"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    timeMarker.TextFrame.TextRange.Text \u003d (currentMarker / TimerLabConstants.SecondsInMinute).ToString();"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            else"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                int leftoverSeconds \u003d remainingDuration % TimerLabConstants.SecondsInMinute;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                if (currentMarker \u003d\u003d 0 \u0026\u0026 leftoverSeconds !\u003d 0)"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    timeMarker.TextFrame.TextRange.Text \u003d (remainingDuration / TimerLabConstants.SecondsInMinute).ToString() +"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                                                            \".\" + leftoverSeconds.ToString(\"D2\");"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                else"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    timeMarker.TextFrame.TextRange.Text \u003d (remainingDuration / TimerLabConstants.SecondsInMinute).ToString();"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return timeMarker;"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private Shape AddMinuteLineMarker(int duration, int currentMarker, float widthPerSec, float timerHeight, "
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                                          int lineMarkerColor, bool isCountdown)"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            bool isMinuteMarker \u003d isCountdown ? ((duration - currentMarker) % TimerLabConstants.SecondsInMinute \u003d\u003d 0) :"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                                                         (currentMarker % TimerLabConstants.SecondsInMinute \u003d\u003d 0);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            float markerLineWeight \u003d isMinuteMarker ? TimerLabConstants.DefaultMinutesLineMarkerWidth :"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                                                        TimerLabConstants.DefaultSecondsLineMarkerWidth;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Shape lineMarker \u003d AddLineMarker(currentMarker, widthPerSec, timerHeight, markerLineWeight, lineMarkerColor);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return lineMarker;"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "        private Shape AddTimeMarker(int currentMarker, float widthPerSec, float timerHeight, "
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                                    float timeMarkerWidth, float timeMarkerHeight, int timeMarkerColor, string markerText)"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape timeMarker \u003d this.GetCurrentSlide().Shapes.AddShape(Microsoft.Office.Core.MsoAutoShapeType.msoShapeRectangle,"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                    currentMarker * widthPerSec, 0, "
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                    timeMarkerWidth, timeMarkerHeight);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "            timeMarker.Name \u003d TimerLabConstants.TimerTimeMarkerId + markerText;"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "            timeMarker.Tags.Add(TimerLabConstants.ShapeId, TimerLabConstants.TimerTimeMarkerId);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "            timeMarker.TextFrame.WordWrap \u003d Microsoft.Office.Core.MsoTriState.msoFalse;"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "            timeMarker.Fill.Transparency \u003d TimerLabConstants.TransparencyTranparent;"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "            timeMarker.Line.Transparency \u003d TimerLabConstants.TransparencyTranparent;"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "            timeMarker.TextFrame.TextRange.Font.Color.RGB \u003d timeMarkerColor;"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "            timeMarker.TextFrame.TextRange.Text \u003d markerText;"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "            return timeMarker;"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "        private Shape AddLineMarker(int currentMarker, float widthPerSec, float timerHeight, float lineWeight, int lineMarkerColor)"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "            string markerText \u003d currentMarker.ToString();"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "            float beginX \u003d currentMarker * widthPerSec;"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "            float beginY \u003d 0;"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "            float endX \u003d currentMarker * widthPerSec;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "            float endY \u003d timerHeight;"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape lineMarker \u003d this.GetCurrentSlide().Shapes.AddLine(beginX, beginY, endX, endY);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "            lineMarker.Name \u003d TimerLabConstants.TimerLineMarkerId + markerText;"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "            lineMarker.Tags.Add(TimerLabConstants.ShapeId, TimerLabConstants.TimerLineMarkerId);"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "            lineMarker.Line.Weight \u003d lineWeight;"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "            lineMarker.Line.ForeColor.RGB \u003d lineMarkerColor;"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "            return lineMarker;"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Slider"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AddSlider(int duration, float timerWidth, float timerHeight, int sliderColor, float slideWidth)"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderHead \u003d this.GetCurrentSlide().Shapes.AddShape(Microsoft.Office.Core.MsoAutoShapeType.msoShapeIsoscelesTriangle,"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                0, 0, "
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                TimerLabConstants.DefaultSliderHeadSize, "
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                TimerLabConstants.DefaultSliderHeadSize);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderHead.Name \u003d TimerLabConstants.TimerSliderHeadId;"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderHead.Tags.Add(TimerLabConstants.ShapeId, TimerLabConstants.TimerSliderHeadId);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderHead.Rotation \u003d TimerLabConstants.Rotate180Degrees;"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderHead.Fill.ForeColor.RGB \u003d sliderColor;"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderHead.Line.Transparency \u003d TimerLabConstants.TransparencyTranparent;"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderBody \u003d this.GetCurrentSlide().Shapes.AddShape(Microsoft.Office.Core.MsoAutoShapeType.msoShapeRectangle,"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                0, 0, "
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                TimerLabConstants.DefaultSliderBodyWidth, "
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                timerHeight);"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderBody.Name \u003d TimerLabConstants.TimerSliderBodyId;"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderBody.Tags.Add(TimerLabConstants.ShapeId, TimerLabConstants.TimerSliderBodyId);"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderBody.Fill.ForeColor.RGB \u003d sliderColor;"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderBody.Line.Transparency \u003d TimerLabConstants.TransparencyTranparent;"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateSliderPosition();"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "            // Add slider animations"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "            AddSliderMotionEffect(sliderHead, duration, timerWidth, slideWidth, PowerPoint.MsoAnimTriggerType.msoAnimTriggerOnPageClick);"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "            AddSliderMotionEffect(sliderBody, duration, timerWidth, slideWidth, PowerPoint.MsoAnimTriggerType.msoAnimTriggerWithPrevious);"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "            AddSliderEndEffect(sliderHead, PowerPoint.MsoAnimTriggerType.msoAnimTriggerAfterPrevious);"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "            AddSliderEndEffect(sliderBody, PowerPoint.MsoAnimTriggerType.msoAnimTriggerWithPrevious);"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AddSliderMotionEffect(Shape shape, int duration, float timerWidth, float slideWidth, PowerPoint.MsoAnimTriggerType trigger)"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Effect sliderMotionEffect \u003d this.GetCurrentSlide().TimeLine.MainSequence.AddEffect("
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "                    shape,"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "                    PowerPoint.MsoAnimEffect.msoAnimEffectPathRight, "
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "                    PowerPoint.MsoAnimateByLevel.msoAnimateLevelNone, "
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "                    trigger);"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.AnimationBehavior motion \u003d sliderMotionEffect.Behaviors[1];"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "            float end \u003d timerWidth / slideWidth;"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "            motion.MotionEffect.Path \u003d \"M 0 0 L \" + end + \" 0 E\";"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderMotionEffect.Timing.Duration \u003d duration;"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderMotionEffect.Timing.SmoothStart \u003d Microsoft.Office.Core.MsoTriState.msoFalse;"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderMotionEffect.Timing.SmoothEnd \u003d Microsoft.Office.Core.MsoTriState.msoFalse;"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AddSliderEndEffect(Shape shape, PowerPoint.MsoAnimTriggerType trigger)"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Effect sliderEndEffect \u003d this.GetCurrentSlide().TimeLine.MainSequence.AddEffect("
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "                    shape,"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "                    PowerPoint.MsoAnimEffect.msoAnimEffectDarken, "
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "                    PowerPoint.MsoAnimateByLevel.msoAnimateLevelNone,"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "                    trigger);"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderEndEffect.Timing.Duration \u003d TimerLabConstants.ColorChangeDuration;"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Controls"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Create Button"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CreateButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "            // check if timer is already created"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "            if (FindTimer())"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "                ReformMissingComponents();"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateMarkerPosition();"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateSliderPosition();"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "                WidthTextBox.Text \u003d Math.Round(timerBody.Width).ToString();"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "                HeightTextBox.Text \u003d Math.Round(timerBody.Height).ToString();"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "                ShowErrorMessageBox(TimerLabConstants.ErrorMessageOneTimerOnly);"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "                // Properties"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "                int duration \u003d Duration();"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                bool isCountdown \u003d Countdown();"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "                float timerWidth \u003d TimerWidth();"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "                float timerHeight \u003d TimerHeight();"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "                // Position"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "                float timerLeft \u003d DefaultTimerLeft(SlideWidth(), timerWidth);"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "                float timerTop \u003d DefaultTimerTop(SlideHeight(), timerHeight);"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                CreateBlocksTimer(duration, timerWidth, timerHeight, timerLeft, timerTop, isCountdown);"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Duration Control"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "        private void DurationTextBox_ValueDecremented(object sender, "
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "            MahApps.Metro.Controls.NumericUpDownChangedRoutedEventArgs args)"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "            if (DurationTextBox.Value \u003d\u003d null)"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "                DurationTextBox.Value \u003d TimerLabConstants.DefaultDisplayDuration;"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "            double value \u003d Math.Round(DurationTextBox.Value.Value, 2);"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "            int integerPart \u003d (int)value;"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "            double fractionalPart \u003d value - integerPart;"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "            if (Math.Round(fractionalPart, 2) \u003d\u003d TimerLabConstants.FractionalDecrementLowerBound)"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "                DurationTextBox.Value \u003d (integerPart - 1) + TimerLabConstants.FractionalDecrementOffset;"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "        private void DurationTextBox_ValueIncremented(object sender, "
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "            MahApps.Metro.Controls.NumericUpDownChangedRoutedEventArgs args)"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "            if (DurationTextBox.Value \u003d\u003d null)"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "                DurationTextBox.Value \u003d TimerLabConstants.DefaultDisplayDuration;"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "            double value \u003d Math.Round(DurationTextBox.Value.Value, 2);"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "            int integerPart \u003d (int)value;"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "            double fractionalPart \u003d value - integerPart;"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "            if (Math.Round(fractionalPart, 2) \u003d\u003d TimerLabConstants.FractionalIncrementUpperBound)"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "                DurationTextBox.Value \u003d integerPart + TimerLabConstants.FractionalIncrementOffset;"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "        private void DurationTextBox_LostFocus(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "            if (DurationTextBox.Value \u003d\u003d null)"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "            double value \u003d Math.Round(DurationTextBox.Value.Value, 2);"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "            int integerPart \u003d (int)value;"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "            double fractionalPart \u003d value - integerPart;"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "            if (Math.Round(fractionalPart, 2) \u003e TimerLabConstants.FractionalIncrementUpperBound)"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "                DurationTextBox.Value \u003d integerPart + 1;"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "            if (FindTimer())"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "                ReformMissingComponents();"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "                RecreateMarkers();"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "                AdjustZOrder();"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateSliderPosition();"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateSliderAnimationDuration();"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #region Countdown Control"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void CountdownCheckBox_StateChanged(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // CountdownCheckBox.isChecked can return null if checkbox is in indeterminate state in a 3-state checkbox (checked, unchecked, indeterminate)"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // In this application, the checkbox is only 2-state, but we guard against this because IsChecked returns a nullable boolean (bool?)"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (CountdownCheckBox.IsChecked \u003d\u003d null)"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            if (FindTimer())"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                ReformMissingComponents();"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                RecreateMarkers();"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                AdjustZOrder();"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                UpdateSliderPosition();"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                UpdateSliderAnimationDuration();"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Width Control"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "        private void WidthSlider_Loaded(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "            WidthSlider.Minimum \u003d TimerLabConstants.MinTimerWidth;"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "            WidthSlider.Maximum \u003d SlideWidth();"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "            WidthSlider.Value \u003d TimerLabConstants.DefaultTimerWidth;   "
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "        private void WidthSlider_ValueChanged(object sender, RoutedPropertyChangedEventArgs\u003cdouble\u003e e)"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "            // update text box value"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "            float value \u003d (float)WidthSlider.Value;"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "            WidthTextBox.Text \u003d ((int)value).ToString();"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "            // update timer dimensions"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "            if (FindTimer())"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "                ReformMissingComponents();"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "                "
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "                float increment \u003d value - timerBody.Width;"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "                timerBody.Left \u003d NewPosition(timerBody.Left, increment);"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "                timerBody.Width \u003d timerBody.Width + increment;"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateMarkerPositionX();"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateSliderPositionX();"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "        private void WidthTextBox_Loaded(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "            WidthTextBox.Text \u003d TimerLabConstants.DefaultTimerWidth.ToString();"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "        private void WidthTextBox_PreviewTextInput(object sender, TextCompositionEventArgs e)"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "            e.Handled \u003d !IsNumbersOnly(e.Text);"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "        private void WidthTextBox_TextBoxPasting(object sender, DataObjectPastingEventArgs e)"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "            if (e.DataObject.GetDataPresent(typeof(String)))"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "                String text \u003d (String)e.DataObject.GetData(typeof(String));"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!IsNumbersOnly(text))"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "                    e.CancelCommand();"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "                e.CancelCommand();"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "        private void WidthTextBox_LostFocus(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "            if (string.IsNullOrEmpty(WidthTextBox.Text))"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "                WidthTextBox.Text \u003d ((int)WidthSlider.Value).ToString();"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "            int value \u003d Convert.ToInt32(WidthTextBox.Text);"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "            value \u003d Math.Max(value, (int)TimerLabConstants.MinTimerWidth);"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "            value \u003d Math.Min(value, (int)SlideWidth());"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "            WidthTextBox.Text \u003d value.ToString();"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "            WidthSlider.Value \u003d value;"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "            // update timer dimensions"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "            if (FindTimer())"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "                ReformMissingComponents();"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Height Control"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "        private void HeightSlider_Loaded(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "            HeightSlider.Minimum \u003d TimerLabConstants.MinTimerHeight;"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "            HeightSlider.Maximum \u003d SlideHeight();"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "            HeightSlider.Value \u003d TimerLabConstants.DefaultTimerHeight;"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "        private void HeightSlider_ValueChanged(object sender, RoutedPropertyChangedEventArgs\u003cdouble\u003e e)"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "            // update text box value"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "            float value \u003d (float)HeightSlider.Value;"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "            HeightTextBox.Text \u003d ((int)value).ToString();"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "            // update timer dimensions"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "            if (FindTimer())"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "                ReformMissingComponents();"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "                float increment \u003d value - timerBody.Height;"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "                timerBody.Top \u003d NewPosition(timerBody.Top, increment);"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "                timerBody.Height \u003d timerBody.Height + increment;"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateMarkerPositionY();"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateSliderPositionY();"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "        private void HeightTextBox_Loaded(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "            HeightTextBox.Text \u003d TimerLabConstants.DefaultTimerHeight.ToString();"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "        private void HeightTextBox_PreviewTextInput(object sender, TextCompositionEventArgs e)"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "            e.Handled \u003d !IsNumbersOnly(e.Text);"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "        private void HeightTextBox_TextBoxPasting(object sender, DataObjectPastingEventArgs e)"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "            if (e.DataObject.GetDataPresent(typeof(String)))"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "                String text \u003d (String)e.DataObject.GetData(typeof(String));"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!IsNumbersOnly(text))"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "                    e.CancelCommand();"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "                e.CancelCommand();"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "        private void HeightTextBox_LostFocus(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "            if (string.IsNullOrEmpty(HeightTextBox.Text))"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "                HeightTextBox.Text \u003d ((int)HeightSlider.Value).ToString();"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "            int value \u003d Convert.ToInt32(HeightTextBox.Text);"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "            value \u003d Math.Max(value, (int)TimerLabConstants.MinTimerHeight);"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "            value \u003d Math.Min(value, (int)SlideHeight());"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "            HeightTextBox.Text \u003d value.ToString();"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "            HeightSlider.Value \u003d value;"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "            // update timer dimensions"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "            if (FindTimer())"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "                ReformMissingComponents();"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Timer Helper"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ReformMissingComponents()"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "            bool isTimerBodyRecreated \u003d ReformTimerBodyIfMissing();"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "            bool isMarkersRecreated \u003d ReformMarkersIfMissing();"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "            bool isSliderRecreated \u003d ReformSliderIfMissing();"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isTimerBodyRecreated || isMarkersRecreated || isSliderRecreated)"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "                AdjustZOrder();"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool ReformTimerBodyIfMissing()"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "            if (timerBody \u003d\u003d null)"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "                AddTimerBody(TimerWidth(), TimerHeight(), "
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "                            DefaultTimerLeft(SlideWidth(), TimerWidth()),"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "                            DefaultTimerTop(SlideHeight(), TimerHeight()), "
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "                            TimerBodyColor());"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "            timerBody.Rotation \u003d 0;"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool ReformMarkersIfMissing()"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "            if (lineMarkerGroup \u003d\u003d null || timeMarkerGroup \u003d\u003d null)"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "                RecreateMarkers();"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool ReformSliderIfMissing()"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "            if (sliderHead \u003d\u003d null || sliderBody \u003d\u003d null)"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "                RecreateSlider();"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "        private void RecreateMarkers()"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": "            // remove current markers"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "            int timeMarkerColor \u003d TimeMarkerColor();"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "            if (timeMarkerGroup !\u003d null)"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "                timeMarkerColor \u003d timeMarkerGroup.TextFrame.TextRange.Font.Color.RGB;"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": "                timeMarkerGroup.Delete();"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": "            int lineMarkerColor \u003d LineMarkerColor();"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "            if (lineMarkerGroup !\u003d null)"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": "                lineMarkerColor \u003d lineMarkerGroup.Line.ForeColor.RGB;"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "                lineMarkerGroup.Delete();"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "            // add new markers"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            AddMarkers(Duration(), timerBody.Width, timerBody.Height, timeMarkerColor, lineMarkerColor, Countdown());"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": "            timeMarkerGroup.TextFrame.TextRange.Font.Color.RGB \u003d timeMarkerColor;"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": "        private void RecreateSlider()"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "            int sliderColor \u003d SliderColor();"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "            // remove current Slider"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "            if (sliderHead !\u003d null)"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "                sliderColor \u003d sliderHead.Fill.ForeColor.RGB;"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "                sliderHead.Delete();"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "            if (sliderBody !\u003d null)"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "                sliderColor \u003d sliderBody.Fill.ForeColor.RGB;"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "                sliderBody.Delete();"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "            AddSlider(Duration(), timerBody.Width, timerBody.Height, sliderColor, SlideWidth());"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateMarkerPosition()"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateMarkerPositionX();"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateMarkerPositionY();"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateMarkerPositionX()"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": "            if (lineMarkerGroup !\u003d null)"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "                float widthPerSec \u003d timerBody.Width / Duration();"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": "                float lineSpacing \u003d TimerLabConstants.DefaultDenomination * widthPerSec;"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": "                int numOfLineMarkers \u003d (int)(Math.Ceiling((double)Duration() / TimerLabConstants.DefaultDenomination)) - 2;"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": "                lineMarkerGroup.Left \u003d timerBody.Left + lineSpacing;"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": "                lineMarkerGroup.Width \u003d numOfLineMarkers * lineSpacing;"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                // Countdown timers have inconsistent starting points, espeically when duration of the timer is not a multiple of the denomination (10 sec)"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                // So we need to take this into account by calculating the required space and resetting the lineMarkerGroup"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                // This is unlike the default timer where the starting offset is always the same (1 lineSpacing from left)"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                if (Countdown())"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    float requiredSpaceFromLeft \u003d timerBody.Width - lineSpacing - lineMarkerGroup.Width;"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    lineMarkerGroup.Left \u003d timerBody.Left + requiredSpaceFromLeft;"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "            timeMarkerGroup.Left \u003d timerBody.Left;"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": "            timeMarkerGroup.Width \u003d timerBody.Width;"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateMarkerPositionY()"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": "            if (lineMarkerGroup !\u003d null)"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "                lineMarkerGroup.Top \u003d timerBody.Top;"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "                lineMarkerGroup.Height \u003d timerBody.Height;"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "            timeMarkerGroup.Top \u003d timerBody.Top + timerBody.Height;"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateSliderPosition()"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateSliderPositionX();"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateSliderPositionY();"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateSliderPositionX()"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderHead.Left \u003d timerBody.Left - (TimerLabConstants.DefaultSliderHeadSize / 2);"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderBody.Left \u003d timerBody.Left - (TimerLabConstants.DefaultSliderBodyWidth / 2);"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateSliderAnimationPath();"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateSliderPositionY()"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderHead.Top \u003d timerBody.Top - (TimerLabConstants.DefaultSliderHeadSize / 2);"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderBody.Top \u003d timerBody.Top;"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderBody.Height \u003d timerBody.Height;"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateSliderAnimationDuration()"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (PowerPoint.Effect effect in this.GetCurrentSlide().TimeLine.MainSequence)"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": "                if (effect.EffectType \u003d\u003d PowerPoint.MsoAnimEffect.msoAnimEffectPathRight)"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (effect.Shape.Tags[TimerLabConstants.ShapeId].Equals(TimerLabConstants.TimerSliderBodyId) ||"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": "                        effect.Shape.Tags[TimerLabConstants.ShapeId].Equals(TimerLabConstants.TimerSliderHeadId))"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "                        effect.Timing.Duration \u003d Duration();"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateSliderAnimationPath()"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (PowerPoint.Effect effect in this.GetCurrentSlide().TimeLine.MainSequence)"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "                if (effect.EffectType \u003d\u003d PowerPoint.MsoAnimEffect.msoAnimEffectPathRight)"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (effect.Shape.Tags[TimerLabConstants.ShapeId].Equals(TimerLabConstants.TimerSliderBodyId) ||"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "                        effect.Shape.Tags[TimerLabConstants.ShapeId].Equals(TimerLabConstants.TimerSliderHeadId))"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": "                        float end \u003d timerBody.Width / SlideWidth();"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "                        effect.Behaviors[1].MotionEffect.Path \u003d \"M 0 0 L \" + end + \" 0 E\";"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AdjustZOrder()"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "            //Adjust z-order"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": "            if (lineMarkerGroup !\u003d null)"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": "                lineMarkerGroup.ZOrder(Microsoft.Office.Core.MsoZOrderCmd.msoBringToFront);"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "            timeMarkerGroup.ZOrder(Microsoft.Office.Core.MsoZOrderCmd.msoBringToFront);"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderHead.ZOrder(Microsoft.Office.Core.MsoZOrderCmd.msoBringToFront);"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderBody.ZOrder(Microsoft.Office.Core.MsoZOrderCmd.msoBringToFront);"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Shape Helper"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "-"
        },
        "content": "        private float NewPosition(float originalPosition, float objectSize)"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": "            return originalPosition - objectSize / 2;"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": "        private Shape GetLineMarkerGroup()"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape result \u003d GetShapeByName(TimerLabConstants.TimerLineMarkerGroupId);"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": "            if (result \u003d\u003d null)"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": "                result \u003d GetShapeByName(TimerLabConstants.TimerLineMarkerId);"
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": "        private Shape GetShapeByName(string name)"
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": "            return GetShapeByName(name, this.GetCurrentSlide().Shapes);"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": "        private Shape GetShapeByName(string name, dynamic shapes)"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Shape shape in shapes)"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "-"
        },
        "content": "                if (shape.Tags[TimerLabConstants.ShapeId].Equals(name))"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": "                    return shape;"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "-"
        },
        "content": "        private Shape GroupShapes(string shapeName, string groupName)"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": "            bool firstInGroup \u003d true;"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Shape shape in this.GetCurrentSlide().Shapes)"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": "                if (shape.Tags[TimerLabConstants.ShapeId].Equals(shapeName))"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (firstInGroup)"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "-"
        },
        "content": "                        shape.Select();"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "-"
        },
        "content": "                        firstInGroup \u003d false;"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "-"
        },
        "content": "                    else"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "-"
        },
        "content": "                        shape.Select(Microsoft.Office.Core.MsoTriState.msoFalse);"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape group \u003d this.GetCurrentSelection().ShapeRange.Group();"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "-"
        },
        "content": "            group.Name \u003d groupName;"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "-"
        },
        "content": "            group.Tags.Add(TimerLabConstants.ShapeId, groupName);"
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "-"
        },
        "content": "            return group;"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Validation Helper"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool FindTimer()"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "-"
        },
        "content": "            timerBody \u003d GetShapeByName(TimerLabConstants.TimerBodyId);"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "-"
        },
        "content": "            lineMarkerGroup \u003d GetLineMarkerGroup();"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "-"
        },
        "content": "            timeMarkerGroup \u003d GetShapeByName(TimerLabConstants.TimerTimeMarkerGroupId);"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderHead \u003d GetShapeByName(TimerLabConstants.TimerSliderHeadId);"
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderBody \u003d GetShapeByName(TimerLabConstants.TimerSliderBodyId);"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "-"
        },
        "content": "            if ((timerBody \u003d\u003d null) \u0026\u0026 (lineMarkerGroup \u003d\u003d null) \u0026\u0026"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "-"
        },
        "content": "                (timeMarkerGroup \u003d\u003d null) \u0026\u0026 (sliderHead \u003d\u003d null) \u0026\u0026 (sliderBody \u003d\u003d null))"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool IsNumbersOnly(string text)"
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "-"
        },
        "content": "            Regex regex \u003d new Regex(\"[0-9]+\");"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "-"
        },
        "content": "            return regex.IsMatch(text);"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Slide Dimensions"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "-"
        },
        "content": "        private float SlideWidth()"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "-"
        },
        "content": "            return this.GetCurrentPresentation().SlideWidth;"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "-"
        },
        "content": "        private float SlideHeight()"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "-"
        },
        "content": "            return this.GetCurrentPresentation().SlideHeight;"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Error Handling"
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ShowErrorMessageBox(string content)"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "-"
        },
        "content": "            MessageBox.Show(content, TextCollection.CommonText.ErrorTitle);"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 132,
      "-": 818
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/TooltipsLab/AddTextbox.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "﻿using Microsoft.Office.Core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "namespace PowerPointLabs.TooltipsLab"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    internal static class AddTextbox"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        public static void AddTextboxToCallout(PowerPointSlide currentSlide, Selection selection)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            if (!ShapeUtil.IsSelectionSingleShape(selection))"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            AddTextboxToCallout(currentSlide, selection.ShapeRange[1]);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        public static Shape AddTextboxToCallout(PowerPointSlide currentSlide, Shape callout)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            Shape textbox \u003d AddTextboxToSlide(currentSlide, callout.Left, callout.Top, callout.Width, callout.Height);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            string[] rangeArray \u003d new string[2];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            rangeArray[0] \u003d callout.Name;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            rangeArray[1] \u003d textbox.Name;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            Shape group \u003d currentSlide.Shapes.Range(rangeArray).Group();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            group.ZOrder(MsoZOrderCmd.msoSendBackward);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            textbox.Select(MsoTriState.msoTrue);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            return group;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        /// Text alignment is default to be centralized"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private static Shape AddTextboxToSlide(PowerPointSlide slide, float left, float top, float width, float height)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            Shape textbox \u003d slide.GetNativeSlide().Shapes.AddTextbox(MsoTextOrientation.msoTextOrientationHorizontal, left, top, width, height);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            textbox.TextFrame.TextRange.ParagraphFormat.Alignment \u003d PpParagraphAlignment.ppAlignCenter;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            textbox.TextFrame2.AutoSize \u003d MsoAutoSize.msoAutoSizeTextToFitShape;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            textbox.ZOrder(MsoZOrderCmd.msoBringForward);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            //Somehow without explicitly restating the variables, the textbox size will be wrong."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            textbox.Left \u003d left;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            textbox.Top \u003d top;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            textbox.Width \u003d width;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            textbox.Height \u003d height;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            return textbox;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 2,
      "YuPeiHenry": 51
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/TooltipsLab/AssignToolTip.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "using System.Windows.Forms;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "namespace PowerPointLabs.TooltipsLab"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    /// Assigns tooltip to shapes, follows the convention that the first shape is the trigger shape, the rest"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    /// of the shapes will be the callouts. All callout shapes will appear on first click of the trigger shape,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    /// and all will disappear on second click of the trigger shape."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    internal static class AssignTooltip"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        public static bool AddTriggerAnimation(PowerPointSlide currentSlide, Selection selection)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            ShapeRange selectedShapes \u003d selection.ShapeRange;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            if (selectedShapes.Count \u003c 2)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                MessageBox.Show(TooltipsLabText.ErrorLessThanTwoShapesSelected,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                    TooltipsLabText.ErrorTooltipsDialogTitle);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            Shape triggerShape \u003d selectedShapes[1];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            List\u003cShape\u003e shapesToAnimate \u003d GetShapesToAnimate(selectedShapes);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            AddTriggerAnimation(currentSlide, triggerShape, shapesToAnimate);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        public static void AddTriggerAnimation(PowerPointSlide currentSlide, Shape triggerShape, Shape calloutShape)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            List\u003cShape\u003e calloutShapeList \u003d new List\u003cShape\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            calloutShapeList.Add(calloutShape);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            AddTriggerAnimation(currentSlide, triggerShape, calloutShapeList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        private static void AddTriggerAnimation(PowerPointSlide currentSlide, Shape triggerShape, List\u003cShape\u003e newShapesToAnimate)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            TimeLine timeline \u003d currentSlide.TimeLine;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            // TODO: Get effect from settings"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            MsoAnimEffect fadeEffect \u003d MsoAnimEffect.msoAnimEffectFade;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            // Get the shapes that are already associated with trigger shape"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            List\u003cShape\u003e shapesToAnimate \u003d GetShapesInInteractiveSequenceWithAnimationsRemoved(currentSlide, triggerShape, newShapesToAnimate);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            Sequence sequence \u003d timeline.InteractiveSequences.Add();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            AddTriggerEffect(triggerShape, shapesToAnimate, fadeEffect, sequence);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        private static void AddTriggerEffect(Shape triggerShape, List\u003cShape\u003e shapesToAnimate, MsoAnimEffect effect, Sequence sequence)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            // Add Entrance Effect"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            for (int i \u003d 0; i \u003c shapesToAnimate.Count; i++)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                Shape animationShape \u003d shapesToAnimate[i];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                MsoAnimTriggerType triggerType;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                // The first shape will be triggered by the click to appear"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                if (i \u003d\u003d 0)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                    triggerType \u003d MsoAnimTriggerType.msoAnimTriggerOnShapeClick;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                    sequence.AddTriggerEffect(animationShape, effect, triggerType, triggerShape);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                // Rest of the shapes will appear with the first shape"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                else"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                    triggerType \u003d MsoAnimTriggerType.msoAnimTriggerWithPrevious;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                    sequence.AddEffect(shapesToAnimate[i], effect,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                        MsoAnimateByLevel.msoAnimateLevelNone, MsoAnimTriggerType.msoAnimTriggerWithPrevious);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            // Add Exit Effect to Shapes"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            for (int i \u003d 0; i \u003c shapesToAnimate.Count; i++)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                Shape animationShape \u003d shapesToAnimate[i];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                MsoAnimTriggerType triggerType;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                Effect effectInSequence;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                // The first shape will be triggered by the click to disappear"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                if (i \u003d\u003d 0)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                    triggerType \u003d MsoAnimTriggerType.msoAnimTriggerOnShapeClick;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                    effectInSequence \u003d sequence.AddTriggerEffect(animationShape, effect, triggerType, triggerShape);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                // Rest of the shapes will disappear with the first shape"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                else"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                    triggerType \u003d MsoAnimTriggerType.msoAnimTriggerWithPrevious;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                    effectInSequence \u003d sequence.AddEffect(shapesToAnimate[i], effect, "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                        MsoAnimateByLevel.msoAnimateLevelNone, MsoAnimTriggerType.msoAnimTriggerWithPrevious);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                effectInSequence.Exit \u003d Microsoft.Office.Core.MsoTriState.msoTrue;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        private static List\u003cShape\u003e GetShapesInInteractiveSequenceWithAnimationsRemoved(PowerPointSlide currentSlide, Shape triggerShape, List\u003cShape\u003e shapesToAnimate)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            Sequences sequences \u003d currentSlide.TimeLine.InteractiveSequences;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            // A set is used here so no duplicate shapes will be added"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            ISet\u003cShape\u003e shapesToAnimateSet \u003d new HashSet\u003cShape\u003e(shapesToAnimate);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            // Find the existing sequence that has the triggerShape"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d sequences.Count; i++)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                Sequence sequence \u003d sequences[i];"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                // Iterate from the back because of deletion"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                for (int j \u003d sequence.Count; j \u003e\u003d 1; j--)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                    Effect effect \u003d sequence[j];"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                    // A sequence is attached to a trigger shape. However we can only use the effect to find out"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                    // what is the trigger shape, thus we break when the first effect\u0027s trigger shape is not "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                    // what we are looking for and delete all effects from the sequence otherwise."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                    if (effect.Timing.TriggerShape \u003d\u003d triggerShape)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                        shapesToAnimateSet.Add(effect.Shape);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                        effect.Delete();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                    else"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            return new List\u003cShape\u003e(shapesToAnimateSet);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        private static List\u003cShape\u003e GetShapesToAnimate(ShapeRange selectedShapes)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            List\u003cShape\u003e animatedShapes \u003d new List\u003cShape\u003e();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            for (int i \u003d 2; i \u003c\u003d selectedShapes.Count; i++)"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "                animatedShapes.Add(selectedShapes[i]);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            return animatedShapes;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 147
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/TooltipsLab/CreateTooltip.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Windows.Forms;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPointLabs.Views;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using PowerPoint \u003d Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.TooltipsLab"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    internal static class CreateTooltip"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        // Generate a trigger shape directly in the center bottom position of the specified callout shape."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public static PowerPoint.Shape GenerateTriggerShapeWithReferenceCallout(PowerPointSlide currentSlide, PowerPoint.Shape callout)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            float left \u003d ShapeUtil.GetCenterPoint(callout).X - TooltipsLabConstants.TriggerShapeDefaultWidth / 2;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            float top \u003d ShapeUtil.GetBottom(callout) + TooltipsLabConstants.TriggerShapeAndCalloutSpacing;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PowerPoint.Shape triggerShape \u003d currentSlide.Shapes.AddShape("
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                Microsoft.Office.Core.MsoAutoShapeType.msoShapeOval, "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                left, "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                top, "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                TooltipsLabConstants.TriggerShapeDefaultWidth, "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                TooltipsLabConstants.TriggerShapeDefaultHeight);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return triggerShape;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public static PowerPoint.Shape GenerateCalloutWithReferenceTriggerShape(PowerPointSlide currentSlide, PowerPoint.Shape triggerShape)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            float midpointX \u003d ShapeUtil.GetMidpointX(triggerShape);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "blewjy"
        },
        "content": "           "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PowerPoint.Shape callout \u003d currentSlide.Shapes.AddShape("
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                Microsoft.Office.Core.MsoAutoShapeType.msoShapeRoundedRectangularCallout,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                midpointX - TooltipsLabConstants.CalloutShapeDefaultWidth/2 + (float)(TooltipsLabConstants.CalloutArrowheadHorizontalAdjustment * TooltipsLabConstants.CalloutShapeDefaultWidth),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                triggerShape.Top - (float)(TooltipsLabConstants.CalloutArrowheadVerticalAdjustment * TooltipsLabConstants.CalloutShapeDefaultHeight) - TooltipsLabConstants.TriggerShapeAndCalloutSpacing,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                TooltipsLabConstants.CalloutShapeDefaultWidth,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                TooltipsLabConstants.CalloutShapeDefaultHeight);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return callout;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public static PowerPoint.Shape GenerateTriggerShape(PowerPointSlide currentSlide)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PowerPoint.Shape triggerShape \u003d currentSlide.Shapes.AddShape("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                Microsoft.Office.Core.MsoAutoShapeType.msoShapeOval, "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                TooltipsLabConstants.TriggerShapeDefaultLeft, "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                TooltipsLabConstants.TriggerShapeDefaultTop, "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                TooltipsLabConstants.TriggerShapeDefaultWidth, "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                TooltipsLabConstants.TriggerShapeDefaultHeight);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return triggerShape;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 61
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/TooltipsLab/TooltipsLabConstants.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": "namespace PowerPointLabs.TooltipsLab"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": "{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    static class TooltipsLabConstants"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public const float TriggerShapeDefaultLeft \u003d 200;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public const float TriggerShapeDefaultTop \u003d 200;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public const float TriggerShapeDefaultHeight \u003d 25;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public const float TriggerShapeDefaultWidth \u003d 25;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public const float TriggerShapeAndCalloutSpacing \u003d 10;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public const float CalloutShapeDefaultHeight \u003d 100;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public const float CalloutShapeDefaultWidth \u003d 150;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        // Explanation for the choice of constants:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        // - 0.20833 is the horizontal percentage adjustment of the arrowhead of the callout."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        //   We position the callout with middle alignment to the trigger shape, then shift it"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        //   back to the right by 20.833% of the callout\u0027s width to align the arrowhead with the trigger shape."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        // - 1.125 is the vertical percentage adjustment of the arrowhead of the callout."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        //   Same explanation as the horizontal adjustment, just that this is for the height."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public const double CalloutArrowheadHorizontalAdjustment \u003d 0.20833;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public const double CalloutArrowheadVerticalAdjustment \u003d 1.125;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public const string AnimationPaneName \u003d \"AnimationCustom\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "blewjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "blewjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 28
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/Utils/FileDir.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.IO;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Linq;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.Utils"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class FileDir"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string FolderThumbnailFile \u003d \"Thumbs.db\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        # region Folder Operations"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        public static bool CopyFolder(string oldPath, string newPath)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "            bool copySuccess \u003d true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            // create subfolder during recursions"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Directory.Exists(newPath))"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                Directory.CreateDirectory(newPath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            // copy files in a folder first"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            string[] files \u003d Directory.GetFiles(oldPath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (string file in files)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                string name \u003d Path.GetFileName(file);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                // ignore thumb.db"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                if (name \u003d\u003d null ||"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                    name \u003d\u003d FolderThumbnailFile)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                string dest \u003d Path.Combine(newPath, name);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                try"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                    FileAttributes fileAttribute \u003d File.GetAttributes(file);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                    "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                    try"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                        File.SetAttributes(file, FileAttributes.Normal);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                    catch (Exception)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                    "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                    CopyFile(file, dest, fileAttribute);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                catch (Exception)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                    copySuccess \u003d false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            // then recursively copy contents in subfolders"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            string[] folders \u003d Directory.GetDirectories(oldPath);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (string folder in folders)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                string name \u003d Path.GetFileName(folder);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                if (name \u003d\u003d null)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                string dest \u003d Path.Combine(newPath, name);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                copySuccess \u003d copySuccess \u0026\u0026 CopyFolder(folder, dest);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            return copySuccess;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        public static bool DeleteFolder(string path)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            bool deleteSuccess \u003d true;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            // copy files in a folder first"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            string[] files \u003d Directory.GetFiles(path);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (string file in files)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                string name \u003d Path.GetFileName(file);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                if (name \u003d\u003d null)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                try"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                    DeleteFile(file);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                catch (Exception)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                    deleteSuccess \u003d false;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            string[] folders \u003d Directory.GetDirectories(path);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (string folder in folders)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                string name \u003d Path.GetFileName(folder);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                if (name \u003d\u003d null)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                deleteSuccess \u003d deleteSuccess \u0026\u0026 DeleteFolder(folder);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            if (deleteSuccess)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                try"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                    Directory.Delete(path);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                catch (Exception)"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                    deleteSuccess \u003d false;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            return deleteSuccess;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        public static bool IsDirectoryEmpty(string path)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            return !Directory.EnumerateFileSystemEntries(path).Any();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        public static bool MoveFolder(string oldPath, string newPath)"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            return CopyFolder(oldPath, newPath) \u0026\u0026 DeleteFolder(oldPath);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        public static string GetTemporaryPngFilePath()"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            string tempDirectory \u003d Path.GetTempPath();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Directory.CreateDirectory(tempDirectory);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            string randomFileName \u003d \"pptlabs_\" + Path.GetRandomFileName();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            string randomFilePath \u003d Path.Combine(tempDirectory, randomFileName);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return Path.ChangeExtension(randomFilePath, \"png\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        /// This function sets attribute of all files in a folder and its sub-folder "
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        /// to normal."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"path\"\u003eThe folder\u0027s location.\u003c/param\u003e"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void NormalizeFolder(string path)"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            // copy files in a folder first"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            string[] files \u003d Directory.GetFiles(path);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (string file in files)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "                File.SetAttributes(file, FileAttributes.Normal);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            // then recursively copy contents in subfolders"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            string[] folders \u003d Directory.GetDirectories(path);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (string folder in folders)"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "                NormalizeFolder(folder);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        # endregion"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        # region File Operations"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        /// This function is an integration of copy-without-attribute and copy-with-attribute."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        /// If fileAttribute is not set explicitly, the file is copying without attribute, else"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        /// the specified attribute will be set after the file has been copied."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sourcePath\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"destPath\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"fileAttribute\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void CopyFile(string sourcePath, string destPath,"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "                                        FileAttributes fileAttribute \u003d FileAttributes.Normal)"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!File.Exists(sourcePath))"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            File.Copy(sourcePath, destPath);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "            File.SetAttributes(destPath, fileAttribute);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void DeleteFile(string filePath)"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!File.Exists(filePath))"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "            File.SetAttributes(filePath, FileAttributes.Normal);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "            File.Delete(filePath);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        # endregion"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 10,
      "-": 200
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ZoomLab/AutoZoom.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Linq;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Views;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using Office \u003d Microsoft.Office.Core;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPoint \u003d Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ZoomLab"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    internal static class AutoZoom"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "#pragma warning disable 0618"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void AddDrillDownAnimation()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!IsSelectingShapes())"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            AddDrillDownAnimation(Globals.ThisAddIn.Application.ActiveWindow.Selection.ShapeRange[1],"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPointCurrentPresentationInfo.CurrentSlide);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void AddDrillDownAnimation(PowerPoint.Shape selectedShape, PowerPointSlide currentSlide)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointDrillDownSlide addedSlide;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            AddDrillDownAnimation(selectedShape, currentSlide, out addedSlide);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void AddDrillDownAnimation(PowerPoint.Shape selectedShape, PowerPointSlide currentSlide,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            out PowerPointDrillDownSlide addedSlide, bool includeAckSlide \u003d true, bool deletePreviouslyAdded \u003d true)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                if (currentSlide \u003d\u003d null || currentSlide.Index \u003d\u003d PowerPointPresentation.Current.SlideCount)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.Windows.Forms.MessageBox.Show(TextCollection.ZoomLabText.ErrorInvalidNextSlide, TextCollection.ZoomLabText.ErrorUnableToAddAnimationsCaption);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                    addedSlide \u003d null;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                //Pick up the border and shadow style, to be applied to zoomed shape"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                selectedShape.PickUp();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                PrepareZoomShape(currentSlide, ref selectedShape);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPointSlide nextSlide \u003d GetNextSlide(currentSlide, deletePreviouslyAdded);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPoint.Shape nextSlidePicture \u003d null, shapeToZoom \u003d null;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                currentSlide.HideIndicator();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                if (ZoomLabSettings.BackgroundZoomChecked)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                    nextSlidePicture \u003d GetNextSlidePictureWithBackground(currentSlide, nextSlide);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                    nextSlidePicture.Apply();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                    PrepareNextSlidePicture(currentSlide, selectedShape, ref nextSlidePicture);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                    addedSlide \u003d (PowerPointDrillDownSlide)currentSlide.CreateDrillDownSlide();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                    addedSlide.DeleteAllShapes();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                    nextSlidePicture.Copy();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                    shapeToZoom \u003d addedSlide.Shapes.Paste()[1];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                    addedSlide.DeleteShapeAnimations(shapeToZoom);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    PowerPoint.Shape backgroundShape \u003d AddSlideAsShape(currentSlide, addedSlide);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                    backgroundShape.Apply();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                    ShapeUtil.FitShapeToSlide(ref backgroundShape);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                    backgroundShape.ZOrder(Office.MsoZOrderCmd.msoSendBackward);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                    backgroundShape.Name \u003d \"PPTZoomInShape\" + DateTime.Now.ToString(\"yyyyMMddHHmmssffff\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                    addedSlide.PrepareForDrillDown();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                    addedSlide.AddDrillDownAnimationBackground(backgroundShape, shapeToZoom, nextSlidePicture);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                    PowerPoint.Shape pictureOnNextSlide \u003d null;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                    nextSlidePicture \u003d GetNextSlidePictureWithoutBackground(currentSlide, nextSlide, out pictureOnNextSlide);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                    nextSlidePicture.Apply();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                    PrepareNextSlidePicture(currentSlide, selectedShape, ref nextSlidePicture);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                    addedSlide \u003d (PowerPointDrillDownSlide)currentSlide.CreateDrillDownSlide();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                    addedSlide.DeleteAllShapes();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                    nextSlidePicture.Copy();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                    shapeToZoom \u003d addedSlide.Shapes.Paste()[1];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                    addedSlide.DeleteShapeAnimations(shapeToZoom);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    PowerPoint.Shape backgroundShape \u003d AddSlideAsShape(currentSlide, addedSlide);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                    backgroundShape.Apply();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                    ShapeUtil.FitShapeToSlide(ref backgroundShape);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                    backgroundShape.ZOrder(Office.MsoZOrderCmd.msoSendBackward);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                    backgroundShape.Name \u003d \"PPTZoomInShape\" + DateTime.Now.ToString(\"yyyyMMddHHmmssffff\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                    addedSlide.PrepareForDrillDown();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                    addedSlide.AddDrillDownAnimationNoBackground(backgroundShape, shapeToZoom, pictureOnNextSlide);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                    pictureOnNextSlide.Delete();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                currentSlide.ShowIndicator();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                Globals.ThisAddIn.Application.ActiveWindow.View.GotoSlide(addedSlide.Index);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "                Globals.ThisAddIn.Application.CommandBars.ExecuteMso(\"AnimationPreview\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                if (includeAckSlide)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                    PowerPointPresentation.Current.AddAckSlide();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.LogException(e, \"AddDrillDownAnimation\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                ErrorDialogBox.ShowDialog(\"Error when adding drill down animation\", \"An error occurred when adding drill down animation.\", e);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                throw;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void AddStepBackAnimation()"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!IsSelectingShapes())"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            AddStepBackAnimation(Globals.ThisAddIn.Application.ActiveWindow.Selection.ShapeRange[1],"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPointCurrentPresentationInfo.CurrentSlide);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void AddStepBackAnimation(PowerPoint.Shape selectedShape, PowerPointSlide currentSlide)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointStepBackSlide addedSlide;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            AddStepBackAnimation(selectedShape, currentSlide, out addedSlide);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void AddStepBackAnimation(PowerPoint.Shape selectedShape, PowerPointSlide currentSlide,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            out PowerPointStepBackSlide addedSlide, bool includeAckSlide \u003d true, bool deletePreviouslyAdded \u003d true)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                if (currentSlide \u003d\u003d null || currentSlide.Index \u003d\u003d 1)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.Windows.Forms.MessageBox.Show(TextCollection.ZoomLabText.ErrorInvalidPreviousSlide, TextCollection.ZoomLabText.ErrorUnableToAddAnimationsCaption);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                    addedSlide \u003d null;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "                //Pick up the border and shadow style, to be applied to zoomed shape"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "                selectedShape.PickUp();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "                PrepareZoomShape(currentSlide, ref selectedShape);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPointSlide previousSlide \u003d GetPreviousSlide(currentSlide, deletePreviouslyAdded);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPoint.Shape previousSlidePicture \u003d null, shapeToZoom \u003d null;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                "
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                currentSlide.HideIndicator();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "                if (ZoomLabSettings.BackgroundZoomChecked)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                    previousSlidePicture \u003d GetPreviousSlidePictureWithBackground(currentSlide, previousSlide);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "                    previousSlidePicture.Apply();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "                    PreparePreviousSlidePicture(selectedShape, ref previousSlidePicture);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "                    addedSlide \u003d (PowerPointStepBackSlide)previousSlide.CreateStepBackSlide();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "                    addedSlide.DeleteAllShapes();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "                    PowerPoint.Shape backgroundShape \u003d null;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "                    shapeToZoom \u003d GetStepBackWithBackgroundShapeToZoom(currentSlide, addedSlide, previousSlidePicture, out backgroundShape);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "                    shapeToZoom.Apply();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "                    addedSlide.PrepareForStepBack();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "                    addedSlide.AddStepBackAnimationBackground(shapeToZoom, backgroundShape, previousSlidePicture);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "                    addedSlide \u003d (PowerPointStepBackSlide)previousSlide.CreateStepBackSlide();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "                    addedSlide.DeleteAllShapes();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "                    shapeToZoom \u003d GetStepBackWithoutBackgroundShapeToZoom(addedSlide, previousSlide);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "                    shapeToZoom.Apply();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "                    shapeToZoom.Copy();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "                    previousSlidePicture \u003d currentSlide.Shapes.PasteSpecial(PowerPoint.PpPasteDataType.ppPastePNG)[1];"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "                    previousSlidePicture.Apply();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "                    PreparePreviousSlidePicture(selectedShape, ref previousSlidePicture);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "                    addedSlide.PrepareForStepBack();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "                    addedSlide.AddStepBackAnimationNonBackground(shapeToZoom, previousSlidePicture);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "                currentSlide.ShowIndicator();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "                currentSlide.Transition.EntryEffect \u003d PowerPoint.PpEntryEffect.ppEffectFadeSmoothly;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "                currentSlide.Transition.Duration \u003d 0.25f;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "                Globals.ThisAddIn.Application.ActiveWindow.View.GotoSlide(addedSlide.Index);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "                Globals.ThisAddIn.Application.CommandBars.ExecuteMso(\"AnimationPreview\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "                if (includeAckSlide)"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "                    PowerPointPresentation.Current.AddAckSlide();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.LogException(e, \"AddStepBackAnimation\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "                ErrorDialogBox.ShowDialog(\"Error when adding step back animation\", \"An error occurred when adding step back animation.\", e);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "                throw;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        private static void RemoveTextFromShape(PowerPoint.Shape shape)"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "            if (shape.HasTextFrame \u003d\u003d Office.MsoTriState.msoTrue \u0026\u0026 shape.TextFrame.HasText \u003d\u003d Office.MsoTriState.msoTrue)"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "                shape.TextFrame.TextRange.Text \u003d \"\";"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        private static void PrepareZoomShape(PowerPointSlide currentSlide, ref PowerPoint.Shape selectedShape)"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            currentSlide.DeleteShapeAnimations(selectedShape);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            RemoveTextFromShape(selectedShape);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "            selectedShape.Rotation \u003d 0;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "        //Delete previously added drill down slides"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        private static PowerPointSlide GetNextSlide(PowerPointSlide currentSlide, bool deletePreviouslyAdded \u003d true)"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide nextSlide \u003d PowerPointPresentation.Current.Slides[currentSlide.Index];"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide tempSlide \u003d nextSlide;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "            while (nextSlide.Name.Contains(\"PPTLabsZoomIn\") \u0026\u0026 nextSlide.Index \u003c PowerPointPresentation.Current.SlideCount)"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "                nextSlide \u003d PowerPointPresentation.Current.Slides[tempSlide.Index];"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "                if (deletePreviouslyAdded)"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "                    tempSlide.Delete();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "                tempSlide \u003d nextSlide;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "            nextSlide.Transition.EntryEffect \u003d PowerPoint.PpEntryEffect.ppEffectFadeSmoothly;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "            nextSlide.Transition.Duration \u003d 0.25f;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "            return nextSlide;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "        //Delete previously added step back slides"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "        private static PowerPointSlide GetPreviousSlide(PowerPointSlide currentSlide, bool deletePreviouslyAdded \u003d true)"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide previousSlide \u003d PowerPointPresentation.Current.Slides[currentSlide.Index - 2];"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide tempSlide \u003d previousSlide;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "            while (previousSlide.Name.Contains(\"PPTLabsZoomOut\") \u0026\u0026 previousSlide.Index \u003e 1)"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "                previousSlide \u003d PowerPointPresentation.Current.Slides[tempSlide.Index - 2];"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "                if (deletePreviouslyAdded)"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "                    tempSlide.Delete();"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "                tempSlide \u003d previousSlide;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "            return previousSlide;"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "        //Return picture copy of next slide where shapes with exit animations have been deleted"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "        private static PowerPoint.Shape GetNextSlidePictureWithoutBackground(PowerPointSlide currentSlide, PowerPointSlide nextSlide, out PowerPoint.Shape pictureOnNextSlide)"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "            Globals.ThisAddIn.Application.ActiveWindow.Selection.Unselect();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "            Globals.ThisAddIn.Application.ActiveWindow.View.GotoSlide(nextSlide.Index);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cPowerPoint.Shape\u003e shapesOnNextSlide \u003d new List\u003cPowerPoint.Shape\u003e();"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (PowerPoint.Shape sh in nextSlide.Shapes)"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!nextSlide.HasEntryAnimation(sh) \u0026\u0026 !ShapeUtil.IsHidden(sh))"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "                    shapesOnNextSlide.Add(sh);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cPowerPoint.Shape\u003e copiedShapes \u003d new List\u003cPowerPoint.Shape\u003e();"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (PowerPoint.Shape sh in shapesOnNextSlide)"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "                sh.Copy();"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPoint.Shape shapeCopy \u003d nextSlide.Shapes.Paste()[1];"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "                LegacyShapeUtil.CopyShapeAttributes(sh, ref shapeCopy);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "                copiedShapes.Add(shapeCopy);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "            SelectAllShape(copiedShapes);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Selection sel \u003d Globals.ThisAddIn.Application.ActiveWindow.Selection;"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Shape shapeGroup \u003d null;"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "            if (sel.ShapeRange.Count \u003e 1)"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "                shapeGroup \u003d sel.ShapeRange.Group();"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "                shapeGroup \u003d sel.ShapeRange[1];"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "            shapeGroup.Copy();"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "            pictureOnNextSlide \u003d nextSlide.Shapes.PasteSpecial(PowerPoint.PpPasteDataType.ppPastePNG)[1];"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "            LegacyShapeUtil.CopyShapePosition(shapeGroup, ref pictureOnNextSlide);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "            shapeGroup.Delete();"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "            pictureOnNextSlide.Copy();"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Shape slidePicture \u003d currentSlide.Shapes.PasteSpecial(PowerPoint.PpPasteDataType.ppPastePNG)[1];"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "            return slidePicture;"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "        //Return picture copy of next slide where shapes with exit animations have been deleted"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "        private static PowerPoint.Shape GetNextSlidePictureWithBackground(PowerPointSlide currentSlide, PowerPointSlide nextSlide)"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide nextSlideCopy \u003d nextSlide.Duplicate();"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cPowerPoint.Shape\u003e shapes \u003d nextSlideCopy.Shapes.Cast\u003cPowerPoint.Shape\u003e().ToList();"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "            IEnumerable\u003cPowerPoint.Shape\u003e matchingShapes \u003d shapes.Where(current \u003d\u003e nextSlideCopy.HasEntryAnimation(current));"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (PowerPoint.Shape s in matchingShapes)"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "                s.Delete();"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PowerPoint.Shape slidePicture \u003d AddSlideAsShape(nextSlideCopy, currentSlide);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "            nextSlideCopy.Delete();"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "            return slidePicture;"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "        //Return picture copy of previous slide where shapes with exit animations have been deleted"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "        private static PowerPoint.Shape GetPreviousSlidePictureWithBackground(PowerPointSlide currentSlide, PowerPointSlide previousSlide)"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide previousSlideCopy \u003d previousSlide.Duplicate();"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cPowerPoint.Shape\u003e shapes \u003d previousSlideCopy.Shapes.Cast\u003cPowerPoint.Shape\u003e().ToList();"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "            IEnumerable\u003cPowerPoint.Shape\u003e matchingShapes \u003d shapes.Where(current \u003d\u003e previousSlideCopy.HasExitAnimation(current));"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (PowerPoint.Shape s in matchingShapes)"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "                s.Delete();"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PowerPoint.Shape slidePicture \u003d AddSlideAsShape(previousSlideCopy, currentSlide);"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "            previousSlideCopy.Delete();"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "            return slidePicture;"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "        //Set position, size and animations of the next slide copy"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "        private static void PrepareNextSlidePicture(PowerPointSlide currentSlide, PowerPoint.Shape selectedShape, ref PowerPoint.Shape nextSlidePicture)"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "            nextSlidePicture.LockAspectRatio \u003d Office.MsoTriState.msoTrue;"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "            if (selectedShape.Width \u003e selectedShape.Height)"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "                nextSlidePicture.Height \u003d selectedShape.Height;"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "                nextSlidePicture.Width \u003d selectedShape.Width;"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "            LegacyShapeUtil.CopyShapePosition(selectedShape, ref nextSlidePicture);"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "            selectedShape.Visible \u003d Office.MsoTriState.msoFalse;"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "            nextSlidePicture.Name \u003d \"PPTZoomInShape\" + DateTime.Now.ToString(\"yyyyMMddHHmmssffff\");"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Effect effectAppear \u003d currentSlide.TimeLine.MainSequence.AddEffect(nextSlidePicture, PowerPoint.MsoAnimEffect.msoAnimEffectFade, PowerPoint.MsoAnimateByLevel.msoAnimateLevelNone, PowerPoint.MsoAnimTriggerType.msoAnimTriggerOnPageClick);"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "            effectAppear.Timing.Duration \u003d 0.50f;"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "        //Set position, size and animations of the previous slide copy"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "        private static void PreparePreviousSlidePicture(PowerPoint.Shape selectedShape, ref PowerPoint.Shape previousSlidePicture)"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "            previousSlidePicture.LockAspectRatio \u003d Office.MsoTriState.msoTrue;"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "            if (selectedShape.Width \u003e selectedShape.Height)"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "                previousSlidePicture.Height \u003d selectedShape.Height;"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "                previousSlidePicture.Width \u003d selectedShape.Width;"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "            LegacyShapeUtil.CopyShapePosition(selectedShape, ref previousSlidePicture);"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "            selectedShape.Visible \u003d Office.MsoTriState.msoFalse;"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "            previousSlidePicture.Name \u003d \"PPTZoomOutShape\" + DateTime.Now.ToString(\"yyyyMMddHHmmssffff\");"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool IsSelectingShapes()"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Selection selection \u003d Globals.ThisAddIn.Application.ActiveWindow.Selection;"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "            return selection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionShapes \u0026\u0026 selection.ShapeRange.Count \u003e 0;"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "        private static PowerPoint.Shape GetStepBackWithBackgroundShapeToZoom(PowerPointSlide currentSlide, PowerPointSlide addedSlide, PowerPoint.Shape previousSlidePicture, out PowerPoint.Shape backgroundShape)"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PowerPoint.Shape currentSlideCopy \u003d AddSlideAsShape(currentSlide, addedSlide);"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeUtil.FitShapeToSlide(ref currentSlideCopy);"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "            currentSlideCopy.Name \u003d \"PPTZoomOutShape\" + DateTime.Now.ToString(\"yyyyMMddHHmmssffff\");"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "            previousSlidePicture.Copy();"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Shape previousSlidePictureCopy \u003d addedSlide.Shapes.Paste()[1];"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "            Globals.ThisAddIn.Application.ActiveWindow.View.GotoSlide(addedSlide.Index);"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "            // Scale everything up by this ratio."
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "            float ratio \u003d PowerPointPresentation.Current.SlideWidth / previousSlidePictureCopy.Width;"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "            currentSlideCopy.Width *\u003d ratio;"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "            currentSlideCopy.Height *\u003d ratio;"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "            currentSlideCopy.Left \u003d -ratio * previousSlidePictureCopy.Left;"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "            currentSlideCopy.Top \u003d -ratio * previousSlidePictureCopy.Top;"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "            // for some reason height is locked to width, so we only need to change width here."
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "            previousSlidePictureCopy.Width *\u003d ratio;"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "            previousSlidePictureCopy.Left \u003d 0;"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "            previousSlidePictureCopy.Top \u003d 0;"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "            backgroundShape \u003d currentSlideCopy;"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "            return previousSlidePictureCopy;"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "        private static PowerPoint.Shape GetStepBackWithoutBackgroundShapeToZoom(PowerPointSlide addedSlide, PowerPointSlide previousSlide)"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "            Globals.ThisAddIn.Application.ActiveWindow.Selection.Unselect();"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "            Globals.ThisAddIn.Application.ActiveWindow.View.GotoSlide(addedSlide.Index);"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cPowerPoint.Shape\u003e copiedShapes \u003d new List\u003cPowerPoint.Shape\u003e();"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (PowerPoint.Shape sh in previousSlide.Shapes)"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!previousSlide.HasExitAnimation(sh) \u0026\u0026 !ShapeUtil.IsHidden(sh))"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "                    sh.Copy();"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "                    PowerPoint.Shape shapeCopy \u003d addedSlide.Shapes.Paste()[1];"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "                    LegacyShapeUtil.CopyShapeAttributes(sh, ref shapeCopy);"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "                    copiedShapes.Add(shapeCopy);"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "                } "
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "            SelectAllShape(copiedShapes);"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Selection sel \u003d Globals.ThisAddIn.Application.ActiveWindow.Selection;"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Shape shapeGroup \u003d null;"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "            if (sel.ShapeRange.Count \u003e 1)"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "                shapeGroup \u003d sel.ShapeRange.Group();"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "                shapeGroup \u003d sel.ShapeRange[1];"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "            shapeGroup.Copy();"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Shape previousSlidePicture \u003d addedSlide.Shapes.PasteSpecial(PowerPoint.PpPasteDataType.ppPastePNG)[1];"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "            LegacyShapeUtil.CopyShapePosition(shapeGroup, ref previousSlidePicture);"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "            previousSlidePicture.Name \u003d \"PPTZoomOutShape\" + DateTime.Now.ToString(\"yyyyMMddHHmmssffff\");"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "            shapeGroup.Delete();"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "            return previousSlidePicture;"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "        private static void SelectAllShape(List\u003cPowerPoint.Shape\u003e shapes)"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (PowerPoint.Shape shapeCopy in shapes)"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "                shapeCopy.Select(Office.MsoTriState.msoFalse);"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private static PowerPoint.Shape AddSlideAsShape(PowerPointSlide slideToAdd, PowerPointSlide targetSlide)"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            try"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                // Export the slide as .png to a temporary location, then add it to shapes."
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                // This yields a higher quality image compared to copy-pasting slide as image."
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                string tempFilePath \u003d FileDir.GetTemporaryPngFilePath();"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                GraphicsUtil.ExportSlide(slideToAdd, tempFilePath);"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                PowerPoint.Shape slideAsShape \u003d targetSlide.Shapes.AddPicture2(tempFilePath,"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                                                                                 Microsoft.Office.Core.MsoTriState.msoFalse,"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                                                                                 Microsoft.Office.Core.MsoTriState.msoTrue,"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                                                                                 0,"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                                                                                 0);"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                try"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    FileDir.DeleteFile(tempFilePath);"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                catch (Exception)"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                {"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                    return slideAsShape;"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return slideAsShape;"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            catch (Exception)"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                // It is possible that there could permissions-related issues that cause user to be unable to create/delete files."
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                // In that case, we proceed with copy-pasting the slide as image."
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                slideToAdd.Copy();"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                PowerPoint.Shape slideAsShape \u003d targetSlide.Shapes.PasteSpecial(PowerPoint.PpPasteDataType.ppPastePNG)[1];"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                return slideAsShape;"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 39,
      "-": 452
    }
  },
  {
    "path": "PowerPointLabs/Test/FunctionalTest/ColorsLabTest.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Forms;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.VisualStudio.TestTools.UnitTesting;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using Test.Util;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using TestInterface;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using Point \u003d System.Windows.Point;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using Button \u003d System.Windows.Controls.Button;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Threading;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "namespace Test.FunctionalTest"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    [TestClass]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public class ColorsLabTest : BaseFunctionalTest"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private const int OriginalSlideNo \u003d 3;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private const int FontColorChangeSlideNo \u003d 4;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private const int OutlineColorChangeSlideNo \u003d 5;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private const int FillColorChangeSlideNo \u003d 6;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private const int BrightnessAndSaturationChangeSlideNo \u003d 7;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private const int MonochromeColorChangeSlideNo \u003d 8;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private const int AnalogousAndComplementaryChangeSlideNo \u003d 9;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private const int TriadicAndTetradicChangeSlideNo \u003d 10;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private const string TargetShape \u003d \"selectMe\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private const string FontColorShape \u003d \"fontColor\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private const string LineColorShape \u003d \"lineColor\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private const string FillColorShape \u003d \"fillColor\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private List\u003cColor\u003e DefaultTestColors \u003d new List\u003cColor\u003e(new Color[] {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color.FromArgb(255, 0, 0),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color.FromArgb(0, 255, 0),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color.FromArgb(0, 0, 255),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color.FromArgb(255, 255, 0),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color.FromArgb(255, 0, 255),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color.FromArgb(0, 255, 255),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color.FromArgb(255, 255, 255),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color.FromArgb(0, 0, 0),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color.FromArgb(255, 255, 255),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color.FromArgb(255, 255, 255),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color.FromArgb(255, 255, 255),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color.FromArgb(255, 255, 255),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color.FromArgb(255, 255, 255)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        });"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private List\u003cColor\u003e AllWhiteColorList \u003d new List\u003cColor\u003e(new Color[]"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color.FromArgb(255, 255, 255),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color.FromArgb(255, 255, 255),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color.FromArgb(255, 255, 255),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color.FromArgb(255, 255, 255),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color.FromArgb(255, 255, 255),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color.FromArgb(255, 255, 255),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color.FromArgb(255, 255, 255),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color.FromArgb(255, 255, 255),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color.FromArgb(255, 255, 255),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color.FromArgb(255, 255, 255),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color.FromArgb(255, 255, 255),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color.FromArgb(255, 255, 255),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Color.FromArgb(255, 255, 255)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        });"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override string GetTestingSlideName()"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            return \"ColorsLab\\\\ColorsLab.pptx\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"FT\")]"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        public void FT_ColorsLabTest()"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            // if not maximized, some elements in Colors pane may not be seen"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.MaximizeWindow();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            IColorsLabController colorsLab \u003d PplFeatures.ColorsLab;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            colorsLab.OpenPane();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            TestApplyFontColor(colorsLab);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            TestApplyLineColor(colorsLab);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            TestApplyFillColor(colorsLab);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            TestBrightnessAndSaturationSlider(colorsLab);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            TestMonochromeMatchingColors(colorsLab);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            TestAnalogousAndComplementaryColors(colorsLab);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            TestTriadicAndTetradicColors(colorsLab);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            TestFavoriteColors(colorsLab);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void TestApplyFontColor(IColorsLabController colorsLab)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Slide actualSlide \u003d PpOperations.SelectSlide(OriginalSlideNo);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Shape shape \u003d PpOperations.SelectShape(FontColorShape)[1];"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Point startPt \u003d colorsLab.GetApplyTextButtonLocation();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Point endPt \u003d GetShapeCenterPoint(shape);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PpOperations.SelectShape(TargetShape);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            DragAndDrop(startPt, endPt);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Slide expSlide \u003d PpOperations.SelectSlide(FontColorChangeSlideNo);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            SlideUtil.IsSameLooking(expSlide, actualSlide);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void TestApplyLineColor(IColorsLabController colorsLab)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Slide actualSlide \u003d PpOperations.SelectSlide(OriginalSlideNo);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Shape shape \u003d PpOperations.SelectShape(LineColorShape)[1];"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Point startPt \u003d colorsLab.GetApplyLineButtonLocation();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Point endPt \u003d GetShapeCenterPoint(shape);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PpOperations.SelectShape(TargetShape);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            DragAndDrop(startPt, endPt);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Slide expSlide \u003d PpOperations.SelectSlide(OutlineColorChangeSlideNo);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            SlideUtil.IsSameLooking(expSlide, actualSlide);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void TestApplyFillColor(IColorsLabController colorsLab)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Slide actualSlide \u003d PpOperations.SelectSlide(OriginalSlideNo);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Shape shape \u003d PpOperations.SelectShape(FillColorShape)[1];"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Point startPt \u003d colorsLab.GetApplyFillButtonLocation();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Point endPt \u003d GetShapeCenterPoint(shape);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PpOperations.SelectShape(TargetShape);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            DragAndDrop(startPt, endPt);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Slide expSlide \u003d PpOperations.SelectSlide(FillColorChangeSlideNo);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            SlideUtil.IsSameLooking(expSlide, actualSlide);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void TestBrightnessAndSaturationSlider(IColorsLabController colorsLab)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Slide actualSlide \u003d PpOperations.SelectSlide(OriginalSlideNo);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            colorsLab.SlideBrightnessSlider(120);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            colorsLab.SlideSaturationSlider(240);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Point startPt \u003d colorsLab.GetApplyLineButtonLocation();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Point endPt \u003d colorsLab.GetMainColorRectangleLocation();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PpOperations.SelectShape(TargetShape);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            DragAndDrop(startPt, endPt);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Slide expSlide \u003d PpOperations.SelectSlide(BrightnessAndSaturationChangeSlideNo);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            SlideUtil.IsSameLooking(expSlide, actualSlide);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void TestMonochromeMatchingColors(IColorsLabController colorsLab)"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Slide actualSlide \u003d PpOperations.SelectSlide(OriginalSlideNo);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // Apply monochromeRectOne as Line"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            colorsLab.ClickMonochromeRect(1);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Point startPt \u003d colorsLab.GetApplyLineButtonLocation();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Point endPt \u003d colorsLab.GetMainColorRectangleLocation();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PpOperations.SelectShape(TargetShape);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            DragAndDrop(startPt, endPt);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // Apply monochromeRectTwo as Text"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            colorsLab.ClickMonochromeRect(2);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            startPt \u003d colorsLab.GetApplyTextButtonLocation();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            endPt \u003d colorsLab.GetMainColorRectangleLocation();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PpOperations.SelectShape(TargetShape);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            DragAndDrop(startPt, endPt);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // Apply monochromeRectSix as Fill"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            colorsLab.ClickMonochromeRect(6);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            startPt \u003d colorsLab.GetApplyFillButtonLocation();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            endPt \u003d colorsLab.GetMainColorRectangleLocation();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PpOperations.SelectShape(TargetShape);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            DragAndDrop(startPt, endPt);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Slide expSlide \u003d PpOperations.SelectSlide(MonochromeColorChangeSlideNo);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "            SlideUtil.IsSameLooking(expSlide, actualSlide);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void TestAnalogousAndComplementaryColors(IColorsLabController colorsLab)"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Slide actualSlide \u003d PpOperations.SelectSlide(OriginalSlideNo);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // Eyedrop the font color shape"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Shape shape \u003d PpOperations.SelectShape(FontColorShape)[1];"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Point startPt \u003d colorsLab.GetEyeDropperButtonLocation();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Point endPt \u003d GetShapeCenterPoint(shape);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            DragAndDrop(startPt, endPt);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // Apply analagousRectOne as Text"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            colorsLab.ClickAnalogousRect(1);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            startPt \u003d colorsLab.GetApplyTextButtonLocation();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            endPt \u003d colorsLab.GetMainColorRectangleLocation();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PpOperations.SelectShape(TargetShape);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            DragAndDrop(startPt, endPt);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // Apply complementaryRectThree as Line"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            colorsLab.ClickComplementaryRect(3);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            startPt \u003d colorsLab.GetApplyLineButtonLocation();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            endPt \u003d colorsLab.GetMainColorRectangleLocation();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PpOperations.SelectShape(TargetShape);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            DragAndDrop(startPt, endPt);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Slide expSlide \u003d PpOperations.SelectSlide(AnalogousAndComplementaryChangeSlideNo);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "            SlideUtil.IsSameLooking(expSlide, actualSlide);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void TestTriadicAndTetradicColors(IColorsLabController colorsLab)"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Slide actualSlide \u003d PpOperations.SelectSlide(OriginalSlideNo);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // Eyedrop the outline color shape"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Shape shape \u003d PpOperations.SelectShape(LineColorShape)[1];"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Point startPt \u003d colorsLab.GetEyeDropperButtonLocation();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Point endPt \u003d GetShapeCenterPoint(shape);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            DragAndDrop(startPt, endPt);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // Apply triadicRectThree as Fill"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            colorsLab.ClickTriadicRect(3);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            startPt \u003d colorsLab.GetApplyFillButtonLocation();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            endPt \u003d colorsLab.GetMainColorRectangleLocation();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PpOperations.SelectShape(TargetShape);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            DragAndDrop(startPt, endPt);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // Apply tetradicRectFour as Line"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            colorsLab.ClickTetradicRect(4);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            startPt \u003d colorsLab.GetApplyLineButtonLocation();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            endPt \u003d colorsLab.GetMainColorRectangleLocation();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PpOperations.SelectShape(TargetShape);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            DragAndDrop(startPt, endPt);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            Slide expSlide \u003d PpOperations.SelectSlide(TriadicAndTetradicChangeSlideNo);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "            SlideUtil.IsSameLooking(expSlide, actualSlide);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void TestFavoriteColors(IColorsLabController colorsLab)"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // Clear the favorite colors panel"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            colorsLab.ClearFavoriteColors();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            List\u003cColor\u003e currentFavoritePanel \u003d colorsLab.GetCurrentFavoritePanel();"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            AssertEqual(AllWhiteColorList, currentFavoritePanel);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // Load the test case"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            colorsLab.LoadFavoriteColors("
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                PathUtil.GetDocTestPresentationPath(\"ColorsLab\\\\FavoriteColorsTest.thm\"));"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            currentFavoritePanel \u003d colorsLab.GetCurrentFavoritePanel();"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            AssertEqual(DefaultTestColors, currentFavoritePanel);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            // Clear panel"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            colorsLab.ClearFavoriteColors();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            currentFavoritePanel \u003d colorsLab.GetCurrentFavoritePanel();"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            AssertEqual(AllWhiteColorList, currentFavoritePanel);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        # region Helper methods"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "        // mouse drag \u0026 drop from Control to Shape to apply color"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void ApplyColor(System.Windows.Controls.Control from, Shape to)"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "            Point startPt \u003d from.PointToScreen(new Point(from.Width/2, from.Height/2));"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "            Point endPt \u003d new Point("
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "                PpOperations.PointsToScreenPixelsX(to.Left + to.Width/2),"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "                PpOperations.PointsToScreenPixelsY(to.Top + to.Height/2));"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "            DragAndDrop(startPt, endPt);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private Point GetShapeCenterPoint(Shape shape)"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            return new Point("
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                PpOperations.PointsToScreenPixelsX(shape.Left + shape.Width / 2),"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                PpOperations.PointsToScreenPixelsY(shape.Top + shape.Height / 2));"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "        private void DragAndDrop(Point startPt, Point endPt)"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            MouseUtil.SendMouseDown((int)startPt.X, (int)startPt.Y);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            MouseUtil.SendMouseUp((int)endPt.X, (int)endPt.Y);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private static void AssertEqual(List\u003cColor\u003e exp, List\u003cColor\u003e actual)"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            for (int i \u003d 0; i \u003c 13; i++)"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "blewjy"
        },
        "content": "                AssertEqual(exp[i], actual[i]);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "        private static void AssertEqual(Color exp, Color actual)"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "            // dont assert Alpha"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.IsTrue(IsAlmostSame(exp.R, actual.R), \"diff color R, exp {0}, actual {1}\", exp.R, actual.R);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.IsTrue(IsAlmostSame(exp.G, actual.G),\"diff color G, exp {0}, actual {1}\", exp.G, actual.G);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.IsTrue(IsAlmostSame(exp.B, actual.B), \"diff color B, exp {0}, actual {1}\", exp.B, actual.B);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool IsAlmostSame(byte a, byte b)"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "            return Math.Abs(a - b) \u003c 3;"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "        # endregion"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 203,
      "-": 109
    }
  },
  {
    "path": "PowerPointLabs/Test/FunctionalTest/ShapesLabTest.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System.Drawing;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Forms;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.VisualStudio.TestTools.UnitTesting;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using Test.Util;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "using System;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using TestInterface;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "namespace Test.FunctionalTest"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    [TestClass]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public class ShapesLabTest : BaseFunctionalTest"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int SaveShapesShapesSlide \u003d 3;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int SaveShapesTestSlide \u003d 4;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int SaveShapesExpSlide \u003d 5;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int AddShapesShapesSlide \u003d 6;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int AddShapesTestSlide \u003d 7;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int AddShapesExpSlide \u003d 8;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const int AddShapesPlaceholderSlide \u003d 9;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        //Check clipboard restored"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const int SaveShapesClipboardRestoredActualSlide \u003d 11;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const int SaveShapesClipboardRestoredTestSlide \u003d 12;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const int SaveShapesClipboardRestoredExpSlide \u003d 13;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const int AddShapesClipboardRestoredActualSlide \u003d 14;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const int AddShapesClipboardRestoredTestSlide \u003d 15;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const int AddShapesClipboardRestoredExpSlide \u003d 16;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override string GetTestingSlideName()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            return \"ShapesLab\\\\ShapesLab.pptx\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        //use new powerpoint instance to refresh"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        //ShapesLabConfig setting for FT"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        //"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        //every time, shapes lab in FT will use diff"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        //shapesRootFolder \u0026 default category"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override bool IsUseNewPpInstance()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"FT\")]"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        public void FT_ShapesLabTest()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.MaximizeWindow();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            IShapesLabController shapesLab \u003d PplFeatures.ShapesLab;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            shapesLab.OpenPane();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            TestSaveShapesToShapesLab(shapesLab, SaveShapesShapesSlide, SaveShapesTestSlide, SaveShapesExpSlide);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            TestImportLibraryAndShape(shapesLab);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            TestSaveShapesToShapesLabWithAddShapesButton(shapesLab, AddShapesShapesSlide, AddShapesTestSlide, AddShapesExpSlide);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            TestSavePlaceholderToShapesLabWithAddShapesButton(shapesLab, AddShapesPlaceholderSlide);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            IsClipboardRestoredAfterSaveShape(shapesLab, SaveShapesClipboardRestoredActualSlide, SaveShapesClipboardRestoredTestSlide, SaveShapesClipboardRestoredExpSlide);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            IsClipboardRestoredAfterAddShape(shapesLab, AddShapesClipboardRestoredActualSlide, AddShapesClipboardRestoredTestSlide,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                AddShapesClipboardRestoredExpSlide);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestImportLibraryAndShape(IShapesLabController shapesLab)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            shapesLab.ImportLibrary("
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                PathUtil.GetDocTestPresentationPath(\"ShapesLab\\\\LibraryToImport.pptlabsshapes\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            shapesLab.ImportLibrary("
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                PathUtil.GetDocTestPresentationPath(\"ShapesLab\\\\ShapeToImport.pptlabsshape\"));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Collections.Generic.List\u003cISlideData\u003e actualShapeDataAfterImport \u003d shapesLab.FetchShapeGalleryPresentationData();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Collections.Generic.List\u003cISlideData\u003e expShapeDataAfterImport \u003d PpOperations.FetchPresentationData("
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                PathUtil.GetDocTestPresentationPath(ExpectedShapeGalleryFileName()));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            PresentationUtil.AssertEqual(expShapeDataAfterImport, actualShapeDataAfterImport);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        private string ExpectedShapeGalleryFileName()"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            if (PpOperations.IsOffice2010())"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                return \"ShapesLab\\\\ExpShapeGalleryAftImportNonWide.pptx\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                return \"ShapesLab\\\\ExpShapeGalleryAftImport.pptx\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SaveShapesToShapesLab(IShapesLabController shapesLab, int shapesSlideNum, int testSlideNum)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(shapesSlideNum);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectShapesByPrefix(\"selectMe\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            ExpectAddShapeButtonEnabled(shapesLab);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            // save shapes"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            shapesLab.SaveSelectedShapes();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            Microsoft.Office.Interop.PowerPoint.Slide actualSlide \u003d PpOperations.SelectSlide(testSlideNum);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            AddShapesToSlideFromShapesLab(shapesLab, \"selectMe1\", \"Group selectMe1\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestSaveShapesToShapesLab(IShapesLabController shapesLab, int shapesSlideNum, int testSlideNum, int expSlideNum)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            SaveShapesToShapesLab(shapesLab, shapesSlideNum, testSlideNum);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            Microsoft.Office.Interop.PowerPoint.Slide actualSlide \u003d PpOperations.SelectSlide(testSlideNum);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            Microsoft.Office.Interop.PowerPoint.Slide expSlide \u003d PpOperations.SelectSlide(expSlideNum);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            SlideUtil.IsSameLooking(expSlide, actualSlide);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            SlideUtil.IsSameAnimations(expSlide, actualSlide);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SaveShapesToShapesLabWithAddShapesButton(IShapesLabController shapesLab, int shapesSlideNum, int testSlideNum)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(shapesSlideNum);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectShapesByPrefix(\"selectMeNow\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            ExpectAddShapeButtonEnabled(shapesLab);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            MessageBoxUtil.ExpectMessageBoxWillNotPopUp("
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                            ShapesLabText.ErrorDialogTitle, ShapesLabText.ErrorAddSelectionInvalid,"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                            shapesLab.ClickAddShapeButton);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            Microsoft.Office.Interop.PowerPoint.Slide actualSlide \u003d PpOperations.SelectSlide(testSlideNum);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            AddShapesToSlideFromShapesLab(shapesLab, \"selectMeNow1\", \"Group selectMeNow1\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestSaveShapesToShapesLabWithAddShapesButton(IShapesLabController shapesLab, int shapesSlideNum, int testSlideNum, int expSlideNum)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            SaveShapesToShapesLabWithAddShapesButton(shapesLab, shapesSlideNum, testSlideNum);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            Microsoft.Office.Interop.PowerPoint.Slide expSlide \u003d PpOperations.SelectSlide(expSlideNum);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            Microsoft.Office.Interop.PowerPoint.Slide actualSlide \u003d PpOperations.SelectSlide(testSlideNum);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            SlideUtil.IsSameLooking(expSlide, actualSlide);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            SlideUtil.IsSameAnimations(expSlide, actualSlide);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private void TestSavePlaceholderToShapesLabWithAddShapesButton(IShapesLabController shapesLab, int shapesSlideNum)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            PpOperations.SelectSlide(shapesSlideNum);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            ExpectAddShapeButtonDisabled(shapesLab);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            PpOperations.SelectShapesByPrefix(\"Placeholder\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            ExpectAddShapeButtonEnabled(shapesLab);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            MessageBoxUtil.ExpectMessageBoxWillPopUp("
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                            ShapesLabText.ErrorDialogTitle, ShapesLabText.ErrorAddSelectionInvalid,"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                            shapesLab.ClickAddShapeButton);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AddShapesToSlideFromShapesLab(IShapesLabController shapesLab, string shapeThumbnail, string expectedShapePrefix)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "            IShapesLabLabeledThumbnail thumbnail \u003d shapesLab.GetLabeledThumbnail(shapeThumbnail);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            thumbnail.FinishNameEdit();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "            // Add shapes from Shapes Lab to slide by double clicking"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            DoubleClick(thumbnail as Control);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            Microsoft.Office.Interop.PowerPoint.ShapeRange shapes \u003d PpOperations.SelectShapesByPrefix(expectedShapePrefix);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.IsTrue(shapes.Count \u003e 0, \"Failed to add shapes from Shapes Lab.\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        private void DoubleClick(Control target)"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            Point pt \u003d target.PointToScreen(new Point(target.Width / 2, target.Height / 2));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            MouseUtil.SendMouseDoubleClick(pt.X, pt.Y);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        private void IsClipboardRestoredAfterSaveShape(IShapesLabController shapesLab, int actualSlideNum, int testSlideNum, int expSlideNum)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            CheckIfClipboardIsRestored(() \u003d\u003e SaveShapesToShapesLab(shapesLab, actualSlideNum, testSlideNum),"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "                actualSlideNum, \"copyMe\", expSlideNum, \"Expected\", \"compareMe\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        private void IsClipboardRestoredAfterAddShape(IShapesLabController shapesLab, int actualSlideNum, int testSlideNum, int expSlideNum)"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            CheckIfClipboardIsRestored(() \u003d\u003e SaveShapesToShapesLabWithAddShapesButton(shapesLab, actualSlideNum, testSlideNum),"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "                actualSlideNum, \"copyMe\", expSlideNum, \"Expected\", \"compareMe\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        private void ExpectAddShapeButtonEnabled(IShapesLabController shapesLab)"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            ThreadUtil.WaitFor(1000);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            Assert.IsTrue(shapesLab.GetAddShapeButtonStatus());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        private void ExpectAddShapeButtonDisabled(IShapesLabController shapesLab)"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            ThreadUtil.WaitFor(1000);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            Assert.IsFalse(shapesLab.GetAddShapeButtonStatus());"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 16,
      "YuPeiHenry": 23,
      "-": 149
    }
  },
  {
    "path": "PowerPointLabs/Test/FunctionalTest/SyncLabTest.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Threading.Tasks;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.VisualStudio.TestTools.UnitTesting;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using Test.Util;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "using TestInterface;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "namespace Test.FunctionalTest"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    [TestClass]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public class SyncLabTest : BaseFunctionalTest"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int MaxRetry \u003d 5;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CategoryIndexPosition \u003d 0;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int FormatItemIndexPosition \u003d 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int OriginalSyncGroupToShapeSlideNo \u003d 36;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int ExpectedSyncGroupToShapeSlideNo \u003d 37;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int OriginalSyncShapeToGroupSlideNo \u003d 38;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int ExpectedSyncShapeToGroupSlideNo \u003d 39;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int HorizontalPlaceHolderSlideNo \u003d 41;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CenterPlaceHolderSlideNo \u003d 42;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int VerticalPlaceHolderSlideNo \u003d 43;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int TablePlaceHolderSlideNo \u003d 44;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int ChartPlaceHolderSlideNo \u003d 45;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int PicturePlaceHolderSlideNo \u003d 46;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int SmartArtSlideNo \u003d 47;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CustomPerspectiveShadowSlideNo \u003d 48;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string Line \u003d \"Straight Connector 2\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string RotatedArrow \u003d \"Right Arrow 5\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string Group \u003d \"Group 1\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string Oval \u003d \"Oval 4\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string CopyFromShape \u003d \"CopyFrom\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string UnrotatedRectangle \u003d \"Rectangle 3\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string CustomPerspectiveShadow \u003d \"Custom Perspective Shadow\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string HorizontalTitle \u003d \"Title 1\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string HorizontalBody \u003d \"Content Placeholder 2\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string CenterTitle\u003d \"Title 1\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string Subtitle\u003d \"Subtitle 2\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string VerticalTitle \u003d \"Title 1\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string VerticalBody \u003d \"Content Placeholder 2\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string Table \u003d \"Content Placeholder 3\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string Chart \u003d \"Content Placeholder 5\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string Picture \u003d \"Content Placeholder 4\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string SmartArt \u003d \"SmartArt 1\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override string GetTestingSlideName()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            return \"SyncLab\\\\SyncLab.pptx\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"FT\")]"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        public void FT_SyncLabTest()"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            ISyncLabController syncLab \u003d PplFeatures.SyncLab;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            syncLab.OpenPane();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            TestSync(syncLab);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            TestErrorDialogs(syncLab);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            TestCopySupportedPlaceHolders(syncLab);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            TestCopyUnsupportedPlaceHolders(syncLab);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            TestCopyCustomPerspectiveShadow(syncLab);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestCopySupportedPlaceHolders(ISyncLabController syncLab)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            // Ensure that one style can be copied from placeholder objects."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            // Testing copying of all valid placeholder styles is done in unit tests."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(HorizontalPlaceHolderSlideNo);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectShape(HorizontalBody);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            CopyStyle(syncLab, 1, 0);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectShape(HorizontalTitle);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            CopyStyle(syncLab, 1, 0);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(VerticalPlaceHolderSlideNo);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectShape(VerticalBody);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            CopyStyle(syncLab, 1, 0);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectShape(VerticalTitle);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            CopyStyle(syncLab, 1, 0);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(CenterPlaceHolderSlideNo);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectShape(Subtitle);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            CopyStyle(syncLab, 1, 0);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectShape(CenterTitle);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            CopyStyle(syncLab, 1, 0);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(PicturePlaceHolderSlideNo);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectShape(Picture);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            CopyStyle(syncLab, 1, 0);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestCopyUnsupportedPlaceHolders(ISyncLabController syncLab)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(ChartPlaceHolderSlideNo);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectShape(Chart);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            MessageBoxUtil.ExpectMessageBoxWillPopUp(SyncLabText.ErrorDialogTitle,"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncLabText.ErrorCopySelectionInvalid, syncLab.Copy, \"Ok\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(TablePlaceHolderSlideNo);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectShape(Table);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            MessageBoxUtil.ExpectMessageBoxWillPopUp(SyncLabText.ErrorDialogTitle,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncLabText.ErrorCopySelectionInvalid, syncLab.Copy, \"Ok\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestCopyCustomPerspectiveShadow(ISyncLabController syncLab)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(CustomPerspectiveShadowSlideNo);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectShape(CustomPerspectiveShadow);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            // shadow item"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            int categoryIndex \u003d 3;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            int itemIndex \u003d 0;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            new Task(() \u003d\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "                ThreadUtil.WaitFor(1000);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "                syncLab.DialogSelectItem(categoryIndex, itemIndex);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBoxUtil.ExpectMessageBoxWillPopUp(SyncLabText.WarningDialogTitle,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                    SyncLabText.WarningSyncPerspectiveShadow, syncLab.DialogClickOk, \"Ok\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            }).Start();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            syncLab.Copy();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestErrorDialogs(ISyncLabController syncLab)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(OriginalSyncGroupToShapeSlideNo);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            // no selection copy"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            ExpectCopyButtonDisabled(syncLab);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            MessageBoxUtil.ExpectMessageBoxWillPopUp(SyncLabText.ErrorDialogTitle,"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncLabText.ErrorCopySelectionInvalid, syncLab.Copy, \"Ok\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            // 2 item selected copy"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cString\u003e shapes \u003d new List\u003cstring\u003e { Line, RotatedArrow };"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectShapes(shapes);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            ExpectCopyButtonEnabled(syncLab);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            MessageBoxUtil.ExpectMessageBoxWillPopUp(SyncLabText.ErrorDialogTitle,"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncLabText.ErrorCopySelectionInvalid, syncLab.Copy, \"Ok\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            // group selected copy"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectShape(Group);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            ExpectCopyButtonEnabled(syncLab);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            MessageBoxUtil.ExpectMessageBoxWillPopUp(SyncLabText.ErrorDialogTitle,"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncLabText.ErrorCopySelectionInvalid, syncLab.Copy, \"Ok\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            // copy blank item for the paste error dialog test"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectShape(Line);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            ExpectCopyButtonEnabled(syncLab);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "            CopyStyle(syncLab);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            // no selection sync"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(ExpectedSyncShapeToGroupSlideNo);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            ExpectCopyButtonDisabled(syncLab);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            MessageBoxUtil.ExpectMessageBoxWillPopUp(SyncLabText.ErrorDialogTitle,"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncLabText.ErrorPasteSelectionInvalid, () \u003d\u003e syncLab.Sync(0), \"Ok\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            // smart art"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(SmartArtSlideNo);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectShape(SmartArt);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            ExpectCopyButtonEnabled(syncLab);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            MessageBoxUtil.ExpectMessageBoxWillPopUp(SyncLabText.ErrorDialogTitle,"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncLabText.ErrorSmartArtUnsupported, syncLab.Copy, \"Ok\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestSync(ISyncLabController syncLab)"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "            Sync(syncLab, OriginalSyncGroupToShapeSlideNo, ExpectedSyncGroupToShapeSlideNo, CopyFromShape, RotatedArrow, 1, 0);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            Sync(syncLab, OriginalSyncShapeToGroupSlideNo, ExpectedSyncShapeToGroupSlideNo, Line, Oval, 0, 4);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        private void Sync(ISyncLabController syncLab, int originalSlide, int expectedSlide,"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "                string fromShape, string toShape, int categoryPosition, int itemPosition)"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(originalSlide);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectShape(fromShape);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "            CopyStyle(syncLab, categoryPosition, itemPosition);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectShape(toShape);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            syncLab.Sync(0);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            IsSame(originalSlide, expectedSlide, toShape);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        private void IsSame(int originalSlideNo, int expectedSlideNo, string shapeToCheck)"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide actualSlide \u003d PpOperations.SelectSlide(originalSlideNo);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape actualShape \u003d PpOperations.SelectShape(shapeToCheck)[1];"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide expectedSlide \u003d PpOperations.SelectSlide(expectedSlideNo);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape expectedShape \u003d PpOperations.SelectShape(shapeToCheck)[1];"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "            SlideUtil.IsSameLooking(expectedSlide, actualSlide);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "            SlideUtil.IsSameShape(expectedShape, actualShape);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CopyStyle(ISyncLabController syncLab)"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            new Task(() \u003d\u003e"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "                ThreadUtil.WaitFor(1000);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "                syncLab.DialogClickOk();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            }).Start();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            syncLab.Copy();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CopyStyle(ISyncLabController syncLab, int categoryPosition, int itemPosition)"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "            int[,] dialogItems \u003d new int[,] { { categoryPosition, itemPosition } };"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "            CopyStyle(syncLab, dialogItems);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CopyStyle(ISyncLabController syncLab, int[,] dialogItems)"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "            new Task(() \u003d\u003e"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "                ThreadUtil.WaitFor(1000);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "                for (int i \u003d 0; i \u003c dialogItems.GetLength(0); i++)"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "                    syncLab.DialogSelectItem(dialogItems[i, CategoryIndexPosition], dialogItems[i, FormatItemIndexPosition]);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "                syncLab.DialogClickOk();"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "            }).Start();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "            syncLab.Copy();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        private void ExpectCopyButtonEnabled(ISyncLabController syncLab)"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            ThreadUtil.WaitFor(500);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            Assert.IsTrue(syncLab.GetCopyButtonEnabledStatus());"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        private void ExpectCopyButtonDisabled(ISyncLabController syncLab)"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            ThreadUtil.WaitFor(500);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            Assert.IsFalse(syncLab.GetCopyButtonEnabledStatus());"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 18,
      "-": 233
    }
  },
  {
    "path": "PowerPointLabs/Test/FunctionalTest/TimerLabTest.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System.Collections.Generic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.VisualStudio.TestTools.UnitTesting;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using Test.Util;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using TestInterface;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "namespace Test.FunctionalTest"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    [TestClass]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public class TimerLabTest : BaseFunctionalTest"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int OriginalSlideNo \u003d 4;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int InitialTimerSlideNo \u003d 5;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int ChangeWidthSlideNo \u003d 6;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int ChangeHeightSlideNo \u003d 7;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int RecreateBodySlideNo \u003d 8;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int ChangeLineColorAndRecreateTimeMarkerSlideNo \u003d 9;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int ChangeDurationSlideNo \u003d 10;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int ChangeTextColorAndRecreateSliderSlideNo \u003d 11;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int ChangeDurationAndWidthSlideNo \u003d 12;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int DurationInvalidSlideNo \u003d 13;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private const int CountdownCheckedSlideNo \u003d 14;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private const int ChangeDurationWithCountdownSlideNo \u003d 15;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private const int CountdownAndNonMultipleDenominationDurationSlideNo \u003d 16;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string TimerBody \u003d \"TimerBody\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string TimerLineMarkerGroup \u003d \"TimerLineMarkerGroup\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string TimerTimeMarkerGroup \u003d \"TimerTimeMarkerGroup\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string TimerSliderBody \u003d \"TimerSliderBody\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string TimerSliderHead \u003d \"TimerSliderHead\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override string GetTestingSlideName()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            return \"TimerLab\\\\TimerLab.pptx\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"FT\")]"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        public void FT_TimerLabTest()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            ITimerLabController timerLab \u003d PplFeatures.TimerLab;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            timerLab.OpenPane();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            TestCreateInitialTimer(timerLab);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            TestEditTimerWidth(timerLab);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            TestEditTimerHeight(timerLab);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            TestDeleteTimerBody(timerLab);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            TestEditLineColorAndDeleteTimeMarker(timerLab);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            TestEditTimerDuration(timerLab);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            TestEditTextColorAndDeleteSlider(timerLab);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            TestEditDurationAndWidth(timerLab);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            TestInvalidDuration(timerLab);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            TestEditCountdownState(timerLab);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            TestEditDurationWithCountdownTimer(timerLab);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            TestNonMultipleDenominationDurationWithCountdownTimer(timerLab);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestCreateInitialTimer(ITimerLabController timerLab)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(OriginalSlideNo);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            timerLab.SetDurationTextBoxValue(1.05);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            timerLab.SetCountdownCheckBoxState(false);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            timerLab.ClickCreateButton();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            AssertIsSame(OriginalSlideNo, InitialTimerSlideNo);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestEditTimerWidth(ITimerLabController timerLab)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(OriginalSlideNo);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            timerLab.SetWidthTextBoxValue(250);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            AssertIsSame(OriginalSlideNo, ChangeWidthSlideNo);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestEditTimerHeight(ITimerLabController timerLab)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(OriginalSlideNo);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            timerLab.SetHeightTextBoxValue(400);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            AssertIsSame(OriginalSlideNo, ChangeHeightSlideNo);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestDeleteTimerBody(ITimerLabController timerLab)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(OriginalSlideNo);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange shapes \u003d PpOperations.SelectShape(TimerBody);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            shapes.Delete();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            MessageBoxUtil.ExpectMessageBoxWillPopUp(\"Error\","
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "               \"Only one timer allowed per slide.\", timerLab.ClickCreateButton, \"Ok\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            AssertIsSame(OriginalSlideNo, RecreateBodySlideNo);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestEditLineColorAndDeleteTimeMarker(ITimerLabController timerLab)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(ChangeLineColorAndRecreateTimeMarkerSlideNo);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            int expectedColor \u003d PpOperations.SelectShape(TimerLineMarkerGroup)[1].Line.ForeColor.RGB;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(OriginalSlideNo);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange lineMarkerGroup \u003d PpOperations.SelectShape(TimerLineMarkerGroup);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            lineMarkerGroup.Line.ForeColor.RGB \u003d expectedColor;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange timeMarkerGroup \u003d PpOperations.SelectShape(TimerTimeMarkerGroup);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            timeMarkerGroup.Delete();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            MessageBoxUtil.ExpectMessageBoxWillPopUp(\"Error\","
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "              \"Only one timer allowed per slide.\", timerLab.ClickCreateButton, \"Ok\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            AssertIsSame(OriginalSlideNo, ChangeLineColorAndRecreateTimeMarkerSlideNo);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestEditTimerDuration(ITimerLabController timerLab)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(OriginalSlideNo);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            timerLab.SetDurationTextBoxValue(0.07);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            AssertIsSame(OriginalSlideNo, ChangeDurationSlideNo);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestEditTextColorAndDeleteSlider(ITimerLabController timerLab)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(ChangeTextColorAndRecreateSliderSlideNo);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            int expectedColor \u003d PpOperations.SelectShape(TimerTimeMarkerGroup)[1].TextFrame.TextRange.Font.Color.RGB;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(OriginalSlideNo);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange timeMarkerGroup \u003d PpOperations.SelectShape(TimerTimeMarkerGroup);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            timeMarkerGroup.TextFrame.TextRange.Font.Color.RGB \u003d expectedColor;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cstring\u003e sliderComponentNames \u003d new List\u003cstring\u003e { TimerSliderHead, TimerSliderBody };"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange sliderComponents \u003d PpOperations.SelectShapes(sliderComponentNames);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderComponents.Delete();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            MessageBoxUtil.ExpectMessageBoxWillPopUp(\"Error\","
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "              \"Only one timer allowed per slide.\", timerLab.ClickCreateButton, \"Ok\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            AssertIsSame(OriginalSlideNo, ChangeTextColorAndRecreateSliderSlideNo);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestEditDurationAndWidth(ITimerLabController timerLab)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(OriginalSlideNo);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            timerLab.SetDurationTextBoxValue(4.56);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            timerLab.SetWidthSliderValue(654);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            AssertIsSame(OriginalSlideNo, ChangeDurationAndWidthSlideNo);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestInvalidDuration(ITimerLabController timerLab)"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(OriginalSlideNo);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            timerLab.SetDurationTextBoxValue(5.67);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "            AssertIsSame(OriginalSlideNo, DurationInvalidSlideNo);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void TestEditCountdownState(ITimerLabController timerLab)"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PpOperations.SelectSlide(OriginalSlideNo);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            timerLab.SetCountdownCheckBoxState(true);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            AssertIsSame(OriginalSlideNo, CountdownCheckedSlideNo);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void TestEditDurationWithCountdownTimer(ITimerLabController timerLab)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PpOperations.SelectSlide(OriginalSlideNo);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            timerLab.SetDurationTextBoxValue(0.30);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            AssertIsSame(OriginalSlideNo, ChangeDurationWithCountdownSlideNo);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        private void TestNonMultipleDenominationDurationWithCountdownTimer(ITimerLabController timerLab)"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            PpOperations.SelectSlide(OriginalSlideNo);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            timerLab.SetDurationTextBoxValue(4.16);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "blewjy"
        },
        "content": "            AssertIsSame(OriginalSlideNo, CountdownAndNonMultipleDenominationDurationSlideNo);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AssertIsSame(int actualSlideNo, int expectedSlideNo)"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide actualSlide \u003d PpOperations.SelectSlide(actualSlideNo);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide expectedSlide \u003d PpOperations.SelectSlide(expectedSlideNo);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            SlideUtil.IsSameShapes(expectedSlide, actualSlide);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            SlideUtil.IsSameAnimations(expectedSlide, actualSlide);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 31,
      "-": 155
    }
  },
  {
    "path": "PowerPointLabs/Test/UnitTest/SyncLab/SyncLabFormatPaneItemTest.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "﻿using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "using Microsoft.VisualStudio.TestTools.UnitTesting;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "using PowerPointLabs.SyncLab.ObjectFormats;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "using PowerPointLabs.SyncLab.Views;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "using System;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "namespace Test.UnitTest.SyncLab"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    [TestClass]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    public class SyncLabFormatPaneItemTest : BaseSyncLabTest"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const string TestName \u003d \"TestingN@meeeeeeeeeeeeeeeeee\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private string[] _testNodesNames;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        [TestInitialize]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        public void TestInitialize()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            _testNodesNames \u003d GetAllFormatNames();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        public void TestSyncPaneTooltipName()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            FormatTreeNode[] nodes \u003d SyncFormatConstants.FormatCategories;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            SyncFormatPaneItem item \u003d new SyncFormatPaneItemStub(nodes);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            item.Text \u003d TestName;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            Assert.AreEqual(TestName, item.toolTipName.Text);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        public void TestSyncPaneTooltipBody()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            string[] nodes1 \u003d { _testNodesNames[0], _testNodesNames[13], _testNodesNames[16] };"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            string[] nodes2 \u003d { _testNodesNames[4], _testNodesNames[6], _testNodesNames[8] };"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            string[] nodes3 \u003d { _testNodesNames[7], _testNodesNames[11], _testNodesNames[18] };"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            TestFollowingNodes(nodes1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            TestFollowingNodes(nodes2);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            TestFollowingNodes(nodes3);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        /// Get the node names of all format nodes."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        /// \u003creturns\u003e\u003c/returns\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private string[] GetAllFormatNames()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            Queue\u003cFormatTreeNode\u003e queue \u003d new Queue\u003cFormatTreeNode\u003e(SyncFormatConstants.FormatCategories);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            List\u003cstring\u003e allNames \u003d new List\u003cstring\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            while (queue.Count \u003e 0)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                FormatTreeNode node \u003d queue.Dequeue();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                string fullName \u003d node.Name;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                FormatTreeNode parentNode \u003d node.ParentNode;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                while (parentNode !\u003d null)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    fullName \u003d parentNode.Name + SyncFormatConstants.FormatNameSeparator + fullName;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    parentNode \u003d parentNode.ParentNode;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                allNames.Add(fullName);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                if (node.ChildrenNodes \u003d\u003d null)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                foreach (FormatTreeNode child in node.ChildrenNodes)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    queue.Enqueue(child);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            return allNames.ToArray();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private FormatTreeNode[] SelectFormats(FormatTreeNode[] formats, string[] formatNames)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            foreach (string name in formatNames)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                GetEndNode(formats, name).IsChecked \u003d true;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            return formats;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        /// Gets the node at the end of the format tree, as specified by the string name"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        /// Returns early with the last matching node if the next node cannot be found"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private FormatTreeNode GetEndNode(FormatTreeNode[] formats, string name)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            string[] path \u003d name.Split(SyncFormatConstants.FormatNameSeparator.ToCharArray());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            FormatTreeNode currentRoot \u003d new FormatTreeNode(\"root\", formats);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            foreach (string nodeName in path)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                int nextIndex \u003d LastIndexOf(currentRoot.ChildrenNodes, nodeName);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                if (nextIndex \u003c 0)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                currentRoot \u003d currentRoot.ChildrenNodes[nextIndex];"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            return currentRoot;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private int LastIndexOf(FormatTreeNode[] nodes, string name)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            int index \u003d nodes.Length - 1;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            while (index \u003e\u003d 0)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                if (nodes[index].Name.Equals(name))"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    return index;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                index--;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            return index;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        /// Test the node names displayed by the tooltip against the expected node names."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private void TestFollowingNodes(string[] nodeNames)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            FormatTreeNode[] nodes \u003d SyncFormatConstants.FormatCategories;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            nodes \u003d SelectFormats(SyncFormatConstants.FormatCategories, nodeNames);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            SyncFormatPaneItem item \u003d new SyncFormatPaneItemStub(nodes);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            string[] expected \u003d nodeNames;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            string[] actual \u003d item.toolTipBody.Text.Split(\"\\n\".ToCharArray());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            Array.Sort(expected);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            Array.Sort(actual);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            Assert.AreEqual(String.Join(\"\\n\", expected), String.Join(\"\\n\", actual));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 140
    }
  },
  {
    "path": "PowerPointLabs/Test/UnitTest/SyncLab/SyncLabTextAlignmentTest.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "﻿using Microsoft.VisualStudio.TestTools.UnitTesting;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "using PowerPointLabs.SyncLab.ObjectFormats;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "namespace Test.UnitTest.SyncLab"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    [TestClass]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    public class SyncLabTextAlignmentTest : BaseSyncLabTest"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const int HorizontalAlignmentSlidesNo \u003d 4;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const int HorizontalExpectedSlidesNo \u003d 5;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const int VerticalAlignmentSlidesNo \u003d 6;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const int VerticalExpectedSlidesNo \u003d 7;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const string SourceSuffix \u003d \" source\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const string TargetSuffix \u003d \" target\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        //Types of text formats"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const string Left \u003d \"Left\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const string Center \u003d \"Center\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const string Right \u003d \"Right\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const string Justify \u003d \"Justify\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const string Top \u003d \"Top\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const string Middle \u003d \"Middle\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const string Bottom \u003d \"Bottom\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        protected override string GetTestingSlideName()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            return \"SyncLab\\\\SyncLab_Text.pptx\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        public void TestSyncHorizontalAlignment()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            string[] prefixes \u003d { Left, Center, Right, Justify };"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            foreach (string prefix in prefixes)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Microsoft.Office.Interop.PowerPoint.Shape formatShape \u003d"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    GetShape(HorizontalAlignmentSlidesNo, prefix + SourceSuffix);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Microsoft.Office.Interop.PowerPoint.Shape newShape \u003d"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    GetShape(HorizontalAlignmentSlidesNo, prefix + TargetSuffix);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                new TextHorizontalAlignmentFormat().SyncFormat(formatShape, newShape);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                CheckTextAlignment(prefix + TargetSuffix,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    HorizontalAlignmentSlidesNo, HorizontalExpectedSlidesNo);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            CompareSlides(HorizontalAlignmentSlidesNo, HorizontalExpectedSlidesNo);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        public void TestSyncVerticalAlignment()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            string[] prefixes \u003d { Top, Middle, Bottom };"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            foreach (string prefix in prefixes)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Microsoft.Office.Interop.PowerPoint.Shape formatShape \u003d"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    GetShape(VerticalAlignmentSlidesNo, prefix + SourceSuffix);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Microsoft.Office.Interop.PowerPoint.Shape newShape \u003d"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    GetShape(VerticalAlignmentSlidesNo, prefix + TargetSuffix);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                new TextVerticalAlignmentFormat().SyncFormat(formatShape, newShape);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                CheckTextAlignment(prefix + TargetSuffix,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    VerticalAlignmentSlidesNo, VerticalExpectedSlidesNo);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            CompareSlides(VerticalAlignmentSlidesNo, VerticalExpectedSlidesNo);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        //Changes in text alignment are too minute for CompareSlide to detect so we need to check them manually"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        protected void CheckTextAlignment(string shape, int actualShapesSlideNo, int expectedShapesSlideNo)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            Microsoft.Office.Interop.PowerPoint.Shape actualShape \u003d GetShape(actualShapesSlideNo, shape);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            Microsoft.Office.Interop.PowerPoint.Shape expectedShape \u003d GetShape(expectedShapesSlideNo, shape);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            Microsoft.Office.Interop.PowerPoint.TextFrame2 actualTextFrame \u003d actualShape.TextFrame2;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            Microsoft.Office.Interop.PowerPoint.TextFrame2 expectedTextFrame \u003d expectedShape.TextFrame2;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            Assert.IsTrue(actualTextFrame.TextRange.ParagraphFormat.Alignment \u003d\u003d expectedTextFrame.TextRange.ParagraphFormat.Alignment"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                \u0026\u0026 actualTextFrame.HorizontalAnchor \u003d\u003d expectedTextFrame.HorizontalAnchor"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                \u0026\u0026 actualTextFrame.VerticalAnchor \u003d\u003d expectedTextFrame.VerticalAnchor,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                \"Text alignment does not match expected text alignment.\" +"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                \"Expected paragraphAlignment: {0}, horizontalAlignment:{1}, verticalAlignment: {2}.\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    + \"Actual paragraphAlignment: {3}, horizontalAlignment:{4}, verticalAlignment:{5}.\","
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                expectedTextFrame.TextRange.ParagraphFormat.Alignment,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                expectedTextFrame.HorizontalAnchor, expectedTextFrame.VerticalAnchor,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                actualTextFrame.TextRange.ParagraphFormat.Alignment,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                actualTextFrame.HorizontalAnchor, actualTextFrame.VerticalAnchor);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 93
    }
  },
  {
    "path": "PowerPointLabs/Test/UnitTest/SyncLab/SyncLabTextLineSpacing.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "﻿using Microsoft.VisualStudio.TestTools.UnitTesting;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "using PowerPointLabs.SyncLab.ObjectFormats;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "namespace Test.UnitTest.SyncLab"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    [TestClass]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    public class SyncTestLineSpacing : BaseSyncLabTest"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const int SpacingSlidesNo \u003d 12;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const int SpacingExpectedSlidesNo \u003d 13;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const string SourceSuffix \u003d \" source\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const string TargetSuffix \u003d \" target\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        //Types of text formats"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const string Single \u003d \"Single\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const string S1_5 \u003d \"1_5\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const string Double \u003d \"Double\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const string Exactly40 \u003d \"Exactly40\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const string Multiple3 \u003d \"Multiple3\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        protected override string GetTestingSlideName()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            return \"SyncLab\\\\SyncLab_Text.pptx\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        public void TestSyncLineSpacing()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            string[] prefixes \u003d { Single, S1_5, Double, Exactly40, Multiple3 };"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            foreach (string prefix in prefixes)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Microsoft.Office.Interop.PowerPoint.Shape formatShape \u003d"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    GetShape(SpacingSlidesNo, prefix + SourceSuffix);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Microsoft.Office.Interop.PowerPoint.Shape newShape \u003d"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    GetShape(SpacingSlidesNo, prefix + TargetSuffix);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                new TextLineSpacingFormat().SyncFormat(formatShape, newShape);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                CheckTextLineSpacing(prefix + TargetSuffix,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    SpacingSlidesNo, SpacingExpectedSlidesNo);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            CompareSlides(SpacingSlidesNo, SpacingExpectedSlidesNo);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        //Changes in text alignment are too minute for CompareSlide to detect so we need to check them manually"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        protected void CheckTextLineSpacing(string shape, int actualShapesSlideNo, int expectedShapesSlideNo)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            Microsoft.Office.Interop.PowerPoint.Shape actualShape \u003d GetShape(actualShapesSlideNo, shape);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            Microsoft.Office.Interop.PowerPoint.Shape expectedShape \u003d GetShape(expectedShapesSlideNo, shape);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            Microsoft.Office.Core.ParagraphFormat2 actualPFormat \u003d actualShape.TextFrame2.TextRange.ParagraphFormat;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            Microsoft.Office.Core.ParagraphFormat2 expectedPFormat \u003d expectedShape.TextFrame2.TextRange.ParagraphFormat;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            Assert.IsTrue(actualPFormat.SpaceBefore \u003d\u003d expectedPFormat.SpaceBefore \u0026\u0026"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                actualPFormat.SpaceWithin \u003d\u003d expectedPFormat.SpaceWithin \u0026\u0026"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                actualPFormat.SpaceAfter \u003d\u003d expectedPFormat.SpaceAfter,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                \"Text line spacing does not match expected line spacing.\" +"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                \"Expected before:{0}, within:{1}, after:{2}. \" +"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                \"Actual before:{3}, within:{4}, after:{5}.\","
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                expectedPFormat.SpaceBefore, expectedPFormat.SpaceWithin, expectedPFormat.SpaceAfter,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                actualPFormat.SpaceBefore, actualPFormat.SpaceWithin, actualPFormat.SpaceAfter);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 66
    }
  },
  {
    "path": "PowerPointLabs/Test/UnitTest/SyncLab/SyncLabTextOrientation.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "﻿using Microsoft.VisualStudio.TestTools.UnitTesting;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "using PowerPointLabs.SyncLab.ObjectFormats;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "namespace Test.UnitTest.SyncLab"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    [TestClass]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    public class SyncLabTextOrientation : BaseSyncLabTest"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const int OrientationSlidesNo \u003d 9;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const int OrientationExpectedSlidesNo \u003d 10;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const string SourceSuffix \u003d \" source\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const string TargetSuffix \u003d \" target\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        //Types of text formats"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const string Horizontal \u003d \"Horizontal\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const string Vertical \u003d \"Vertical\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const string Rotate90 \u003d \"Rotate90\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const string Rotate270 \u003d \"Rotate270\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const string Stacked \u003d \"Stacked\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        protected override string GetTestingSlideName()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            return \"SyncLab\\\\SyncLab_Text.pptx\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        public void TestSyncOrientation()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            string[] prefixes \u003d { Horizontal, Vertical, Rotate90, Rotate270, Stacked };"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            foreach (string prefix in prefixes)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Microsoft.Office.Interop.PowerPoint.Shape formatShape \u003d"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    GetShape(OrientationSlidesNo, prefix + SourceSuffix);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                Microsoft.Office.Interop.PowerPoint.Shape newShape \u003d"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    GetShape(OrientationSlidesNo, prefix + TargetSuffix);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                new TextOrientationFormat().SyncFormat(formatShape, newShape);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                CheckTextOrientation(prefix + TargetSuffix,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    OrientationSlidesNo, OrientationExpectedSlidesNo);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            CompareSlides(OrientationSlidesNo, OrientationExpectedSlidesNo);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        //Changes in text alignment are too minute for CompareSlide to detect so we need to check them manually"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        protected void CheckTextOrientation(string shape, int actualShapesSlideNo, int expectedShapesSlideNo)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            Microsoft.Office.Interop.PowerPoint.Shape actualShape \u003d GetShape(actualShapesSlideNo, shape);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            Microsoft.Office.Interop.PowerPoint.Shape expectedShape \u003d GetShape(expectedShapesSlideNo, shape);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            Microsoft.Office.Interop.PowerPoint.TextFrame2 actualTextFrame \u003d actualShape.TextFrame2;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            Microsoft.Office.Interop.PowerPoint.TextFrame2 expectedTextFrame \u003d expectedShape.TextFrame2;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            Assert.IsTrue(actualTextFrame.Orientation \u003d\u003d expectedTextFrame.Orientation,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                \"Text orientation does not match expected text orientation.\" +"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                \"Expected orientation:{0}. Actual orientation:{1}.\","
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                expectedTextFrame.Orientation, actualTextFrame.Orientation);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 62
    }
  },
  {
    "path": "PowerPointLabs/Test/Util/MessageBoxUtil.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Text;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Threading.Tasks;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.VisualStudio.TestTools.UnitTesting;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "namespace Test.Util"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    class MessageBoxUtil"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private const String MessageBoxIdentifier \u003d \"#32770\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void ExpectMessageBoxWillPopUp(string title, string expContent, Action messageBoxTrigger,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "            string buttonNameToClick \u003d null, int retryCount \u003d 5, int waitTime \u003d 1000)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            Task expect \u003d ExpectMessageBoxWillPopUp(title, expContent, buttonNameToClick, retryCount, waitTime);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            messageBoxTrigger.Invoke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            VerifyExpectation(expect, retryCount, waitTime);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        public static void ExpectMessageBoxWillNotPopUp(string title, string expContent, Action messageBoxTrigger,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            string buttonNameToClick \u003d null, int retryCount \u003d 5, int waitTime \u003d 1000)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            Task expect \u003d ExpectMessageBoxWillNotPopUp(title, expContent, buttonNameToClick, retryCount, waitTime);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            messageBoxTrigger.Invoke();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            VerifyExpectation(expect, retryCount, waitTime);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        // This method must be called before PplFeatures,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        // otherwise, PplFeatures will block the test."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        private static Task ExpectMessageBoxWillPopUp(string title, string expContent,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            string buttonNameToClick, int retryCount, int waitTime)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            // MessageBox in pptlabs will block the whole thread,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            // so multi-thread is needed here."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            Task taskToVerify \u003d new Task(() \u003d\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                // try to find messagebox window"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                IntPtr msgBoxHandle \u003d IntPtr.Zero;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                while (msgBoxHandle \u003d\u003d IntPtr.Zero \u0026\u0026 retryCount \u003e 0)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    msgBoxHandle \u003d NativeUtil.FindWindow(MessageBoxIdentifier, title);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (msgBoxHandle \u003d\u003d IntPtr.Zero)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                        ThreadUtil.WaitFor(waitTime);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                        retryCount--;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                    else"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                if (msgBoxHandle \u003d\u003d IntPtr.Zero)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                    Assert.Fail(\"Failed to find message box.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                // try to find text label in the message box"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                IntPtr dlgHandle \u003d NativeUtil.GetDlgItem(msgBoxHandle, 0xFFFF);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                Assert.AreNotEqual(IntPtr.Zero, dlgHandle, \"Failed to find label in the messagebox.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                const int nchars \u003d 1024;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                StringBuilder actualContentBuilder \u003d new StringBuilder(nchars);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                int isGetTextSuccessful \u003d NativeUtil.GetWindowText(dlgHandle, actualContentBuilder, nchars);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                // close the message box, otherwise it will block the test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                CloseMessageBox(msgBoxHandle, buttonNameToClick);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                if (expContent !\u003d \"{*}\")"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                    Assert.IsTrue(isGetTextSuccessful \u003e 0, \"Failed to get text in the label of messagebox.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                    Assert.AreEqual(expContent, actualContentBuilder.ToString(), true, \"Different MessageBox content.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            taskToVerify.Start();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            return taskToVerify;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        // This method must be called before PplFeatures,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        // otherwise, PplFeatures will block the test."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        private static Task ExpectMessageBoxWillNotPopUp(string title, string expContent,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            string buttonNameToClick, int retryCount, int waitTime)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            // MessageBox in pptlabs will block the whole thread,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            // so multi-thread is needed here."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            Task taskToVerify \u003d new Task(() \u003d\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                // try to find messagebox window"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                IntPtr msgBoxHandle \u003d IntPtr.Zero;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                while (msgBoxHandle \u003d\u003d IntPtr.Zero \u0026\u0026 retryCount \u003e 0)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    msgBoxHandle \u003d NativeUtil.FindWindow(MessageBoxIdentifier, title);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    if (msgBoxHandle \u003d\u003d IntPtr.Zero)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                        ThreadUtil.WaitFor(waitTime);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                        retryCount--;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    else"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                if (msgBoxHandle !\u003d IntPtr.Zero)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                    Assert.Fail(\"Message Box should not be open.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            });"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            taskToVerify.Start();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "            return taskToVerify;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "YuPeiHenry"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        private static void VerifyExpectation(Task taskToVerify, int retryCount, int waitTime)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            // wait for task to finish"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            while (taskToVerify.Status \u003d\u003d TaskStatus.Running \u0026\u0026 retryCount \u003e 0)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                ThreadUtil.WaitFor(waitTime);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                retryCount--;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            // assert no exception during task\u0027s execution"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            if (taskToVerify.Exception !\u003d null)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                Assert.AreEqual(null, taskToVerify.Exception, \"Failed to verify expectation. Exception: {0}\","
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                    taskToVerify.Exception.Message);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            // don\u0027t end so fast.."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            ThreadUtil.WaitFor(500);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        private static void CloseMessageBox(IntPtr msgBoxHandle, string buttonName)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            if (buttonName \u003d\u003d null)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                // Simple close message box"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                NativeUtil.SetForegroundWindow(msgBoxHandle);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                NativeUtil.SendMessage(msgBoxHandle, 0x0112 /*WM_SYSCOMMAND*/, new IntPtr(0xF060 /*SC_CLOSE*/), IntPtr.Zero);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                // This may be flaky.. if there\u0027re more than one windows pop up at the same time.."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "                // it will affect clicking the button"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "                IntPtr btnHandle \u003d NativeUtil.FindWindowEx(msgBoxHandle, IntPtr.Zero, \"Button\", buttonName);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                Assert.AreNotEqual(IntPtr.Zero, btnHandle, \"Failed to find button in the messagebox.\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                NativeUtil.SetForegroundWindow(msgBoxHandle);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                NativeUtil.SendMessage(btnHandle, 0x0201 /*left button down*/, IntPtr.Zero, IntPtr.Zero);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                NativeUtil.SendMessage(btnHandle, 0x0202 /*left button up*/, IntPtr.Zero, IntPtr.Zero);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuPeiHenry": 44,
      "-": 106
    }
  },
  {
    "path": "PowerPointLabs/TestInterface/IColorsLabController.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blewjy"
        },
        "content": "﻿using System.Collections.Generic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blewjy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using Point \u003d System.Windows.Point;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blewjy"
        },
        "content": "using Rectangle \u003d System.Windows.Shapes.Rectangle;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "namespace TestInterface"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public interface IColorsLabController"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        void OpenPane();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        Point GetApplyTextButtonLocation();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        Point GetApplyLineButtonLocation();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        Point GetApplyFillButtonLocation();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        Point GetMainColorRectangleLocation();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        Point GetEyeDropperButtonLocation();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        void SlideBrightnessSlider(int value);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        void SlideSaturationSlider(int value);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        void ClickMonochromeRect(int index);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        void ClickAnalogousRect(int index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        void ClickComplementaryRect(int index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        void ClickTriadicRect(int index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        void ClickTetradicRect(int index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        void LoadFavoriteColors(string filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        void ResetFavoriteColors();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        void ClearFavoriteColors();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        List\u003cColor\u003e GetCurrentFavoritePanel();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 21,
      "-": 13
    }
  },
  {
    "path": "PowerPointLabs/TestInterface/IShapesLabController.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System.Collections.Generic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "namespace TestInterface"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public interface IShapesLabController"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        void OpenPane();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        void SaveSelectedShapes();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        IShapesLabLabeledThumbnail GetLabeledThumbnail(string labelName);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        void ImportLibrary(string pathToLibrary);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        void ImportShape(string pathToShape);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cISlideData\u003e FetchShapeGalleryPresentationData();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        void ClickAddShapeButton();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        bool GetAddShapeButtonStatus();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 1,
      "-": 15
    }
  },
  {
    "path": "PowerPointLabs/TestInterface/ISyncLabController.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿namespace TestInterface"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    public interface ISyncLabController"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        void OpenPane();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        void Copy();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        void Sync(int index);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        void DialogSelectItem(int categoryIndex, int itemIndex);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        void DialogClickOk();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        bool GetCopyButtonEnabledStatus();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 2,
      "-": 15
    }
  },
  {
    "path": "PowerPointLabs/TestInterface/ITimerLabController.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿namespace TestInterface"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    public interface ITimerLabController"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        void OpenPane();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        void ClickCreateButton();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        void SetDurationTextBoxValue(double value);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blewjy"
        },
        "content": "        void SetCountdownCheckBoxState(bool isChecked);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        void SetHeightTextBoxValue(int value);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        void SetWidthTextBoxValue(int value);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        void SetHeightSliderValue(int value);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        void SetWidthSliderValue(int value);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blewjy": 1,
      "-": 15
    }
  }
]
