[
  {
    "path": "GenericGameInterface.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GenericGameInterface.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 22/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol GenericGameInterface {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 10
    }
  },
  {
    "path": "SailingThroughHistory/AppDelegate.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  AppDelegate.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 14/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import FirebaseCore"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "@UIApplicationMain"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class AppDelegate: UIResponder, UIApplicationDelegate {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var window: UIWindow?"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func application(_ application: UIApplication,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                     didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -\u003e Bool {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            FirebaseApp.configure()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return true"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func applicationWillResignActive(_ application: UIApplication) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func applicationDidEnterBackground(_ application: UIApplication) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func applicationWillEnterForeground(_ application: UIApplication) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func applicationDidBecomeActive(_ application: UIApplication) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func applicationWillTerminate(_ application: UIApplication) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 37
    }
  },
  {
    "path": "SailingThroughHistory/Common/Array+Rotate.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Array.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 21/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension Array {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func rotatedLeft(by distance: UInt) -\u003e Array {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return self.indices"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .map { self[($0 + Int(distance)) % self.count] }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 14
    }
  },
  {
    "path": "SailingThroughHistory/Common/CGPoint+Arithmetic.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  CGPoint+Arithmetic.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 14/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension CGPoint {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static func + (point1: CGPoint, point2: CGPoint) -\u003e CGPoint {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return CGPoint(x: point1.x + point2.x, y: point1.y + point2.y)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static func * (point: CGPoint, multiplier: CGFloat) -\u003e CGPoint {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return CGPoint(x: point.x * multiplier, y: point.y * multiplier)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 19
    }
  },
  {
    "path": "SailingThroughHistory/Common/CGRect+Rect.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  CGRect+Rect.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 25/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension CGRect {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(fromRect rect: Rect) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.init(x: rect.originX, y: rect.originY, width: rect.width, height: rect.height)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func toRect() -\u003e Rect {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let rect \u003d Rect(originX: Double(origin.x), originY: Double(origin.y),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                              height: Double(height), width: Double(width))"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return rect"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 22
    }
  },
  {
    "path": "SailingThroughHistory/Common/CGRect+Translate.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  CGRect+Translate.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 16/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension CGRect {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Calculates the CGRect for a given bounds that\u0027s equivalent to the input CGRect contained in another bound."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - otherBounds: The bounds that contain the other frame."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - otherFrame: The frame to match."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - bounds: The current bounds."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static func translatingFrom(otherBounds: Rect, otherFrame: Rect, to bounds: CGRect) -\u003e CGRect {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let otherBoundsCg \u003d CGRect(fromRect: otherBounds)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let otherFrameCg \u003d CGRect(fromRect: otherFrame)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let ratio \u003d min(bounds.width / otherBoundsCg.width, bounds.height / otherBoundsCg.height)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        /// Transforms the size of the rect to match."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var newRect \u003d  otherFrameCg.applying("
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            CGAffineTransform(scaleX: 1 / otherFrameCg.width, y: 1 / otherFrameCg.height))"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        newRect \u003d newRect.applying("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            CGAffineTransform(scaleX: ratio * otherFrameCg.width, y: ratio * otherFrameCg.height))"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        /// Changes the position of the rect to match."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        newRect \u003d newRect.applying("
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            CGAffineTransform(translationX: -newRect.origin.x, y: -newRect.origin.y))"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        newRect \u003d newRect.applying("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            CGAffineTransform(translationX: ratio * otherFrameCg.origin.x, y: ratio * otherFrameCg.origin.y))"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return newRect"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 37
    }
  },
  {
    "path": "SailingThroughHistory/Common/ComparablePair.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  ComparablePair.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 11/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "/// Compare by weight"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "struct ComparablePair\u003cT\u003e: Comparable {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    public let object: T"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    public let weight: Double"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    init(object: T, weight: Double) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.object \u003d object"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.weight \u003d weight"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    static func \u003c(lhs: ComparablePair, rhs: ComparablePair) -\u003e Bool {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "        return lhs.weight \u003c rhs.weight"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    static func \u003d\u003d(lhs: ComparablePair, rhs: ComparablePair) -\u003e Bool {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        return lhs.weight \u003d\u003d rhs.weight"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 28
    }
  },
  {
    "path": "SailingThroughHistory/Common/Double+Lerp.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Double+Lerp.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 18/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "extension Double {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func clamp(_ value: Double, _ lower: Double, _ upper: Double) -\u003e Double {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return max(min(value, upper), lower)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func lerp(_ alpha: Double, _ lower: Double, _ upper: Double) -\u003e Double {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return alpha * lower + (1.0 - alpha) * upper"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 17
    }
  },
  {
    "path": "SailingThroughHistory/Common/Float+Epsilon.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Float+Epsilon.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 20/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "extension Float {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    // largest value engine is designed to handle"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let infinity: Float \u003d 1e9"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let epsilon: Float \u003d 1e-6"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let sqrt3: Float \u003d sqrt(3)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    // randoms between 0 and 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func random() -\u003e Float {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return Float(arc4random()) / Float(UINT32_MAX)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 21
    }
  },
  {
    "path": "SailingThroughHistory/Common/GameObject.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  GameObject.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 16/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class GameObject: Codable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let frame: GameVariable\u003cRect\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let container \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.frame \u003d GameVariable(value: try container.decode(Rect.self, forKey: .frame))"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(frame.value, forKey: .frame)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.frame \u003d GameVariable(value: Rect())"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(frame: Rect) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.frame \u003d GameVariable(value: frame)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscibeToFrame(with callback: @escaping (Rect) -\u003e Void) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        frame.subscribe(with: callback)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func set(frame: Rect) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.frame.value \u003d frame"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "    func addToMap(map: Map) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "        map.addGameObject(gameObject: self)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case frame"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension GameObject: Hashable {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func hash(into hasher: inout Hasher) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        hasher.combine(ObjectIdentifier(self))"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static func \u003d\u003d (lhs: GameObject, rhs: GameObject) -\u003e Bool {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return ObjectIdentifier(lhs) \u003d\u003d ObjectIdentifier(rhs)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 9,
      "Yang Shuqi": 1,
      "Jason Chong": 42,
      "yuhongherald": 3
    }
  },
  {
    "path": "SailingThroughHistory/Common/Int+Lerp.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Int+Lerp.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 20/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "extension Int {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func clamp(_ value: Int, _ lower: Int, _ upper: Int) -\u003e Int {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        if lower \u003e value {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return lower"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        } else if upper \u003c value {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return upper"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return value"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 18
    }
  },
  {
    "path": "SailingThroughHistory/Common/PriorityQueue.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "// Copyright (c) 2018 NUS CS3217. All rights reserved."
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": " The `PriorityQueue` accepts and maintains the elements in an order specified by"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": " their priority. For example, a Minimum Priority Queue of integers will serve"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": " (poll) the smallest integer first."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": " Elements with the same priority are allowed, and such elements may be served in"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": " any order arbitrarily."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": " `PriorityQueue` is a generic type with a type parameter `T` that has to be"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": " `Comparable` so that `T` can be compared."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": " - Authors: CS3217"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": " - Date: 2018"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "struct PriorityQueue\u003cT: Comparable\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// Creates either a Min or Max `PriorityQueue`. Defaults to `min \u003d true`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// - Parameter min: Whether to return smallest elements first."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// Uses a binary heap implementation, root at index 0"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// Given element at index i, its left child is 2i + 1 and right 2i + 2"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    private let isMin: Bool"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var backEndArray \u003d [T]()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "    "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    init(min: Bool \u003d true) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        isMin \u003d min"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// Adds the element."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "    mutating func add(_ item: T) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "        backEndArray.append(item)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "        bubbleUp(index: count - 1)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// Returns the currently highest priority element."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// - Returns: the element if not nil"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "    func peek() -\u003e T? {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "        return backEndArray.first"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// Removes and returns the highest priority element."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// - Returns: the element if not nil"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": "    mutating func poll() -\u003e T? {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let highestPriorityElement \u003d peek() else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let elementToSwap \u003d backEndArray.popLast() else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "henry"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": "        if count \u003d\u003d 0 {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": "            return highestPriorityElement"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "henry"
        },
        "content": "        backEndArray[0] \u003d elementToSwap"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": "        bubbleDown(index: 0)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": "        return highestPriorityElement"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// The number of elements in the `PriorityQueue`."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": "    var count: Int {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": "        return backEndArray.count"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// Whether the `PriorityQueue` is empty."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "henry"
        },
        "content": "    var isEmpty: Bool {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "henry"
        },
        "content": "        return backEndArray.isEmpty"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "henry"
        },
        "content": "    "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// Moves the element down the heap until child elements"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// are not higher priority than the element"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": "    private mutating func bubbleDown(index: Int) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": "        //no children"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "henry"
        },
        "content": "        if 2 * index + 1 \u003e\u003d count {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "henry"
        },
        "content": "        "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "henry"
        },
        "content": "        let childIndex: Int"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "henry"
        },
        "content": "        if 2 * index + 2 \u003c count \u0026\u0026 isHigherPriority(from: backEndArray[2 * index + 2],"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "henry"
        },
        "content": "                                                            to: backEndArray[2 * index + 1]) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "henry"
        },
        "content": "            childIndex \u003d 2 * index + 2"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "henry"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "henry"
        },
        "content": "            childIndex \u003d 2 * index + 1"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "henry"
        },
        "content": "        "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "henry"
        },
        "content": "        if (isHigherPriority(from: backEndArray[childIndex], to: backEndArray[index])) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "henry"
        },
        "content": "            backEndArray.swapAt(childIndex, index)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "henry"
        },
        "content": "            bubbleDown(index: childIndex)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "henry"
        },
        "content": "    "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// Moves the element up the heap until parent element"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// is not lower priority than the element"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "henry"
        },
        "content": "    private mutating func bubbleUp(index: Int) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "henry"
        },
        "content": "        // No more parent, element is at top of heap"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "henry"
        },
        "content": "        if index \u003c\u003d 0 {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "henry"
        },
        "content": "        "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "henry"
        },
        "content": "        let parentIndex \u003d (index - 1) / 2"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "henry"
        },
        "content": "        "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "henry"
        },
        "content": "        if isLowerPriority(from: backEndArray[parentIndex], to: backEndArray[index]) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "henry"
        },
        "content": "            backEndArray.swapAt(parentIndex, index)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "henry"
        },
        "content": "            bubbleUp(index: parentIndex)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "henry"
        },
        "content": "    "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// Returns if original has lower priority than comparedTo."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "henry"
        },
        "content": "    private func isLowerPriority(from: T, to: T) -\u003e Bool {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "henry"
        },
        "content": "        return isMin ? from \u003e to : from \u003c to"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// Returns if original has higher priority than comparedTo."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "henry"
        },
        "content": "    private func isHigherPriority(from: T, to: T) -\u003e Bool {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "henry"
        },
        "content": "        return isMin ? from \u003c to : from \u003e to"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "henry"
        },
        "content": "    "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 116
    }
  },
  {
    "path": "SailingThroughHistory/Common/UIAlert.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Alert.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/19/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class UIAlert {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var controller: UIAlertController!"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(title: String, msg: String? \u003d nil, confirm: @escaping (String) -\u003e Void,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "         textPlaceHolder: String) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        controller \u003d UIAlertController(title: title, message: msg, preferredStyle: .alert)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let confirmAction \u003d UIAlertAction(title: \"Confirm\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                       style: .default,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                       handler: { _ in"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                        guard let name \u003d self.controller.textFields?.first?.text else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                            return"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                        confirm(name)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        })"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let cancelAction \u003d UIAlertAction(title: \"Cancel\", style: .cancel)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        controller.addTextField { (textFiled: UITextField) in"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            textFiled.keyboardAppearance \u003d .default"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            textFiled.keyboardType \u003d .default"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            textFiled.placeholder \u003d textPlaceHolder"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            textFiled.clearButtonMode \u003d .whileEditing"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        controller.addAction(confirmAction)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        controller.addAction(cancelAction)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(errorMsg: String, msg: String?) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        controller \u003d UIAlertController(title: errorMsg, message: msg, preferredStyle: .alert)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let cancelAction \u003d UIAlertAction(title: \"Cancel\", style: .cancel)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        controller.addAction(cancelAction)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(errorMsg: String, msg: String?, confirm: @escaping (UIAlertAction) -\u003e Void) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        controller \u003d UIAlertController(title: errorMsg, message: msg, preferredStyle: .alert)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let confirmAction \u003d UIAlertAction(title: \"Confirm\","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                       style: .default,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                       handler: confirm)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let cancelAction \u003d UIAlertAction(title: \"Cancel\", style: .cancel)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        controller.addAction(confirmAction)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        controller.addAction(cancelAction)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func present(in controller: UIViewController) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        controller.present(self.controller, animated: true, completion: nil)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 58
    }
  },
  {
    "path": "SailingThroughHistory/Common/UIView + ScreenShot.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  UIView + ScreenShot.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/22/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "extension UIView {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var screenShot: UIImage? {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        UIGraphicsBeginImageContextWithOptions(frame.size, false, UIScreen.main.scale)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        drawHierarchy(in: self.frame, afterScreenUpdates: true)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let image \u003d UIGraphicsGetImageFromCurrentImageContext()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        UIGraphicsEndImageContext()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return image"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 21
    }
  },
  {
    "path": "SailingThroughHistory/Common/Vector2F.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Vector2F.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 20/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "struct Vector2F {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let zero \u003d Vector2F(xCoord: 0, yCoord: 0)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let one \u003d Vector2F(xCoord: 1, yCoord: 1)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let xAxis \u003d Vector2F(xCoord: 1, yCoord: 0)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let yAxis \u003d Vector2F(xCoord: 0, yCoord: 1)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    // randoms a direction vector"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func random() -\u003e Vector2F {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        var vector \u003d Vector2F(xCoord: Float.random(), yCoord: Float.random())"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return vector.normalize()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func - (lhs: Vector2F, rhs: Vector2F) -\u003e Vector2F {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return Vector2F(xCoord: lhs.xCoord - rhs.xCoord, yCoord: lhs.yCoord - rhs.yCoord)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func + (lhs: Vector2F, rhs: Vector2F) -\u003e Vector2F {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return Vector2F(xCoord: lhs.xCoord + rhs.xCoord, yCoord: lhs.yCoord + rhs.yCoord)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func * (lhs: Vector2F, rhs: Float) -\u003e Vector2F {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return Vector2F(xCoord: lhs.xCoord * rhs, yCoord: lhs.yCoord * rhs)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func / (lhs: Vector2F, rhs: Float) -\u003e Vector2F {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return Vector2F(xCoord: lhs.xCoord / rhs, yCoord: lhs.yCoord / rhs)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var xCoord: Float"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var yCoord: Float"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var magnitude: Float {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return (xCoord * xCoord + yCoord * yCoord).squareRoot()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    @discardableResult"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    mutating func normalize() -\u003e Vector2F {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let magnitude \u003d self.magnitude"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        if magnitude !\u003d 0 {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            xCoord /\u003d magnitude"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            yCoord /\u003d magnitude"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return self"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    mutating func add(other: Vector2F) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        xCoord +\u003d other.xCoord"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        yCoord +\u003d other.yCoord"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func dot(other: Vector2F) -\u003e Float {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return xCoord * other.xCoord + yCoord * other.yCoord"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func cross(other: Vector2F) -\u003e Float {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return xCoord * other.yCoord - yCoord * other.xCoord"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 66
    }
  },
  {
    "path": "SailingThroughHistory/Game State/API/GameVariable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  GameVariable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 17/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": "import RxSwift"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class GameVariable\u003cElement\u003e : ObservableVariable {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var value: Element {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "            return variable.value"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "        set(value) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "            variable.value \u003d value"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    private let disposeBag \u003d DisposeBag()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var variable: Variable\u003cElement\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(value: Element) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "        variable \u003d Variable(value)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribe(onNext: @escaping (Element) -\u003e Void, onError: @escaping (Error?) -\u003e Void,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                   onDisposed: (() -\u003e Void)?) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        variable.asObservable()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .subscribe(onNext: onNext, onError: onError, onCompleted: nil, onDisposed: onDisposed)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .disposed(by: disposeBag)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribe(with observer: @escaping (Element) -\u003e Void) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        variable.asObservable()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .subscribe(onNext: observer, onError: nil, onCompleted: nil, onDisposed: nil)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .disposed(by: disposeBag)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 26,
      "Jason Chong": 15
    }
  },
  {
    "path": "SailingThroughHistory/Game State/API/GenericGameState.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  GenericGameState.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 17/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "protocol GenericGameState: Codable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var gameTime: GameVariable\u003cGameTime\u003e { get set }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    var gameObjects: [GameObject] { get }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var map: Map { get }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var availableUpgrades: [Upgrade] { get }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    var maxTaxAmount: Int { get }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var itemParameters: [GameVariable\u003cItemParameter\u003e] { get set }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getPlayers() -\u003e [GenericPlayer]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    func startNextTurn(speedMultiplier: Double)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getNextPlayer() -\u003e GenericPlayer?"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getTeamMoney() -\u003e [Team: Int]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    func endGame()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 19,
      "Jason Chong": 3,
      "yuhongherald": 2
    }
  },
  {
    "path": "SailingThroughHistory/Game State/API/GenericPlayer.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  GenericPlayer.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 18/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "protocol GenericPlayer: class, Codable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    var name: String { get }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    var team: Team? { get }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var isGameMaster: Bool { get }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    var money: GameVariable\u003cInt\u003e { get }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var currentCargoWeight: Int { get }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var weightCapacity: Int { get }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    var state: GameVariable\u003cPlayerState\u003e { get }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var node: Node? { get }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    var nodeIdVariable: GameVariable\u003cInt\u003e { get }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var hasRolled: Bool { get }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var deviceId: String { get }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var map: Map? { get set }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var gameState: GenericGameState? { get set }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    // for events"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "    var playerShip: Ship? { get }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var homeNode: Int { get }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getItemParameter(itemType: ItemType) -\u003e ItemParameter?"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "    func addShipsToMap(map: Map)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    // update money"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "    func updateMoney(to amount: Int)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func updateMoney(by amount: Int)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "    func canBuyUpgrade() -\u003e Bool"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    // Subscribes"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToItems(with observer: @escaping (GenericPlayer, [GenericItem]) -\u003e Void)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToCargoWeight(with observer: @escaping (GenericPlayer, Int) -\u003e Void)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToWeightCapcity(with observer: @escaping (GenericPlayer, Int) -\u003e Void)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToMoney(with observer: @escaping (GenericPlayer, Int) -\u003e Void)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": "    // Before moving"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": "    func startTurn(speedMultiplier: Double, map: Map?)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func buyUpgrade(upgrade: Upgrade) -\u003e (Bool, InfoMessage?)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": "    func roll() -\u003e (Int, [Int])"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "henry"
        },
        "content": "    // Moving - Auto progress to End turn if cannot dock"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func move(nodeId: Int)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getPath(to nodeId: Int) -\u003e [Int]"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getNodesInRange(roll: Int) -\u003e [Node]"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "henry"
        },
        "content": "    // After moving can choose to dock"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": "    func canDock() -\u003e Bool"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": "    func dock() throws"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getPirateEncounterChance() -\u003e Double"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": "    // Docked - End turn is manual here"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getPurchasableItemTypes() -\u003e [ItemType]"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getMaxPurchaseAmount(itemParameter: ItemParameter) -\u003e Int"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": "    func buy(itemType: ItemType, quantity: Int) throws"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func sell(item: GenericItem) throws"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "henry"
        },
        "content": "    func sell(itemType: ItemType, quantity: Int) throws"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "henry"
        },
        "content": "    func setTax(port: Port, amount: Int) throws"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "henry"
        },
        "content": "    // End turn - supplies are removed here"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func endTurn() -\u003e [InfoMessage]"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func canTradeAt(port: Port) -\u003e Bool"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "henry"
        },
        "content": "func \u003d\u003d (lhs: GenericPlayer, rhs: GenericPlayer?) -\u003e Bool {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "henry"
        },
        "content": "    return lhs.name \u003d\u003d rhs?.name"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "henry"
        },
        "content": "func !\u003d (lhs: GenericPlayer, rhs: GenericPlayer?) -\u003e Bool {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "henry"
        },
        "content": "    return !(lhs \u003d\u003d rhs)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 53,
      "Yang Shuqi": 2,
      "Jason Chong": 20,
      "yuhongherald": 3
    }
  },
  {
    "path": "SailingThroughHistory/Game State/API/GenericTeam.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  GenericTeam.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/28/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "protocol GenericTeam: Codable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var name: String { get }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var money: GameVariable\u003cInt\u003e { get }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(name: String)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func updateMoney(by amount: Int)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "func \u003d\u003d (lhs: GenericTeam, rhs: GenericTeam?) -\u003e Bool {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    return lhs.name \u003d\u003d rhs?.name"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "func !\u003d (lhs: GenericTeam, rhs: GenericTeam?) -\u003e Bool {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    return !(lhs \u003d\u003d rhs)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 25
    }
  },
  {
    "path": "SailingThroughHistory/Game State/API/InGameMessage.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  InGameMessage.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 2/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "enum InGameMessage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    case info(message: String)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    case error(message: String)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getMsg() -\u003e String {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        switch self {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .info(let msg):"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "            return msg"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .error(let msg):"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "            return msg"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 23
    }
  },
  {
    "path": "SailingThroughHistory/Game State/API/ItemStorage.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  ItemStorage.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "protocol ItemStorage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getPurchasableItemTypes() -\u003e [ItemType]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getMaxPurchaseAmount(itemParameter: ItemParameter) -\u003e Int"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    func buyItem(itemType: ItemType, quantity: Int) throws"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    func sellItem(item: GenericItem) throws"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    func sell(itemType: ItemType, quantity: Int) throws"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    func removeItem(by itemType: ItemType, with quantity: Int) -\u003e Int"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 18
    }
  },
  {
    "path": "SailingThroughHistory/Game State/API/Navigatable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Navigatable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "protocol Navigatable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getNodesInRange(roll: Int, speedMultiplier: Double, map: Map) -\u003e [Node]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    func move(node: Node)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    func canDock() -\u003e Bool"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    func dock() throws -\u003e Port"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 16
    }
  },
  {
    "path": "SailingThroughHistory/Game State/API/ObservableVariable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  ObservableVariable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 17/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "protocol ObservableVariable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    associatedtype Element: Any"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribe(onNext: @escaping (Element) -\u003e Void, onError: @escaping (Error?) -\u003e Void, onDisposed: (() -\u003e Void)?)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribe(with observer: @escaping (Element) -\u003e Void) "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 12,
      "Jason Chong": 3
    }
  },
  {
    "path": "SailingThroughHistory/Game State/API/Pirate_WeatherEntity.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Pirate_WeatherEntity.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 25/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "protocol Pirate_WeatherEntity {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    func startPirateChase()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getWeatherModifier() -\u003e Double"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 14
    }
  },
  {
    "path": "SailingThroughHistory/Game State/API/PlayerState.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  PlayerState.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 18/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "enum PlayerState {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    case moving"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    case docked"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    case endTurn"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 15
    }
  },
  {
    "path": "SailingThroughHistory/Game State/API/ShipAPI.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  ShipAPI.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "protocol ShipAPI {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    var name: String { get }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    var isChasedByPirates: Bool { get set }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    var turnsToBeingCaught: Int { get set }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    var shipChassis: ShipChassis? { get set }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    var auxiliaryUpgrade: AuxiliaryUpgrade? { get set }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    var nodeId: Int { get set }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    var currentCargoWeight: Int { get }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    var weightCapacity: Int { get set }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    var nodeIdVariable: GameVariable\u003cInt\u003e { get }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    var owner: GenericPlayer? { get set }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    var items: GameVariable\u003c[GenericItem]\u003e { get set }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "    var isDocked: Bool { get set }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "    var shipObject: ShipUI? { get set }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "    var map: Map? { get set }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "    init(node: Node, suppliesConsumed: [GenericItem])"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "    func setOwner(owner: GenericPlayer)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "    func setMap(map: Map)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "    func startTurn()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "    func endTurn(speedMultiplier: Double) -\u003e [InfoMessage]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getCurrentNode() -\u003e Node"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 36
    }
  },
  {
    "path": "SailingThroughHistory/Game State/API/Upgradable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Upgradable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "protocol Upgradable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    func installUpgrade(upgrade: Upgrade) -\u003e (Bool, InfoMessage?)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 13
    }
  },
  {
    "path": "SailingThroughHistory/Game State/API/Upgrade.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Upgrades.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 17/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "protocol Upgrade: Codable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    var name: String { get }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    var cost: Int { get }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    var type: UpgradeType { get }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getNewSuppliesConsumed(baseConsumption: [GenericItem]) -\u003e [GenericItem]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getMovementModifier() -\u003e Double"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getWeatherModifier() -\u003e Double"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 19
    }
  },
  {
    "path": "SailingThroughHistory/Game State/BuyItemError.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  BuyItemError.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 3/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "enum BuyItemError: Error {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    case insufficientFunds(shortOf: Int)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    case insufficientItems(shortOf: Int)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    case insufficientCapacity(shortOf: Int)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    case notDocked"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    case itemNotAvailable"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    case unknownItem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    case purchaseSuccess(item: GenericItem)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    case sellSuccess(item: GenericItem)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    case sellTypeSuccess(itemType: ItemType, quantity: Int)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func getMessage() -\u003e String {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        switch self {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .insufficientFunds(shortOf: let amount):"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return \"Short of \\(amount) money!\" // TODO: Get currency name"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .insufficientItems(shortOf: let amount):"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return \"Short of \\(amount) items!\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .insufficientCapacity(shortOf: let amount):"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return \"Short of \\(amount) capacity!\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .itemNotAvailable:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return \"Item not available at port!\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .notDocked:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return \"Player is not at a port!\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .unknownItem:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return \"Unknown item. Please contact the developers ASAP\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .purchaseSuccess(item: let item):"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "            return \"Item purchase of \\(item.name) with \\(item.quantity) quantity is successful!\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .sellSuccess(item: let item):"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "            return \"\\(item.name) with \\(item.quantity) quantity sold successfully!\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .sellTypeSuccess(itemType: let itemType, quantity: let quantity):"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "            return \"\\(itemType) with \\(quantity) quantity sold successfully!\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 9,
      "yuhongherald": 33
    }
  },
  {
    "path": "SailingThroughHistory/Game State/Entities/NPC.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  NPC.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": "import GameKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "class NPC: GameObject {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    private static let NPCNodeHeight: Double \u003d 50"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    private static let NPCNodeWidth: Double \u003d 50"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    private (set) static var nextId: UInt \u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    private static var reuseIds \u003d [UInt]()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    let numDieSides \u003d 12"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    let identifier: UInt"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    var nodeId: Int"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    var nextSeed: UInt"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    var nextDestinationId: Int"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init(node: Node) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        nodeId \u003d node.identifier"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "        identifier \u003d NPC.getNextId()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "        nextSeed \u003d identifier"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "        nextDestinationId \u003d nodeId"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "        super.init(frame: node.frame)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "        let values \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "        nodeId \u003d try values.decode(Int.self, forKey: .nodeId)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "        identifier \u003d try values.decode(UInt.self, forKey: .identifier)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "        nextSeed \u003d try values.decode(UInt.self, forKey: .nextSeed)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "        nextDestinationId \u003d try values.decode(Int.self, forKey: .nextDestinationId)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let superDecoder \u003d try values.superDecoder()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try super.init(from: superDecoder)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": "    override func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(nodeId, forKey: .nodeId)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(identifier, forKey: .identifier)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(nextSeed, forKey: .nextSeed)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(nextDestinationId, forKey: .nextDestinationId)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": "        let superEncoder \u003d container.superEncoder()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": "        try super.encode(to: superEncoder)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": "    private enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": "        case nodeId"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "henry"
        },
        "content": "        case identifier"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": "        case nextSeed"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": "        case nextDestinationId"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": "    func remove() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "henry"
        },
        "content": "        NPC.reuseIds.append(identifier)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "henry"
        },
        "content": "    func moveToNextNode(map: Map, maxTaxAmount: Int) -\u003e [Node] {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "henry"
        },
        "content": "        let nextNodeId \u003d getNextNode(map: map, maxTaxAmount: maxTaxAmount)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let currentNode \u003d map.nodeIDPair[nodeId], let nextNode \u003d map.nodeIDPair[nodeId] else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "henry"
        },
        "content": "            return []"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": "        nodeId \u003d nextNodeId"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": "        frame.value \u003d nextNode.frame"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "henry"
        },
        "content": "        let path \u003d currentNode.getCompleteShortestPath(to: nextNode, with: self, map: map)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "henry"
        },
        "content": "        if let port \u003d nextNode as? Port {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "henry"
        },
        "content": "            port.collectTax(from: self)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "henry"
        },
        "content": "        return path"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getNextNode(map: Map, maxTaxAmount: Int) -\u003e Int {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "henry"
        },
        "content": "        var generator \u003d GKMersenneTwisterRandomSource()"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "henry"
        },
        "content": "        generator.seed \u003d UInt64(nextSeed)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "henry"
        },
        "content": "        if nextDestinationId \u003d\u003d nodeId {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "henry"
        },
        "content": "            nextDestinationId \u003d getNewDestinationPortId(generator: \u0026generator, map: map)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let currentNode \u003d map.nodeIDPair[nodeId] else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "henry"
        },
        "content": "            fatalError(\"NPC ship is in invalid node\")"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let destinationNode \u003d map.nodeIDPair[nextDestinationId] else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "henry"
        },
        "content": "            fatalError(\"NPC ship has invalid destination node\")"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "henry"
        },
        "content": "        let path \u003d currentNode.getCompleteShortestPath(to: destinationNode, with: self, map: map)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "henry"
        },
        "content": "        let movementRoll \u003d 1 + generator.nextInt(upperBound: numDieSides)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "henry"
        },
        "content": "        if movementRoll \u003e\u003d path.count - 1 {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "henry"
        },
        "content": "            nextSeed \u003d UInt(generator.nextInt(upperBound: Int.max))"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "henry"
        },
        "content": "            return nextDestinationId"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "henry"
        },
        "content": "        let selectedPorts \u003d Array(path[0..\u003cmovementRoll]).map({ $0 as? Port }).compactMap({ $0 })"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "henry"
        },
        "content": "        var lowestTax \u003d maxTaxAmount"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "henry"
        },
        "content": "        var lowestTaxPort \u003d selectedPorts.first"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "henry"
        },
        "content": "        for port in selectedPorts {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "henry"
        },
        "content": "            lowestTax \u003d min(lowestTax, port.taxAmount.value)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "henry"
        },
        "content": "            lowestTaxPort \u003d port"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "henry"
        },
        "content": "        let decidingRoll \u003d generator.nextUniform()"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "henry"
        },
        "content": "        nextSeed \u003d UInt(generator.nextInt(upperBound: Int.max))"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "henry"
        },
        "content": "        if decidingRoll \u003e Float(lowestTax) / Float(maxTaxAmount),"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "henry"
        },
        "content": "            let lowestTaxPortId \u003d lowestTaxPort?.identifier {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "henry"
        },
        "content": "            return lowestTaxPortId"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "henry"
        },
        "content": "        return path[movementRoll - 1].identifier"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "henry"
        },
        "content": "    private static func getNextId() -\u003e UInt {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard !reuseIds.isEmpty else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "henry"
        },
        "content": "            nextId +\u003d 1"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "henry"
        },
        "content": "            return nextId - 1"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "henry"
        },
        "content": "        return reuseIds.removeFirst()"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "henry"
        },
        "content": "    private func getNewDestinationPortId(generator: inout GKMersenneTwisterRandomSource, map: Map) -\u003e Int {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "henry"
        },
        "content": "        let ports \u003d map.getNodes().map({ $0 as? Port }).compactMap({ $0 })"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "henry"
        },
        "content": "        let index \u003d generator.nextInt(upperBound: ports.count)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "henry"
        },
        "content": "        return ports[index].identifier"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "henry"
        },
        "content": "extension NPC: Pirate_WeatherEntity {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "henry"
        },
        "content": "    func startPirateChase() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(\"Not supported\")"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getWeatherModifier() -\u003e Double {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "henry"
        },
        "content": "        return 1.0"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 136,
      "Yang Shuqi": 2
    }
  },
  {
    "path": "SailingThroughHistory/Game State/GameState.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  GameState.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 17/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class GameState: GenericGameState {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var gameTime: GameVariable\u003cGameTime\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    var gameObjects: [GameObject] {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return map.gameObjects.value"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    let maxTaxAmount: Int"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let availableUpgrades: [Upgrade]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var itemParameters: [GameVariable\u003cItemParameter\u003e]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private(set) var map: Map"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var teams \u003d [Team]()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var players \u003d [GenericPlayer]()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var speedMultiplier \u003d 1.0"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var playerTurnOrder \u003d [GenericPlayer]()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(baseYear: Int, level: GenericLevel, players: [RoomMember]) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yu Pei Henry"
        },
        "content": "        gameTime \u003d GameVariable(value: GameTime(baseYear: baseYear))"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        teams \u003d level.teams"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        //initializePlayersFromParameters(parameters: level.playerParameters)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        map \u003d level.map"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        availableUpgrades \u003d level.upgrades"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "        maxTaxAmount \u003d level.maxTaxAmount"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        itemParameters \u003d [GameVariable\u003cItemParameter\u003e]()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for itemParameter in level.itemParameters {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            itemParameters.append(GameVariable\u003cItemParameter\u003e(value: itemParameter))"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        initializePlayers(from: level.playerParameters, for: players)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.players.forEach { player in"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            player.map \u003d map"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            player.addShipsToMap(map: map)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            player.gameState \u003d self"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": "        initializePortTaxes(to: level.defaultTaxAmount)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "        initializeNPCs(amount: level.numNPC)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "        let values \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        try gameTime \u003d GameVariable(value: values.decode(GameTime.self, forKey: .gameTime))"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": "        try map \u003d values.decode(Map.self, forKey: .map)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let itemParameters \u003d try values.decode([ItemParameter].self, forKey: .itemParameters)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.itemParameters \u003d [GameVariable\u003cItemParameter\u003e]()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for itemParameter in itemParameters {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            self.itemParameters.append(GameVariable\u003cItemParameter\u003e(value: itemParameter))"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": "        try teams \u003d values.decode([Team].self, forKey: .teams)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": "        try players \u003d values.decode([Player].self, forKey: .players)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": "        try speedMultiplier \u003d values.decode(Double.self, forKey: .speedMultiplier)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let upgradeTypes \u003d try values.decode([UpgradeType].self, forKey: .availableUpgrades)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        availableUpgrades \u003d upgradeTypes.map { $0.toUpgrade() }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "henry"
        },
        "content": "        maxTaxAmount \u003d try values.decode(Int.self, forKey: .maxTaxAmount)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "henry"
        },
        "content": "        for player in players {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            player.map \u003d map"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "henry"
        },
        "content": "            player.addShipsToMap(map: map)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "henry"
        },
        "content": "            player.gameState \u003d self"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for node in map.getNodes() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let port \u003d node as? Port else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            port.assignOwner(teams.first(where: { team in"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                team.name \u003d\u003d port.ownerName"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }))"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "henry"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let players \u003d players as? [Player] else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "henry"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        try container.encode(gameTime.value, forKey: .gameTime)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(map, forKey: .map)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let itemParameters \u003d self.itemParameters.map {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return $0.value"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(itemParameters, forKey: .itemParameters)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(teams, forKey: .teams)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(players, forKey: .players)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(speedMultiplier, forKey: .speedMultiplier)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let upgradeTypes \u003d availableUpgrades.map { $0.type }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        try container.encode(upgradeTypes, forKey: .availableUpgrades)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(maxTaxAmount, forKey: .maxTaxAmount)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "henry"
        },
        "content": "    private enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "henry"
        },
        "content": "        case gameTime"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "henry"
        },
        "content": "        case map"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "henry"
        },
        "content": "        case itemParameters"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "henry"
        },
        "content": "        case teams"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "henry"
        },
        "content": "        case players"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "henry"
        },
        "content": "        case speedMultiplier"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case availableUpgrades"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "henry"
        },
        "content": "        case maxTaxAmount"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getPlayers() -\u003e [GenericPlayer] {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "henry"
        },
        "content": "        return players"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getNextPlayer() -\u003e GenericPlayer? {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "henry"
        },
        "content": "        let nextPlayer \u003d playerTurnOrder.removeFirst()"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "henry"
        },
        "content": "        nextPlayer.startTurn(speedMultiplier: speedMultiplier, map: map)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "henry"
        },
        "content": "        return nextPlayer"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "henry"
        },
        "content": "    func startNextTurn(speedMultiplier: Double) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.speedMultiplier \u003d speedMultiplier"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "henry"
        },
        "content": "        playerTurnOrder.removeAll()"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "henry"
        },
        "content": "        for player in players {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "henry"
        },
        "content": "            playerTurnOrder.append(player)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "henry"
        },
        "content": "    func endGame() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getTeamMoney() -\u003e [Team: Int] {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var result \u003d [Team: Int]()"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for player in players {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "henry"
        },
        "content": "            guard let team \u003d player.team else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "henry"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            result[team] \u003d (result[team] ?? 0) + player.money.value"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func initializePlayers(from parameters: [PlayerParameter], for roomPlayers: [RoomMember]) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "henry"
        },
        "content": "        players.removeAll()"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for roomPlayer in roomPlayers {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if roomPlayer.isGameMaster {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let player \u003d GameMaster(name: roomPlayer.playerName)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                players.append(player)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let parameter \u003d parameters.first {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                $0.getTeam().name \u003d\u003d roomPlayer.teamName"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            print(parameters.map { $0.getTeam().name })"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let unwrappedParam \u003d parameter, roomPlayer.hasTeam else {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                preconditionFailure(\"Player has invalid team.\")"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            var team \u003d unwrappedParam.getTeam()"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if let storedTeam \u003d teams.first(where: {$0.name \u003d\u003d team.name}) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                team \u003d storedTeam"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                teams.append(team)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let node: Node"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if let startingNode \u003d team.startingNode {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                node \u003d startingNode"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let defaultNode \u003d map.getNodes().first else {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    fatalError(\"No nodes to start from\")"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "henry"
        },
        "content": "                }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                node \u003d defaultNode"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let player \u003d Player(name: String(roomPlayer.playerName.prefix(5)), team: team, map: map,"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                node: node, deviceId: roomPlayer.deviceId)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "henry"
        },
        "content": "            player.updateMoney(to: unwrappedParam.getMoney())"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "henry"
        },
        "content": "            player.gameState \u003d self"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            players.append(player)"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "henry"
        },
        "content": "    private func initializePortTaxes(to amount: Int) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "henry"
        },
        "content": "        for node in map.getNodes() {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "henry"
        },
        "content": "            guard let port \u003d node as? Port else {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "henry"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "henry"
        },
        "content": "            port.taxAmount.value \u003d amount"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "henry"
        },
        "content": "    private func initializeNPCs(amount: Int) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let node \u003d map.getNodes().first else {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        map.removeAllNpcs()"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "henry"
        },
        "content": "        for _ in 0..\u003camount {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            map.addGameObject(gameObject: NPC(node: node))"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 109,
      "Yang Shuqi": 17,
      "Jason Chong": 61,
      "Yu Pei Henry": 1,
      "yuhongherald": 17
    }
  },
  {
    "path": "SailingThroughHistory/Game State/InfoMessage.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  InfoMessage.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 7/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "struct InfoMessage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    let title: String"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    let message: String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    init(title: String, message: String) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.title \u003d title"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.message \u003d message"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 18,
      "Jason Chong": 1
    }
  },
  {
    "path": "SailingThroughHistory/Game State/MovementError.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  MovementError.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "enum MovementError: Error {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    case unableToDock"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    case invalidPort"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getMessage() -\u003e String {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        switch self {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .unableToDock:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "            return \"Ship is not located at a port for docking.\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .invalidPort:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "            return \"Node is not a valid port.\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 23
    }
  },
  {
    "path": "SailingThroughHistory/Game State/PlayerAndTeam/GameMaster.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  GameMaster.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class GameMaster: GenericPlayer {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    var name: String"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    var team: Team?"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let isGameMaster \u003d true"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    var money: GameVariable\u003cInt\u003e \u003d GameVariable(value: 0)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    var currentCargoWeight: Int \u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    var weightCapacity: Int \u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    var state: GameVariable\u003cPlayerState\u003e \u003d GameVariable(value: PlayerState.endTurn)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    var node: Node?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    var nodeIdVariable: GameVariable\u003cInt\u003e \u003d GameVariable(value: 0)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    var hasRolled: Bool \u003d false"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    var deviceId: String \u003d \"\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    var map: Map?"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "    var gameState: GenericGameState?"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    var playerShip: Ship?"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "    var homeNode: Int \u003d 0"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "    private let errorMessage \u003d \"GameMaster cannot perform normal actions\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init(name: String) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.name \u003d name"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "        let values \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "        name \u003d try values.decode(String.self, forKey: .name)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(name, forKey: .name)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": "    private enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": "        case name"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getItemParameter(itemType: ItemType) -\u003e ItemParameter? {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": "    func addShipsToMap(map: Map) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": "    func updateMoney(to amount: Int) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": "    func updateMoney(by amount: Int) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "henry"
        },
        "content": "    func canBuyUpgrade() -\u003e Bool {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "henry"
        },
        "content": "    func subscribeToItems(with observer: @escaping (GenericPlayer, [GenericItem]) -\u003e Void) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": "    func subscribeToCargoWeight(with observer: @escaping (GenericPlayer, Int) -\u003e Void) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "henry"
        },
        "content": "    func subscribeToWeightCapcity(with observer: @escaping (GenericPlayer, Int) -\u003e Void) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "henry"
        },
        "content": "    func subscribeToMoney(with observer: @escaping (GenericPlayer, Int) -\u003e Void) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "henry"
        },
        "content": "    func startTurn(speedMultiplier: Double, map: Map?) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "henry"
        },
        "content": "    func buyUpgrade(upgrade: Upgrade) -\u003e (Bool, InfoMessage?) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "henry"
        },
        "content": "    func roll() -\u003e (Int, [Int]) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "henry"
        },
        "content": "    func move(nodeId: Int) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getPath(to nodeId: Int) -\u003e [Int] {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getNodesInRange(roll: Int) -\u003e [Node] {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "henry"
        },
        "content": "    func canDock() -\u003e Bool {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "henry"
        },
        "content": "    func dock() throws {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getPirateEncounterChance() -\u003e Double {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getPurchasableItemTypes() -\u003e [ItemType] {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getMaxPurchaseAmount(itemParameter: ItemParameter) -\u003e Int {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "henry"
        },
        "content": "    func buy(itemType: ItemType, quantity: Int) throws {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "henry"
        },
        "content": "    func sell(item: GenericItem) throws {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "henry"
        },
        "content": "    func sell(itemType: ItemType, quantity: Int) throws {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "henry"
        },
        "content": "    func setTax(port: Port, amount: Int) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "henry"
        },
        "content": "    func endTurn() -\u003e [InfoMessage] {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "henry"
        },
        "content": "    func canTradeAt(port: Port) -\u003e Bool {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 149,
      "Jason Chong": 1
    }
  },
  {
    "path": "SailingThroughHistory/Game State/PlayerAndTeam/Player.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Player.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 17/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class Player: GenericPlayer {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let deviceId: String"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let isGameMaster \u003d false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var hasRolled: Bool \u003d false"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private var rollResult: Int \u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    let numDieSides \u003d 6"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    let money \u003d GameVariable(value: 0)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    let state \u003d GameVariable(value: PlayerState.endTurn)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    var name: String"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    var team: Team?"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yu Pei Henry"
        },
        "content": "    var node: Node? {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "        return map?.nodeIDPair[ship.nodeId]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    var nodeIdVariable: GameVariable\u003cInt\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        return ship.nodeIdVariable"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var map: Map? {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let map \u003d map else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship.map \u003d map"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if canDock() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "                do {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "                    try dock()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "                } catch {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "                    fatalError(\"Unable to dock\")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var currentCargoWeight: Int {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return ship.currentCargoWeight"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var weightCapacity: Int {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return ship.weightCapacity"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    // for events"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": "    var playerShip: Ship? {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return ship"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let homeNode: Int"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var gameState: GenericGameState?"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": "    private let ship: Ship"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var speedMultiplier \u003d 1.0"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var shipChassis: ShipChassis?"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var auxiliaryUpgrade: AuxiliaryUpgrade?"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(name: String, team: Team, map: Map, node: Node, deviceId: String) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.name \u003d name"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.team \u003d team"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.map \u003d map"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.deviceId \u003d deviceId"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.homeNode \u003d node.identifier"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship \u003d Ship(node: node, suppliesConsumed: [])"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship.owner \u003d self"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship.map \u003d map"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let values \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        name \u003d try values.decode(String.self, forKey: .name)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        team \u003d try values.decode(Team.self, forKey: .team)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "henry"
        },
        "content": "        money.value \u003d try values.decode(Int.self, forKey: .money)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship \u003d try values.decode(Ship.self, forKey: .ship)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        deviceId \u003d try values.decode(String.self, forKey: .deviceId)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        homeNode \u003d try values.decode(Int.self, forKey: .homeNode)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship.owner \u003d self"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(name, forKey: .name)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(team, forKey: .team)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(money.value, forKey: .money)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(ship, forKey: .ship)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        try container.encode(deviceId, forKey: .deviceId)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        try container.encode(homeNode, forKey: .homeNode)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getItemParameter(itemType: ItemType) -\u003e ItemParameter? {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "henry"
        },
        "content": "        let parameters \u003d gameState?.itemParameters ?? []"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return parameters.first(where: { $0.value.itemType \u003d\u003d itemType })?.value"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "henry"
        },
        "content": "    func addShipsToMap(map: Map) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship.map \u003d map"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "henry"
        },
        "content": "    func startTurn(speedMultiplier: Double, map: Map?) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.speedMultiplier \u003d speedMultiplier"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.map \u003d map"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "henry"
        },
        "content": "        hasRolled \u003d false"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "henry"
        },
        "content": "        state.value \u003d PlayerState.moving"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "henry"
        },
        "content": "        return ship.startTurn()"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func buyUpgrade(upgrade: Upgrade) -\u003e (Bool, InfoMessage?) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return ship.installUpgrade(upgrade: upgrade)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "henry"
        },
        "content": "    func roll() -\u003e (Int, [Int]) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "henry"
        },
        "content": "        if !hasRolled {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "henry"
        },
        "content": "            rollResult \u003d Int.random(in: 1...numDieSides)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "henry"
        },
        "content": "            hasRolled \u003d true"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "henry"
        },
        "content": "        return (rollResult, getNodesInRange(roll: rollResult).map({ $0.identifier }))"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func move(nodeId: Int) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let node \u003d map?.nodeIDPair[nodeId] else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship.move(node: node)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getPath(to nodeId: Int) -\u003e [Int] {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let map \u003d map else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            fatalError(\"Player is not on a map\")"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let toNode \u003d map.nodeIDPair[nodeId] else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            fatalError(\"To node does not exist\")"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "henry"
        },
        "content": "        return ship.node"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "henry"
        },
        "content": "            .getCompleteShortestPath(to: toNode, with: ship, map: map)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .map { $0.identifier }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getNodesInRange(roll: Int) -\u003e [Node] {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let map \u003d map else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            fatalError(\"Cannot check dock if map does not exist.\")"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "henry"
        },
        "content": "        return ship.getNodesInRange(roll: roll, speedMultiplier: speedMultiplier, map: map)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "henry"
        },
        "content": "    func canDock() -\u003e Bool {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard map !\u003d nil else {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            fatalError(\"Cannot check dock if map does not exist.\")"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "henry"
        },
        "content": "        return ship.canDock()"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "henry"
        },
        "content": "    func dock() throws {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "henry"
        },
        "content": "        let port \u003d try ship.dock()"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        port.collectTax(from: self)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getPirateEncounterChance() -\u003e Double {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let map \u003d map,"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            !(auxiliaryUpgrade is MercernaryUpgrade) else {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "henry"
        },
        "content": "            return 0"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "henry"
        },
        "content": "        let position \u003d ship.node"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if position is Port {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return 0"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var chance \u003d map.basePirateRate"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let pirateIslands \u003d map.getPiratesIslands()"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for (pirateNode, pirateIsland) in pirateIslands {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "henry"
        },
        "content": "            guard let distance \u003d pirateNode.getNumNodesTo(to: position, map: map),"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                distance \u003c\u003d pirateIsland.influence else {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "henry"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            chance \u003d max(chance, pirateIsland.chance)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "henry"
        },
        "content": "        return chance"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getPurchasableItemTypes() -\u003e [ItemType] {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "henry"
        },
        "content": "        return ship.getPurchasableItemTypes()"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getMaxPurchaseAmount(itemParameter: ItemParameter) -\u003e Int {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "henry"
        },
        "content": "        return ship.getMaxPurchaseAmount(itemParameter: itemParameter)"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "henry"
        },
        "content": "    func buy(itemType: ItemType, quantity: Int) throws {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "henry"
        },
        "content": "        try ship.buyItem(itemType: itemType, quantity: quantity)"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func sell(item: GenericItem) throws {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        try ship.sellItem(item: item)"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "henry"
        },
        "content": "    func sell(itemType: ItemType, quantity: Int) throws {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "henry"
        },
        "content": "        try ship.sell(itemType: itemType, quantity: quantity)"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "henry"
        },
        "content": "    func setTax(port: Port, amount: Int) throws {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "henry"
        },
        "content": "        let maxTaxAmount \u003d gameState?.maxTaxAmount ?? 0"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard amount \u003c\u003d maxTaxAmount else {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "henry"
        },
        "content": "            throw PortAdminError.exceedMaxTax(maxTaxAmount: maxTaxAmount)"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard amount \u003e\u003d 0 else {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "henry"
        },
        "content": "            throw PortAdminError.belowMinTax(minTaxAmount: 0)"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard team \u003d\u003d port.owner else {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "henry"
        },
        "content": "            throw PortAdminError.badPortOwnership"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        port.taxAmount.value \u003d amount"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func updateMoney(by amount: Int) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "henry"
        },
        "content": "        money.value +\u003d amount"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "henry"
        },
        "content": "        team?.updateMoney(by: amount)"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard money.value \u003e\u003d 0 else {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "henry"
        },
        "content": "            preventPlayerBankruptcy(amount: money.value)"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "henry"
        },
        "content": "    func updateMoney(to amount: Int) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "henry"
        },
        "content": "        updateMoney(by: amount - money.value)"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "henry"
        },
        "content": "    func canBuyUpgrade() -\u003e Bool {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "henry"
        },
        "content": "        return ship.isDocked"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func endTurn() -\u003e [InfoMessage] {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        hasRolled \u003d false"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return ship.endTurn(speedMultiplier: speedMultiplier)"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func canTradeAt(port: Port) -\u003e Bool {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return ship.isDocked \u0026\u0026 ship.nodeId \u003d\u003d port.identifier"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "henry"
        },
        "content": "    private enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case name"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case team"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "henry"
        },
        "content": "        case money"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "henry"
        },
        "content": "        case ship"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case deviceId"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case homeNode"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "henry"
        },
        "content": "// MARK: - subscribes"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "henry"
        },
        "content": "extension Player {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToItems(with observer: @escaping (GenericPlayer, [GenericItem]) -\u003e Void) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        ship.subscribeToItems {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            observer(self, $0)"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToCargoWeight(with observer: @escaping (GenericPlayer, Int) -\u003e Void) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        ship.subscribeToCargoWeight {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            observer(self, $0)"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToWeightCapcity(with observer: @escaping (GenericPlayer, Int) -\u003e Void) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        ship.subscribeToWeightCapcity {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            observer(self, $0)"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToMoney(with observer: @escaping (GenericPlayer, Int) -\u003e Void) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        money.subscribe {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            observer(self, $0)"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func preventPlayerBankruptcy(amount: Int) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "henry"
        },
        "content": "        // TODO: Show some message?"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "henry"
        },
        "content": "        team?.updateMoney(by: -amount)"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "henry"
        },
        "content": "        money.value \u003d 0"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 167,
      "Yang Shuqi": 19,
      "Jason Chong": 88,
      "Yu Pei Henry": 1,
      "yuhongherald": 12
    }
  },
  {
    "path": "SailingThroughHistory/Game State/PlayerAndTeam/Team.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Team.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by ysq on 3/28/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class Team: GenericTeam {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    var name: String"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    var money: GameVariable\u003cInt\u003e \u003d GameVariable(value: 0)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    var startingNode: Node? {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "            self.startId \u003d startingNode?.identifier"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    private(set) var startId: Int?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    static func \u003d\u003d (lhs: Team, rhs: Team) -\u003e Bool {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "        return lhs.name \u003d\u003d rhs.name"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init(name: String) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.name \u003d name"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "        let values \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "        name \u003d try values.decode(String.self, forKey: .name)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "        money.value \u003d try values.decode(Int.self, forKey: .money)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "        startId \u003d try values.decode(Int?.self, forKey: .startId)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "        assert(checkRep())"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(name, forKey: .name)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(money.value, forKey: .money)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(startId, forKey: .startId)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": "    func updateMoney(by amount: Int) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.money.value +\u003d amount"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "henry"
        },
        "content": "    func start(from node: Node) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.startingNode \u003d node"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": "        assert(checkRep())"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "henry"
        },
        "content": "    private func checkRep() -\u003e Bool {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": "        if self.startingNode \u003d\u003d nil {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": "            return true"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": "        return self.startingNode?.identifier \u003d\u003d self.startId"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": "    private enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": "        case name"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "henry"
        },
        "content": "        case money"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "henry"
        },
        "content": "        case startId"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "henry"
        },
        "content": "extension Team: Hashable {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "henry"
        },
        "content": "    func hash(into hasher: inout Hasher) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "henry"
        },
        "content": "        hasher.combine(name)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 71
    }
  },
  {
    "path": "SailingThroughHistory/Game State/PortAdminError.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  PortAdminError.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 14/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "enum PortAdminError: Error {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    case exceedMaxTax(maxTaxAmount: Int)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    case belowMinTax(minTaxAmount: Int)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    case badPortOwnership"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getMessage() -\u003e String {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "        switch self {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .exceedMaxTax(maxTaxAmount: let maxTaxAmount):"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "            return \"Maximum tax you can set is \\(maxTaxAmount)\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .belowMinTax(minTaxAmount: let minTaxAmount):"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "            return \"Minimum tax you can set is \\(minTaxAmount)\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .badPortOwnership:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "            return \"Unable to set tax to port not owned by your team!\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 26
    }
  },
  {
    "path": "SailingThroughHistory/Game State/Ship/Ship.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Ship.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 17/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class Ship: Codable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    let suppliesConsumed: [GenericItem]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    var name: String {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "        return owner?.name ?? \"NPC Ship\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    var isChasedByPirates \u003d false"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    var turnsToBeingCaught \u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    var shipChassis: ShipChassis?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    var auxiliaryUpgrade: AuxiliaryUpgrade?"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    var nodeId: Int {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "            return nodeIdVariable.value"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "            nodeIdVariable.value \u003d newValue"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "    var node: Node {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let map \u003d map, let currentNode \u003d map.nodeIDPair[nodeId] else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "            fatalError(\"Ship does not reside on any map or nodeId is invalid.\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "        return currentNode"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "    var currentCargoWeight: Int {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "        return currentCargoWeightVariable.value"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "    var weightCapacity: Int {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "            return weightCapacityVariable.value"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": "        set(value) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": "            weightCapacityVariable.value \u003d weightCapacity"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": "    let nodeIdVariable: GameVariable\u003cInt\u003e // public for events"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "henry"
        },
        "content": "    weak var owner: GenericPlayer?"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "    var items \u003d GameVariable\u003c[GenericItem]\u003e(value: []) // public for events"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": "    var isDocked \u003d false"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var currentCargoWeightVariable \u003d GameVariable\u003cInt\u003e(value: 0)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var weightCapacityVariable \u003d GameVariable\u003cInt\u003e(value: 100)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": "    var shipObject: ShipUI?"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "henry"
        },
        "content": "    weak var map: Map? {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": "            guard let map \u003d map,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": "                let shipUI \u003d shipObject else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": "                return"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            /// Move ship to its node"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.nodeId \u003d self.nodeIdVariable.value"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "henry"
        },
        "content": "            map.addGameObject(gameObject: shipUI)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "henry"
        },
        "content": "    init(node: Node, suppliesConsumed: [GenericItem]) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.nodeIdVariable \u003d GameVariable(value: node.identifier)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.suppliesConsumed \u003d suppliesConsumed"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "henry"
        },
        "content": "        subscribeToItems(with: updateCargoWeight)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "henry"
        },
        "content": "        shipObject \u003d ShipUI(ship: self)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "henry"
        },
        "content": "        let values \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "henry"
        },
        "content": "        nodeIdVariable \u003d GameVariable(value: try values.decode(Int.self, forKey: .nodeID))"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "henry"
        },
        "content": "        suppliesConsumed \u003d try values.decode([Item].self, forKey: .items)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "henry"
        },
        "content": "        items.value \u003d try values.decode([Item].self, forKey: .items)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "henry"
        },
        "content": "        if values.contains(.auxiliaryUpgrade) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "henry"
        },
        "content": "            let auxiliaryType \u003d try values.decode(UpgradeType.self, forKey: .auxiliaryUpgrade)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "henry"
        },
        "content": "            auxiliaryUpgrade \u003d auxiliaryType.toUpgrade() as? AuxiliaryUpgrade"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "henry"
        },
        "content": "        if values.contains(.shipChassis) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "henry"
        },
        "content": "            let shipChassisType \u003d try values.decode(UpgradeType.self, forKey: .shipChassis)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "henry"
        },
        "content": "            shipChassis \u003d shipChassisType.toUpgrade() as? ShipChassis"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "henry"
        },
        "content": "        shipObject \u003d ShipUI(ship: self)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "henry"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let suppliesConsumed \u003d suppliesConsumed as? [Item],"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "henry"
        },
        "content": "            let shipItems \u003d items.value as? [Item] else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "henry"
        },
        "content": "                return"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "henry"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(nodeId, forKey: .nodeID)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(suppliesConsumed, forKey: .suppliesConsumed)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(shipItems, forKey: .items)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "henry"
        },
        "content": "        if let shipChassis \u003d shipChassis {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "henry"
        },
        "content": "            try container.encode(shipChassis.type, forKey: .shipChassis)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "henry"
        },
        "content": "        if let auxiliaryUpgrade \u003d auxiliaryUpgrade {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "henry"
        },
        "content": "            try container.encode(auxiliaryUpgrade.type, forKey: .auxiliaryUpgrade)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "henry"
        },
        "content": "    private enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "henry"
        },
        "content": "        case nodeID"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "henry"
        },
        "content": "        case suppliesConsumed"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "henry"
        },
        "content": "        case items"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "henry"
        },
        "content": "        case shipChassis"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "henry"
        },
        "content": "        case auxiliaryUpgrade"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "henry"
        },
        "content": "    // Movement"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "henry"
        },
        "content": "    func startTurn() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "henry"
        },
        "content": "    func endTurn(speedMultiplier: Double) -\u003e [InfoMessage] {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "henry"
        },
        "content": "        var messages \u003d [InfoMessage]()"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "henry"
        },
        "content": "        if isChasedByPirates {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "henry"
        },
        "content": "            turnsToBeingCaught -\u003d 1"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "henry"
        },
        "content": "        if isChasedByPirates \u0026\u0026 turnsToBeingCaught \u003c\u003d 0 {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "henry"
        },
        "content": "            isChasedByPirates \u003d false"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "henry"
        },
        "content": "            turnsToBeingCaught \u003d 0"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "henry"
        },
        "content": "            items.value.removeAll()"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "henry"
        },
        "content": "            messages.append(InfoMessage(title: \"Pirates!\", message: \"You have been caught by pirates!. You lost all your cargo\"))"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "henry"
        },
        "content": "        for supply in suppliesConsumed {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "henry"
        },
        "content": "            guard let parameter \u003d supply.itemParameter else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "henry"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "henry"
        },
        "content": "            let type \u003d supply.itemType"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "henry"
        },
        "content": "            let deficit \u003d removeItem(by: type, with: Int(Double(supply.quantity) * speedMultiplier))"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "henry"
        },
        "content": "            owner?.updateMoney(by: -deficit * parameter.getBuyValue())"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "henry"
        },
        "content": "            messages.append(InfoMessage(title: \"deficit!\","
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "henry"
        },
        "content": "                               message: \"You have exhausted \\(parameter.displayName) and have a deficit of \\(deficit) and paid for it.\"))"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "henry"
        },
        "content": "        // decay remaining items"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "henry"
        },
        "content": "        for item in items.value {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "henry"
        },
        "content": "            guard let lostQuantity \u003d item.decayItem(with: speedMultiplier) else {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "henry"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "henry"
        },
        "content": "            messages.append(InfoMessage(title: \"Lost Item\","
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "henry"
        },
        "content": "                        message: \"You have lost \\(lostQuantity) of \\(item.itemParameter?.displayName ?? \"\") from decay and have \\(item.quantity) remaining!\"))"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "henry"
        },
        "content": "        return messages"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "henry"
        },
        "content": "// MARK: - Observable values"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "henry"
        },
        "content": "extension Ship {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "henry"
        },
        "content": "    func subscribeToLocation(with observer: @escaping (Node) -\u003e Void) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "henry"
        },
        "content": "        nodeIdVariable.subscribe { [weak self] _ in"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "henry"
        },
        "content": "            guard let self \u003d self else {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "henry"
        },
        "content": "                return"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "henry"
        },
        "content": "            guard let map \u003d self.map, let node \u003d map.nodeIDPair[self.nodeId] else {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "henry"
        },
        "content": "                return"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "henry"
        },
        "content": "            observer(node)"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "henry"
        },
        "content": "    func subscribeToItems(with observer: @escaping ([GenericItem]) -\u003e Void) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "henry"
        },
        "content": "        items.subscribe(with: observer)"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "henry"
        },
        "content": "    func subscribeToCargoWeight(with observer: @escaping (Int) -\u003e Void) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "henry"
        },
        "content": "        currentCargoWeightVariable.subscribe(with: observer)"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "henry"
        },
        "content": "    func subscribeToWeightCapcity(with observer: @escaping (Int) -\u003e Void) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "henry"
        },
        "content": "        weightCapacityVariable.subscribe(with: observer)"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "henry"
        },
        "content": "    private func updateCargoWeight(items: [GenericItem]) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "henry"
        },
        "content": "        var result \u003d 0"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "henry"
        },
        "content": "        for item in items {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "henry"
        },
        "content": "            result +\u003d item.weight ?? 0"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "henry"
        },
        "content": "        currentCargoWeightVariable.value \u003d result"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 194,
      "Jason Chong": 2
    }
  },
  {
    "path": "SailingThroughHistory/Game State/Ship/ShipUI.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  ShipUI.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 19/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class ShipUI: GameObject {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    private let shipWidth: Double \u003d 50"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    init(ship: Ship) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "        let frame \u003d Rect(originX: 0, originY: 0, height: shipWidth, width: shipWidth) "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        super.init(frame: frame)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship.subscribeToLocation(with: moveShip)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "        try super.init(from: decoder)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "    private func moveShip(to node: Node) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "        let newX \u003d node.frame.originX"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        let newY \u003d node.frame.originY"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "        let frame \u003d Rect(originX: newX, originY: newY, height: shipWidth, width: shipWidth)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.frame.value \u003d frame"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 32
    }
  },
  {
    "path": "SailingThroughHistory/Game State/Ship/Ship_ItemStorage_Extension.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Ship_ItemStorage_Extension.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "// Mark : - Item Manipulation"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "extension Ship: ItemStorage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getPurchasableItemTypes() -\u003e [ItemType] {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let port \u003d node as? Port, isDocked else {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "            return []"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "        return port.itemParametersSoldByPort"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getMaxPurchaseAmount(itemParameter: ItemParameter) -\u003e Int {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let map \u003d map else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "            fatalError(\"Ship does not reside on any map.\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let port \u003d map.nodeIDPair[nodeId] as? Port, isDocked,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "            let unitValue \u003d port.getBuyValue(of: itemParameter) else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "                return 0"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "        return min(owner?.money.value ?? 0 / unitValue, getRemainingCapacity() / itemParameter.unitWeight)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "    func buyItem(itemType: ItemType, quantity: Int) throws {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let port \u003d node as? Port, isDocked else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "            throw BuyItemError.notDocked"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let itemParameter \u003d owner?.getItemParameter(itemType: itemType) else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "            throw BuyItemError.unknownItem"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "        let item \u003d itemParameter.createItem(quantity: quantity)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let price \u003d item.getBuyValue(at: port) else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": "            throw BuyItemError.itemNotAvailable"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "        let difference \u003d (owner?.money.value ?? 0) - price"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard difference \u003e\u003d 0 else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": "            throw BuyItemError.insufficientFunds(shortOf: difference)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": "        owner?.updateMoney(by: -price)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": "        try addItem(item: item)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "henry"
        },
        "content": "        throw BuyItemError.purchaseSuccess(item: item)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": "    func sellItem(item: GenericItem) throws {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let port \u003d node as? Port, isDocked else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "henry"
        },
        "content": "            throw BuyItemError.notDocked"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let itemType \u003d item.itemParameter else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "henry"
        },
        "content": "            throw BuyItemError.unknownItem"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let index \u003d items.value.firstIndex(where: {$0 \u003d\u003d item}) else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": "            throw BuyItemError.itemNotAvailable"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let profit \u003d items.value[index].sell(at: port) else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "henry"
        },
        "content": "            throw BuyItemError.itemNotAvailable"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "henry"
        },
        "content": "        owner?.updateMoney(by: profit)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "henry"
        },
        "content": "        items.value.remove(at: index)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "henry"
        },
        "content": "        items.value \u003d items.value"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "henry"
        },
        "content": "        throw BuyItemError.sellSuccess(item: item)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": "    func sell(itemType: ItemType, quantity: Int) throws {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let map \u003d map, let port \u003d map.nodeIDPair[nodeId] as? Port else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "henry"
        },
        "content": "            throw BuyItemError.notDocked"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let value \u003d port.getSellValue(of: itemType) else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "henry"
        },
        "content": "            throw BuyItemError.itemNotAvailable"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "henry"
        },
        "content": "        let deficit \u003d removeItem(by: itemType, with: quantity)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "henry"
        },
        "content": "        owner?.updateMoney(by: (quantity - deficit) * value)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "henry"
        },
        "content": "        if deficit \u003e 0 {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "henry"
        },
        "content": "            throw BuyItemError.insufficientItems(shortOf: deficit)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "henry"
        },
        "content": "        throw BuyItemError.sellTypeSuccess(itemType: itemType, quantity: quantity)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "henry"
        },
        "content": "    func removeItem(by itemType: ItemType, with quantity: Int) -\u003e Int {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let index \u003d items.value.firstIndex(where: { $0.itemType \u003d\u003d itemType }) else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "henry"
        },
        "content": "            return quantity"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "henry"
        },
        "content": "        let deficit \u003d items.value[index].remove(amount: quantity)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "henry"
        },
        "content": "        if items.value[index].quantity \u003d\u003d 0 {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "henry"
        },
        "content": "            items.value.remove(at: index)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "henry"
        },
        "content": "            items.value \u003d items.value"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard deficit \u003c\u003d 0 else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "henry"
        },
        "content": "            return removeItem(by: itemType, with: deficit)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "henry"
        },
        "content": "        return 0"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "henry"
        },
        "content": "    private func getRemainingCapacity() -\u003e Int {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "henry"
        },
        "content": "        return weightCapacity - currentCargoWeight"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "henry"
        },
        "content": "    private func addItem(item: GenericItem) throws {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "henry"
        },
        "content": "        let difference \u003d getRemainingCapacity() - (item.weight ?? 0)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard difference \u003e\u003d 0 else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "henry"
        },
        "content": "            throw BuyItemError.insufficientFunds(shortOf: difference)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let sameType \u003d items.value.first(where: { $0.itemParameter \u003d\u003d item.itemParameter }) else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "henry"
        },
        "content": "            items.value.append(item)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "henry"
        },
        "content": "            items.value \u003d items.value"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "henry"
        },
        "content": "        _ \u003d sameType.combine(with: item)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "henry"
        },
        "content": "        return"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 117
    }
  },
  {
    "path": "SailingThroughHistory/Game State/Ship/Ship_Navigatable_Extension.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Ship_Navigatable_Extension.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "extension Ship: Navigatable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getNodesInRange(roll: Int, speedMultiplier: Double, map: Map) -\u003e [Node] {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let startNode \u003d map.nodeIDPair[nodeId] else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "            fatalError(\"Ship has invalid node id.\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "        let movement \u003d computeMovement(roll: roll, speedMultiplier: speedMultiplier)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "        let nodesFromStart \u003d startNode.getNodesInRange(ship: self, range: movement, map: map)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "        return nodesFromStart"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    func move(node: Node) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let currentFrame \u003d shipObject?.frame.value else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.nodeId \u003d node.identifier"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "        let nodeFrame \u003d node.frame"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "        isDocked \u003d false"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "        shipObject?.frame.value \u003d currentFrame.movedTo(originX: nodeFrame.originX,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "                                                       originY: nodeFrame.originY)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "    func canDock() -\u003e Bool {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let map \u003d map else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "            fatalError(\"Ship does not reside on any map.\")"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "        return map.nodeIDPair[nodeId] as? Port !\u003d nil"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": "    func dock() throws -\u003e Port {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let map \u003d map else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "            fatalError(\"Ship does not reside on any map.\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard canDock() else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "            throw MovementError.unableToDock"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let port \u003d map.nodeIDPair[nodeId] as? Port else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "henry"
        },
        "content": "            throw MovementError.invalidPort"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": "        isDocked \u003d true"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": "        isChasedByPirates \u003d false"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "henry"
        },
        "content": "        turnsToBeingCaught \u003d 0"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": "        return port"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": "    private func computeMovement(roll: Int, speedMultiplier: Double) -\u003e Double {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": "        var multiplier \u003d 1.0"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": "        multiplier \u003d applyMovementModifiers(to: multiplier)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": "        return Double(roll) * speedMultiplier * multiplier"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "henry"
        },
        "content": "    private func applyMovementModifiers(to multiplier: Double) -\u003e Double {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "henry"
        },
        "content": "        var result \u003d multiplier"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "henry"
        },
        "content": "        result *\u003d shipChassis?.getMovementModifier() ?? 1"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "henry"
        },
        "content": "        result *\u003d auxiliaryUpgrade?.getMovementModifier() ?? 1"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "henry"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 69
    }
  },
  {
    "path": "SailingThroughHistory/Game State/Ship/Ship_Pirate_Weather_Extension.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Ship_Pirate_Weather_Extension.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 7/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "// MARK: - Affected by Pirates and Weather"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "extension Ship: Pirate_WeatherEntity {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    func startPirateChase() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "        isChasedByPirates \u003d true"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "        turnsToBeingCaught \u003d 2"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getWeatherModifier() -\u003e Double {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "        var multiplier \u003d 1.0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "        multiplier *\u003d shipChassis?.getWeatherModifier() ?? 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "        multiplier *\u003d auxiliaryUpgrade?.getWeatherModifier() ?? 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "        return multiplier"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 23
    }
  },
  {
    "path": "SailingThroughHistory/Game State/Ship/Ship_Upgradable_Extension.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Ship_Upgradable_Extension.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "extension Ship: Upgradable{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    func installUpgrade(upgrade: Upgrade) -\u003e (Bool, InfoMessage?) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let owner \u003d owner else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "            return (false, InfoMessage(title: \"Error\", message: \"Ship has no owner!\"))"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard owner.money.value \u003e\u003d upgrade.cost else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "            return (false, InfoMessage(title: \"Insufficient Money!\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "                                       message: \"You do not have sufficient funds to buy \\(upgrade.name)!\"))"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "        if shipChassis \u003d\u003d nil, let shipUpgrade \u003d upgrade as? ShipChassis {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "            owner.updateMoney(by: -upgrade.cost)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "            shipChassis \u003d shipUpgrade"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "            weightCapacity \u003d shipUpgrade.getNewCargoCapacity(baseCapacity: weightCapacity)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "            return (true, InfoMessage(title: \"Ship upgrade purchased!\", message: \"You have purchased \\(upgrade.name)!\"))"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        if auxiliaryUpgrade \u003d\u003d nil, let auxiliary \u003d upgrade as? AuxiliaryUpgrade {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "            owner.updateMoney(by: -upgrade.cost)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "            auxiliaryUpgrade \u003d auxiliary"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "            return (true, InfoMessage(title: \"Ship upgrade purchased!\", message: \"You have purchased \\(upgrade.name)!\"))"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "        if upgrade is ShipChassis {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "            return (false, InfoMessage(title: \"Duplicate upgrade\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "                                       message: \"You already have an upgrade of type \\\"Ship Upgrade\\\"!\"))"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "        } else if upgrade is AuxiliaryUpgrade {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "            return (false, InfoMessage(title: \"Duplicate upgrade\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "                                       message: \"You already have an upgrade of type \\\"Auxiliary Upgrade\\\"!\"))"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "        return (false, nil)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 40
    }
  },
  {
    "path": "SailingThroughHistory/Game State/Upgrades/AuxiliaryUpgrade.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  AuxiliaryUpgrade.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 17/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class AuxiliaryUpgrade: Upgrade {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    var name: String {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "        return \"Auxiliary Upgrade\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    var cost: Int {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        return 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var type: UpgradeType {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return .baseAuxillary"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getNewSuppliesConsumed(baseConsumption: [GenericItem]) -\u003e [GenericItem] {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "        return baseConsumption"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "    "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getMovementModifier() -\u003e Double {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        return 1.0"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getWeatherModifier() -\u003e Double {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "        return 1.0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "    func handleEvent() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 32,
      "Jason Chong": 3
    }
  },
  {
    "path": "SailingThroughHistory/Game State/Upgrades/BiggerSailsUpgrade.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  BiggerSailsUpgrade.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 7/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class BiggerSailsUpgrade: AuxiliaryUpgrade {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override var type: UpgradeType {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return .biggerSails"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    override var name: String {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        return \"Cargo extension\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    override var cost: Int {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "        return 1000"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    override func getWeatherModifier() -\u003e Double {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "        return 2"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 22,
      "Jason Chong": 3
    }
  },
  {
    "path": "SailingThroughHistory/Game State/Upgrades/BiggerShipUpgrade.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  BiggerShipUpgrade.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 22/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class BiggerShipUpgrade: ShipChassis {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    override var name: String {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "        return \"Bigger Ship\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    override var cost: Int {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        return 1000"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override var type: UpgradeType {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return .biggerShip"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    override func getNewCargoCapacity(baseCapacity: Int) -\u003e Int {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "        return baseCapacity * 2"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "    "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    override func getMovementModifier() -\u003e Double {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        return 0.8"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 25,
      "Jason Chong": 3
    }
  },
  {
    "path": "SailingThroughHistory/Game State/Upgrades/FasterShipUpgrade.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  FasterShipUpgrade.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 7/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class FasterShipUpgrade: ShipChassis {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    override var name: String {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "        return \"Faster Ship\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    override var cost: Int {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        return 1000"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override var type: UpgradeType {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return .fasterShip"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    override func getNewCargoCapacity(baseCapacity: Int) -\u003e Int {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "        return Int(Double(baseCapacity) * 0.7)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    override func getMovementModifier() -\u003e Double {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        return 2"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 25,
      "Jason Chong": 3
    }
  },
  {
    "path": "SailingThroughHistory/Game State/Upgrades/MercernaryUpgrade.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  MercernaryUpgrade.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 7/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class MercernaryUpgrade: AuxiliaryUpgrade {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override var type: UpgradeType {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "         return .mercernary"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    override var name: String {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        return \"Mercernary\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    override var cost: Int {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "        return 1000"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    override func handleEvent() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "        // TODO: Handle event to ignore pirate"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 22,
      "Jason Chong": 3
    }
  },
  {
    "path": "SailingThroughHistory/Game State/Upgrades/ShipChassis.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  ShipChassis.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 17/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class ShipChassis: Upgrade {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    var name: String {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "        return \"Ship Chassis\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    var cost: Int {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        return 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var type: UpgradeType {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return .baseShip"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getNewCargoCapacity(baseCapacity: Int) -\u003e Int {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "        return baseCapacity"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getNewSuppliesConsumed(baseConsumption: [GenericItem]) -\u003e [GenericItem] {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "        return baseConsumption"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getMovementModifier() -\u003e Double {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "        return 1.0"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getWeatherModifier() -\u003e Double {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "        return 1.0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 35,
      "Jason Chong": 3
    }
  },
  {
    "path": "SailingThroughHistory/Game State/Upgrades/UpgradeType.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  UpgradeType.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 10/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "enum UpgradeType: Int, Codable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case biggerShip"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case fasterShip"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case biggerSails"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case mercernary"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case baseShip"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case baseAuxillary"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func toUpgrade() -\u003e Upgrade {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        switch self {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .biggerShip:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return BiggerShipUpgrade()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .fasterShip:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return FasterShipUpgrade()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .biggerSails:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return BiggerSailsUpgrade()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .mercernary:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return MercernaryUpgrade()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .baseShip:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return ShipChassis()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .baseAuxillary:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return AuxiliaryUpgrade()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 33
    }
  },
  {
    "path": "SailingThroughHistory/GameEngine/Engine Objects/EngineObject.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  EngineObject.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 20/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "// alternative to GameObject. Currently not used"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class EngineObject: Hashable {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    enum Status {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case moving"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case grid"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case ghost"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case destroying"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case destroyed"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func \u003d\u003d (lhs: EngineObject, rhs: EngineObject) -\u003e Bool {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return lhs.identifier \u003d\u003d rhs.identifier"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private static func getIdentifier() -\u003e Int {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        var identifier: Int \u003d 0 // dummy value"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        queue.sync {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            while identifiers.contains(nextID) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                nextID +\u003d 1 // naive implementation"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            identifiers.insert(nextID)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            identifier \u003d nextID"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            nextID +\u003d 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return identifier"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private static var nextID: Int \u003d 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private static var identifiers \u003d Set\u003cInt\u003e()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private static let queue \u003d DispatchQueue(label: \"EngineObjectQueue\", attributes: .concurrent)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let identifier: Int"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var position: Vector2F \u003d Vector2F.zero"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    // rotation is from 0 tp 2pi radians"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var rotation: Float \u003d 0"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    // scale not supported currently"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var scale: Vector2F \u003d Vector2F.one"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var velocity: Vector2F \u003d Vector2F.zero"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var status: Status \u003d Status.moving"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.identifier \u003d EngineObject.getIdentifier()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func hash(into hasher: inout Hasher) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        hasher.combine(identifier)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    deinit {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let identifier \u003d self.identifier"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        EngineObject.queue.async(flags: .barrier) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            EngineObject.identifiers.remove(identifier)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 65
    }
  },
  {
    "path": "SailingThroughHistory/GameEngine/Engine Objects/UpdatableNPC.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  UpdatableNPC.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 19/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class UpdatableNPC: GameObject, Updatable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var status: UpdatableStatus \u003d .add"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func update(weeks: Double) -\u003e Bool {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func checkForEvent() -\u003e GenericGameEvent? {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return nil"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 20
    }
  },
  {
    "path": "SailingThroughHistory/GameEngine/Engine Objects/UpdatablePirate.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  UpdatablePirate.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 19/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class UpdatablePirate: GameObject, Updatable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var status: UpdatableStatus \u003d .add"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func update(weeks: Double) -\u003e Bool {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func checkForEvent() -\u003e GenericGameEvent? {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return nil"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 19
    }
  },
  {
    "path": "SailingThroughHistory/GameEngine/Engine Objects/UpdatablePirateIsland.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  UpdatablePirateIsland.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 20/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "// for MVP2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class UpdatablePirateIsland: GameObject, Updatable {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var status: UpdatableStatus \u003d .add"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func update(weeks: Double) -\u003e Bool {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return false"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func checkForEvent() -\u003e GenericGameEvent? {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return nil"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 20
    }
  },
  {
    "path": "SailingThroughHistory/GameEngine/Engine Objects/UpdatablePlayer.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  UpdatablePlayer.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 19/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class UpdatablePlayer: GameObject, Updatable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var status: UpdatableStatus \u003d .add"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let location: GameVariable\u003cLocation\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(location: GameVariable\u003cLocation\u003e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.location \u003d location"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init(image: Resources.Ships.british[0], frame: Rect())"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        fatalError(\"init(from:) has not been implemented\")"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func update(weeks: Double) -\u003e Bool {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // Get movement speed of player, do multi-node movement"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // Check if endNode is dock"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        location.value \u003d Location(start: location.value.start,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                  end: location.value.end,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                  fractionToEnd: location.value.fractionToEnd"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                    + weeks * Double(GameConstants.weeksInMonth),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                  isDocked: location.value.isDocked)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return true // always moving"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func checkForEvent() -\u003e GenericGameEvent? {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // no pirate event currently"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return nil"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 40
    }
  },
  {
    "path": "SailingThroughHistory/GameEngine/Engine Objects/UpdatablePlayerTurn.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  UpdatablePlayerTurn.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 20/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class UpdatablePlayerTurn: GameObject, Updatable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var status: UpdatableStatus \u003d .add"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let gameState: GenericGameState"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let nextGameTime: GameTime"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private var nextTurn: Bool \u003d false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(gameState: GenericGameState) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.gameState \u003d gameState"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        nextGameTime \u003d gameState.gameTime"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        fatalError(\"init(from:) has not been implemented\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func update(weeks: Double) -\u003e Bool {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // no graphical support yet"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func checkForEvent() -\u003e GenericGameEvent? {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        if !nextTurn {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            gameState.getNextPlayer()?.endTurn() // Remove hotfix"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard let nextPlayer \u003d gameState.getNextPlayer() else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            if !nextTurn {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                nextTurn \u003d true"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                return GameEvent(eventType: EventType.informative(initiater: \"Player turn\"), timestamp: 0, message: nil)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        nextTurn \u003d false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return GameEvent(eventType: EventType.actionRequired(playerIdentifier: nextPlayer), timestamp: 0, message: nil)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 44
    }
  },
  {
    "path": "SailingThroughHistory/GameEngine/Engine Objects/UpdatablePort.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  UpdatablePort.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 19/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class UpdatablePort: GameObject, Updatable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var status: UpdatableStatus \u003d .add"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func update(weeks: Double) -\u003e Bool {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func checkForEvent() -\u003e GenericGameEvent? {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return nil"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 20
    }
  },
  {
    "path": "SailingThroughHistory/GameEngine/Engine Objects/UpdatableTime.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  UpdatableTime.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 20/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class UpdatableTime: GameObject, Updatable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var status: UpdatableStatus \u003d .add"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private var gameState: GenericGameState"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(gameState: GenericGameState) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.gameState \u003d gameState"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        fatalError(\"init(from:) has not been implemented\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func update(weeks: Double) -\u003e Bool {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        gameState.gameTime.addWeeks(weeks)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return false"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func checkForEvent() -\u003e GenericGameEvent? {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return nil"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 30
    }
  },
  {
    "path": "SailingThroughHistory/GameEngine/Engine Objects/UpdatableWeather.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  UpdatableSea.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 19/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class UpdatableWeather: GameObject, Updatable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var status: UpdatableStatus \u003d .add"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(gameState: GenericGameState) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        fatalError(\"init(from:) has not been implemented\")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func update(weeks: Double) -\u003e Bool {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return false"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func checkForEvent() -\u003e GenericGameEvent? {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return nil"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 27
    }
  },
  {
    "path": "SailingThroughHistory/Interface/ADT/NodePaths.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  ObjectPaths.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 22/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "struct ObjectPaths {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var paths \u003d [Node: [Path]]()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var allPaths: Set\u003cPath\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return Set(paths.values"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .flatMap { $0 })"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        assert(checkRep())"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func checkRep() -\u003e Bool {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for path in allPaths {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if !paths[path.fromNode, default: []].contains(path) ||"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                !paths[path.toNode, default: []].contains(path) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return false"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    mutating func add(path: Path) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        assert(checkRep())"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        paths[path.fromNode, default: []].append(path)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        paths[path.toNode, default: []].append(path)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        assert(checkRep())"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    mutating func remove(path: Path) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        assert(checkRep())"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        paths[path.toNode]?.removeAll { $0 \u003d\u003d path }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        paths[path.fromNode]?.removeAll { $0 \u003d\u003d path }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        assert(checkRep())"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    mutating func removeAllPathsAssociated(with node: Node) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        assert(checkRep())"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        paths[node]?.forEach { path in"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            paths[path.toNode]?.removeAll { otherPath in path \u003d\u003d otherPath }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        paths[node] \u003d nil"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        assert(checkRep())"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func contains(path: Path) -\u003e Bool {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return allPaths.contains(path)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 58
    }
  },
  {
    "path": "SailingThroughHistory/Interface/ADT/Rect.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Rect.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 24/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "struct Rect: Codable, Equatable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let originX: Double"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let originY: Double"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let height: Double"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let width: Double"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var midX: Double {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return originX + width / 2"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var midY: Double {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return originY + width / 2"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.originX \u003d 0"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.originY \u003d 0"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.height \u003d 0"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.width \u003d 0"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(originX: Double, originY: Double, height: Double, width: Double) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.originX \u003d originX"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.originY \u003d originY"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.height \u003d height"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.width \u003d width"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func movedTo(originX: Double, originY: Double) -\u003e Rect {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return Rect(originX: originX, originY: originY, height: height, width: width)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 38
    }
  },
  {
    "path": "SailingThroughHistory/Interface/Controller/AvailableUpgradesDataSource.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  AvailableUpgradesDataSource.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 22/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class AvailableUpgradesDataSource: NSObject, UITableViewDataSource {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let reuseIdentifier: String \u003d \"upgradesTableCell\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let header \u003d \"Available Upgrades\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let buttonLabel \u003d \"Buy\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let upgrades: [Upgrade]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private weak var mainController: MainGameViewController?"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var enabled \u003d false"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(mainController: MainGameViewController, availableUpgrades: [Upgrade]) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.mainController \u003d mainController"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.upgrades \u003d availableUpgrades"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let cell \u003d tableView.dequeueReusableCell("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            withIdentifier: AvailableUpgradesDataSource.reuseIdentifier, for: indexPath)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            as? UITradeTableCell"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let tableCell \u003d cell else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            preconditionFailure(\"Cell does not inherit from UITradeTableCell.\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let upgrade \u003d upgrades[indexPath.row]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        tableCell.set(name: upgrade.name)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        tableCell.set(price: upgrade.cost)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        tableCell.set(buttonLabel: AvailableUpgradesDataSource.buttonLabel)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        tableCell.buttonPressedCallback \u003d { [weak self] in"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.mainController?.buy(upgrade: upgrade)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return tableCell"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func numberOfSections(in tableView: UITableView) -\u003e Int {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return 1"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -\u003e Int {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return upgrades.count"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, titleForHeaderInSection section: Int) -\u003e String? {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return AvailableUpgradesDataSource.header"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 56
    }
  },
  {
    "path": "SailingThroughHistory/Interface/Controller/EventTableController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  EventTableController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 15/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class EventTableController: NSObject {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let reuseIdentifier \u003d \"eventCell\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var events: [PresetEvent]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private weak var tableView: UITableView?"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(tableView: UITableView, events: [PresetEvent]) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.tableView \u003d tableView"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.events \u003d events"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.tableView?.reloadData()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension EventTableController: UITableViewDataSource {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -\u003e Int {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return events.count"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let cell \u003d tableView.dequeueReusableCell("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            withIdentifier: EventTableController.reuseIdentifier, for: indexPath) as? UIEventTableCell else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                fatalError(\"Event cell is of the wrong type.\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let event \u003d events[indexPath.row]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let triggered \u003d event.active"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        cell.set(label: event.displayName)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        cell.set(buttonLabel: triggered ? \"Turn Off\" : \"Turn On\")"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        cell.buttonPressedCallback \u003d {  [weak self] in"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            event.active \u003d !triggered"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.tableView?.reloadData()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return cell"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 45
    }
  },
  {
    "path": "SailingThroughHistory/Interface/Controller/MainGameViewController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  ViewController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 14/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import CountdownLabel"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class MainGameViewController: UIViewController {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var gameAndBackgroundWrapper: UIView!"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var scrollView: UIScrollView! {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            scrollView.delegate \u003d self"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            scrollView.maximumZoomScale \u003d 3"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var contextView: UIView!"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var backgroundImageView: UIImageView!"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var gameArea: UIView!"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var portInformationView: UIView!"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var portNameLabel: UILabel!"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var portOwnerLabel: UILabel!"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var portSetTaxButton: UIButtonRounded!"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var portItemsTableView: UITableView! {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            portItemsTableView.dataSource \u003d portItemsDataSource"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            portItemsTableView.delegate \u003d portItemsDataSource"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            portItemsTableView.reloadData()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var portTaxLabel: UILabel!"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var availableUpgradesTableView: UITableView! {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            availableUpgradesTableView.dataSource \u003d availableUpgradesDataSource"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            availableUpgradesTableView.reloadData()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var playerInfoWrapper: UIView!"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var playerMoneyLabel: UILabel!"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var playerShipCapacityLabel: UILabel!"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var playerCargoWeightLabel: UILabel!"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var playerItemsTable: UITableView!"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var togglePlayerInfoButton: UIButtonRounded!"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var toggleTeamScoresButton: UIButtonRounded!"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var teamScoresWrapper: UIBlurredBackgroundView!"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var teamScoreTableView: UITableView!"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var statusLabel: UILabel!"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var toggleActionPanelButton: UIButtonRounded!"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var diceResultLabel: UILabel!"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var actionPanelView: UIView!"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var countdownLabel: CountdownLabelView!"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var rollDiceButton: UIButtonRounded! {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            rollDiceButton.set(color: .red)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var messagesTableView: UITableView!"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var messagesView: UIBlurredBackgroundView!"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var toggleMessagesButton: UIButtonRounded!"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var gameMasterPanel: UIBlurredBackgroundView!"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var currentTurnOwner: GenericPlayer?"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private lazy var objectsController: ObjectsViewController \u003d"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        ObjectsViewController(view: gameArea, mainController: self)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private lazy var togglablePanels: [UIButton: UIView] \u003d ["
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        togglePlayerInfoButton: playerInfoWrapper,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        toggleTeamScoresButton: teamScoresWrapper,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        toggleMessagesButton: messagesView]"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private lazy var portItemsDataSource \u003d PortItemTableDataSource(mainController: self)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private lazy var availableUpgradesDataSource \u003d AvailableUpgradesDataSource(mainController: self,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                                               availableUpgrades: model.availableUpgrades)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private lazy var teamScoresController \u003d TeamScoreTableController(tableView: teamScoreTableView,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                                     scores: Dictionary())"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private lazy var messagesController \u003d MessagesTableController(tableView: messagesTableView)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var playerItemsDataSources \u003d [PlayerItemsTableDataSource]()"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let storage \u003d LocalStorage()"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var selectedPort: Port?"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var turnSystem: GenericTurnSystem?"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var network: RoomConnection?"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var backgroundData: Data?"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var model: GenericGameState {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let turnSystem \u003d turnSystem else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            fatalError(\"Turn system is nil\")"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return turnSystem.gameState"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var interfaceBounds: Rect {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return model.map.bounds"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override var prefersStatusBarHidden: Bool {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.viewDidLoad()"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        reInitScrollView()"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        initBackground()"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        objectsController.subscribeToNodes(in: model.map)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        objectsController.subscribeToPaths(in: model.map)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        objectsController.subscribeToObjects(in: model.map)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        turnSystem?.subscribeToState(with: updateForState)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        subscribePlayerInformation(for: model.getPlayers())"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override func viewDidAppear(_ animated: Bool) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        turnSystem?.startGame()"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        view.window?.rootViewController \u003d self"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        network?.changeRemovalCallback { [weak self] in"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.performSegue(withIdentifier: \"gameToMain\", sender: nil)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func updateForState(_ state: TurnSystem.State) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        DispatchQueue.main.async { [weak self] in"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let self \u003d self,"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let turnSystem \u003d self.turnSystem else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.messagesController.set(messages: turnSystem.messages)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.statusLabel.text \u003d \"\""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.playerTurnEnd()"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.currentTurnOwner \u003d nil"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.objectsController.updatePathWeather()"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.teamScoresController.set(scores: self.model.getTeamMoney())"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            switch state {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            case .waitPlayerInput(let player):"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let alert \u003d ControllerUtils.getGenericAlert(titled: \"\\(player.name)\u0027s turn has started.\","
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                withMsg: \"\") { [weak self] in"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    self?.turnSystem?.acknoledgeTurnStart()"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            case .playerInput(let player, let endTime):"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.statusLabel.text \u003d \"\\(player.name)\u0027s Turn\""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.currentTurnOwner \u003d player"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.playerTurnStart(player: player, endTime: endTime)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            case .ready:"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                break"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            case .waitForTurnFinish:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.statusLabel.text \u003d \"Waiting for other players to finish...\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            case .waitForStateUpdate:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                break"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            case .invalid:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                break"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            case .evaluateMoves:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                break"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func showInformation(ofPort port: Port) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        selectedPort \u003d port"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        portInformationView.isHidden \u003d false"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        portTaxLabel.text \u003d \"\\(InterfaceConstants.taxPrefix)\\(port.taxAmount.value)\""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        portNameLabel.text \u003d port.name"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        portOwnerLabel.text \u003d port.owner?.name ?? InterfaceConstants.unownedPortOwner"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        portItemsDataSource.didSelect(port: port, playerCanInteract:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            currentTurnOwner?.canTradeAt(port: port) ?? false)"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        portSetTaxButton.isHidden \u003d currentTurnOwner \u003d\u003d nil"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            || port.owner !\u003d currentTurnOwner?.team"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        portItemsTableView.reloadData()"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func buy(upgrade: Upgrade) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let currentTurnOwner \u003d currentTurnOwner else {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var msg: String?"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var title: String? \u003d \"Error\""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let result \u003d try turnSystem?.purchase(upgrade: upgrade, by: currentTurnOwner)"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            msg \u003d result?.message"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            title \u003d result?.title"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        } catch PlayerActionError.invalidAction(let errorMsg) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            msg \u003d errorMsg"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        } catch {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            msg \u003d error.localizedDescription"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if let msg \u003d msg, let title \u003d title {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let alert \u003d ControllerUtils.getGenericAlert(titled: title, withMsg: msg)"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func portItemButtonPressed(action: PortItemButtonAction) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let currentTurnOwner \u003d currentTurnOwner else {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var errorMsg: String?"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            switch action {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            case .playerBuy(let itemType):"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                try turnSystem?.buy(itemType: itemType, quantity: 1, by: currentTurnOwner)"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            case .playerSell(let itemType):"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                try turnSystem?.sell(itemType: itemType, quantity: 1, by: currentTurnOwner)"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        } catch PlayerActionError.invalidAction(let msg) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            errorMsg \u003d msg"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        } catch {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            errorMsg \u003d error.localizedDescription"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if let errorMsg \u003d errorMsg {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let alert \u003d ControllerUtils.getGenericAlert(titled: \"Error\", withMsg: errorMsg)"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        playerItemsTable.reloadData()"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBAction private func togglePanelVisibility(_ sender: UIButtonRounded) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        togglablePanels[sender]?.isHidden.toggle()"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBAction private func toggleActionPanelVisibility(_ sender: UIButtonRounded) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let currentTurnOwner \u003d currentTurnOwner else {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            actionPanelView.isHidden \u003d false"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            gameMasterPanel.isHidden \u003d false"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if currentTurnOwner.isGameMaster {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            gameMasterPanel.isHidden.toggle()"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            actionPanelView.isHidden \u003d false"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            actionPanelView.isHidden.toggle()"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            gameMasterPanel.isHidden \u003d false"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBAction private func hidePortInformationPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        portInformationView.isHidden \u003d true"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBAction private func setTaxButtonPressed(_ sender: UIButtonRounded) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let player \u003d currentTurnOwner,"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let port \u003d selectedPort else {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let alert2 \u003d UIAlertController(title: \"Changing tax of \\(port.name)\","
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            message: \"Please enter the amount you wish to change the tax to.\","
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            preferredStyle: .alert)"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        alert2.addTextField { textField in"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            textField.keyboardType \u003d .numberPad"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let okAction \u003d UIAlertAction(title: \"OK\", style: .default) { [weak self] _ in"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let input \u003d alert2.textFields?.first?.text,"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let newTax \u003d Int(input) else {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let alert \u003d ControllerUtils.getGenericAlert(titled: \"Error\", withMsg: \"Only numbers are allowed.\")"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self?.present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            var msg: String?"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            do {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                try self?.turnSystem?.setTax(for: port.identifier, to: newTax, by: player)"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            } catch PlayerActionError.invalidAction(let errorMsg) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                msg \u003d errorMsg"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            } catch {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                msg \u003d error.localizedDescription"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if let msg \u003d msg {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let alert \u003d ControllerUtils.getGenericAlert(titled: \"Error\", withMsg: msg)"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self?.present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        alert2.addAction(okAction)"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        // Create Cancel button"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let cancelAction \u003d UIAlertAction(title: \"Cancel\", style: .cancel) { _ in }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        alert2.addAction(cancelAction)"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        present(alert2, animated: true, completion: nil)"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBAction private func rollDiceButtonPressed(_ sender: UIButtonRounded) {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let randomLength \u003d 5"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        sender.isEnabled \u003d false"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        sender.set(color: .lightGray)"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for interval in 0...randomLength {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            DispatchQueue.main.asyncAfter(deadline: .now() + 0.01 * pow(Double(interval), 2)) { [weak self] in"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                if interval \u003d\u003d randomLength {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    guard let currentTurnOwner \u003d self?.currentTurnOwner, let turnSystem \u003d self?.turnSystem else {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        return"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    do {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        let (result, nodes) \u003d try turnSystem.roll(for: currentTurnOwner)"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        self?.diceResultLabel.text \u003d String(Int(result))"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        self?.objectsController.make(choosableNodes: nodes)"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    } catch {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        let alert \u003d ControllerUtils.getGenericAlert(titled: \"Error\", withMsg: error.localizedDescription)"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        self?.rollDiceButton.isEnabled \u003d true"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        self?.present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self?.diceResultLabel.text \u003d String(Int.random(in: 1...6))"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBAction private func onTapGameArea(_ sender: UITapGestureRecognizer) {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let view \u003d gameArea.hitTest(sender.location(in: gameArea), with: nil)"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let nodeView \u003d view as? NodeView else {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let nodeId \u003d objectsController.onTap(nodeView: nodeView)"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let currentTurnOwner \u003d currentTurnOwner else {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if !currentTurnOwner.hasRolled {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let name \u003d nodeView.node.name"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let alert \u003d ControllerUtils.getConfirmationAlert(title: \"Travel Confirmation\","
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                         desc: \"Are you sure you would like to travel to \\(name)?\","
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            okAction: { [weak self] in"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                do {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    try self?.turnSystem?.selectForMovement(nodeId: nodeId, by: currentTurnOwner)"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                } catch {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    let alert \u003d ControllerUtils.getGenericAlert(titled: \"Error\", withMsg: \"Please try again.\")"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    self?.present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self?.turnSystem?.endTurn()"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }, cancelAction: nil)"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func initBackground() {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let backgroundData \u003d backgroundData,"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let gameAndBackgroundWrapper \u003d self.gameAndBackgroundWrapper else {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let image \u003d UIImage(data: backgroundData) else {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        backgroundImageView.contentMode \u003d .topLeft"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        backgroundImageView.frame \u003d CGRect(origin: CGPoint.zero, size: image.size)"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        gameAndBackgroundWrapper.frame \u003d backgroundImageView.frame"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        gameAndBackgroundWrapper.subviews.forEach {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            $0.frame \u003d gameAndBackgroundWrapper.frame"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        scrollView.contentSize \u003d image.size"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        scrollView.minimumZoomScale \u003d max(view.frame.height/image.size.height, view.frame.width/image.size.width)"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        scrollView.setZoomScale(scrollView.minimumZoomScale, animated: false)"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        backgroundImageView.image \u003d image"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func reInitScrollView () {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let oldScrollView \u003d self.scrollView else {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            preconditionFailure(\"scrollView is nil.\")"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let scrollView \u003d UIScrollView(frame: self.scrollView.frame)"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.scrollView \u003d scrollView"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        scrollView.translatesAutoresizingMaskIntoConstraints \u003d false"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        view.insertSubview(scrollView, aboveSubview: oldScrollView)"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        scrollView.topAnchor.constraint(equalTo: view.topAnchor).isActive \u003d true"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        scrollView.trailingAnchor.constraint(equalTo: view.trailingAnchor).isActive \u003d true"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        scrollView.bottomAnchor.constraint(equalTo: view.bottomAnchor).isActive \u003d true"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        scrollView.leadingAnchor.constraint(equalTo: view.leadingAnchor).isActive \u003d true"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        scrollView.updateConstraints()"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        gameAndBackgroundWrapper.removeFromSuperview()"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        scrollView.addSubview(gameAndBackgroundWrapper)"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func updatePlayerInformation(for player: GenericPlayer) {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let gold \u003d player.money.value"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let cargo \u003d player.currentCargoWeight"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let capacity \u003d player.weightCapacity"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        playerMoneyLabel.text \u003d \"\\(InterfaceConstants.moneyPrefix)\\(gold)\""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        playerCargoWeightLabel.text \u003d \"\\(InterfaceConstants.cargoPrefix)\\(cargo)\""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        playerShipCapacityLabel.text \u003d \"\\(InterfaceConstants.capacityPrefix)\\(capacity)\""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        playerItemsDataSources.removeAll()"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let dataSource \u003d PlayerItemsTableDataSource(player: player,"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                    tableView: playerItemsTable)"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        playerItemsDataSources.append(dataSource)"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func subscribePlayerInformation(for players: [GenericPlayer]) {"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for player in players {"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            player.subscribeToMoney { [weak self] player, gold in"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let currentTurnOwner \u003d self?.currentTurnOwner else {"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                if currentTurnOwner !\u003d player {"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self?.playerMoneyLabel.text \u003d \"\\(InterfaceConstants.moneyPrefix)\\(gold)\""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            player.subscribeToCargoWeight { [weak self] player, cargo in"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let currentTurnOwner \u003d self?.currentTurnOwner else {"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                if currentTurnOwner !\u003d player {"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self?.playerCargoWeightLabel.text \u003d \"\\(InterfaceConstants.cargoPrefix)\\(cargo)\""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            player.subscribeToWeightCapcity { [weak self] player, capacity in"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let currentTurnOwner \u003d self?.currentTurnOwner else {"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                if currentTurnOwner !\u003d player {"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self?.playerShipCapacityLabel.text \u003d \"\\(InterfaceConstants.capacityPrefix)\\(capacity)\""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func playerTurnStart(player: GenericPlayer, endTime: TimeInterval) {"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        func animatePlayerTurnStart() {"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if player.isGameMaster {"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                gameMasterPanel.isHidden \u003d false"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                actionPanelView.isHidden \u003d false"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                objectsController.makeShipGlow(for: player)"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                availableUpgradesDataSource.enabled \u003d player.canBuyUpgrade()"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                availableUpgradesTableView.reloadData()"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                toggleActionPanelButton.isHidden \u003d false"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                rollDiceButton.isEnabled \u003d true"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                rollDiceButton.set(color: .red)"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            countdownLabel.set(isHidden: false)"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            countdownLabel.setCountDownTime(seconds: endTime - Date().timeIntervalSince1970)"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            countdownLabel.start()"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        animatePlayerTurnStart()"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if player.isGameMaster {"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        updatePlayerInformation(for: player)"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func playerTurnEnd() {"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        actionPanelView.isHidden \u003d true"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        toggleActionPanelButton.isHidden \u003d true"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        countdownLabel.set(isHidden: true)"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        portInformationView.isHidden \u003d true"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        availableUpgradesDataSource.enabled \u003d false"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        availableUpgradesTableView.reloadData()"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        objectsController.resetChoosableNodes()"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension MainGameViewController: UIScrollViewDelegate {"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func viewForZooming(in scrollView: UIScrollView) -\u003e UIView? {"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return gameAndBackgroundWrapper"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 2,
      "Jason Chong": 466,
      "yuhongherald": 1
    }
  },
  {
    "path": "SailingThroughHistory/Interface/Controller/MessagesTableController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  MessagesTableController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class MessagesTableController: NSObject {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private weak var tableView: UITableView?"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var messages \u003d [GameMessage]()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(tableView: UITableView) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.tableView \u003d tableView"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.init()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        tableView.dataSource \u003d self"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        reloadMessages()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func set(messages: [GameMessage]) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.messages \u003d messages"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        reloadMessages()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func reloadMessages() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        tableView?.reloadData()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let numRows \u003d tableView?.numberOfRows(inSection: 0) else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if numRows \u003e 0 {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            tableView?.scrollToRow(at: IndexPath(row: numRows - 1, section: 0), at: .bottom, animated: true)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func convertToString(from gameMessage: GameMessage) -\u003e String {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        switch gameMessage {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .playerAction(let name, let message):"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return \"\\(name) \\(message)\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .event(let name, let message):"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return \"\\(name) \\(message)\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension MessagesTableController: UITableViewDataSource {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -\u003e Int {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return messages.count"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let cell \u003d UITableViewCell(style: .default, reuseIdentifier: nil)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let message \u003d messages[indexPath.row]"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        cell.textLabel?.adjustsFontSizeToFitWidth \u003d true"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        cell.textLabel?.text \u003d convertToString(from: message)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return cell"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 61
    }
  },
  {
    "path": "SailingThroughHistory/Interface/Controller/ObjectsViewController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  ObjectsViewController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 21/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class ObjectsViewController {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var objectViews \u003d [GameObject: UIImageView]()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let mainController: MainGameViewController"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var nodeViews \u003d [Int: NodeView]()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var paths \u003d ObjectPaths()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var pathLayers \u003d [Path: CAShapeLayer]()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var objectQueues \u003d [GameObject: DispatchQueue]()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let view: UIView"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var pathWeathers \u003d [Path: UILightningView]()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var modelBounds: Rect {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return mainController.interfaceBounds"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(view: UIView, mainController: MainGameViewController) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.view \u003d view"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.mainController \u003d mainController"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func onTap(nodeView: NodeView) -\u003e Int {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if nodeView.node as? Port !\u003d nil {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            onTapPort(portView: nodeView)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return nodeView.node.identifier"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToNodes(in map: Map) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        map.subscribeToNodes { [weak self] nodes in"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let self \u003d self else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            for node in nodes {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                if self.nodeViews[node.identifier] !\u003d nil {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    continue"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let nodeView \u003d NodeView(node: node)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                nodeView.isUserInteractionEnabled \u003d true"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                nodeView.frame \u003d CGRect.translatingFrom(otherBounds: self.modelBounds, otherFrame: node.frame,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                        to: self.view.bounds)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                nodeView.image \u003d self.getImageFor(node: node)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.view.addSubview(nodeView)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.nodeViews[node.identifier] \u003d nodeView"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToPaths(in map: Map) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        map.subscribeToPaths { [weak self] nodePaths in"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let mapPaths \u003d Set(nodePaths.values.flatMap { $0 })"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let existingPaths \u003d self?.paths.allPaths else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            for path in mapPaths {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                if existingPaths.contains(path) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let fromFrame \u003d self?.nodeViews[path.fromNode.identifier]?.frame,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    let toFrame \u003d self?.nodeViews[path.toNode.identifier]?.frame else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        continue"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self?.paths.add(path: path)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self?.addToView(path: path, from: fromFrame, to: toFrame, withDuration: 1)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func make(choosableNodes: [Int]) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for nodeId in choosableNodes {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let view \u003d nodeViews[nodeId] else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            view.addGlow(colored: .yellow)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func resetChoosableNodes() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        nodeViews.values"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .forEach {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                $0.removeGlow()"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func addToView(path: Path, from fromFrame: CGRect,"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                           to toFrame: CGRect, withDuration duration: TimeInterval) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let startPoint \u003d CGPoint(x: fromFrame.midX, y: fromFrame.midY)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let endPoint \u003d CGPoint(x: toFrame.midX, y: toFrame.midY)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let bezierPath \u003d UIBezierPath()"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let layer \u003d CAShapeLayer()"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        bezierPath.drawArrow(from: startPoint, to: endPoint)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        layer.path \u003d bezierPath.cgPath"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        layer.strokeColor \u003d UIColor.darkGray.cgColor"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        layer.fillColor \u003d UIColor.clear.cgColor"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        layer.lineWidth \u003d 4.0"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        layer.lineDashPattern \u003d [10.0, 2.0]"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        view.layer.addSublayer(layer)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        pathLayers[path] \u003d layer"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let animation \u003d CABasicAnimation(keyPath: \"strokeEnd\")"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        animation.fromValue \u003d 0.0"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        animation.toValue \u003d 1.0"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        animation.duration \u003d duration"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        layer.add(animation, forKey: \"drawLineAnimation\")"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let weatherView \u003d UILightningViewFactory.getLightningView(frame: bezierPath.bounds)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        pathWeathers[path] \u003d weatherView"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "henry"
        },
        "content": "        //view.addSubview(weatherView)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        weatherView.initView()"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToObjects(in map: Map) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        map.subscribeToObjects { [weak self] in"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let self \u003d self else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            var objects \u003d [GameObject](self.objectViews.keys)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            for object in $0 {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.register(object: object)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                objects.removeAll { $0 \u003d\u003d object }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            for removedObject in objects {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let objectView \u003d self.objectViews[removedObject]"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                objectView?.removeFromSuperview()"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.objectViews[removedObject] \u003d nil"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func updatePathWeather() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for path in paths.allPaths {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let isActive \u003d path"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                .modifiers"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                .map { $0.isActive }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                .contains(true)"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if isActive {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                pathWeathers[path]?.start()"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                pathWeathers[path]?.stop()"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            pathLayers[path]?.strokeColor \u003d (isActive ? UIColor.red : UIColor.darkGray).cgColor"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func makeShipGlow(for player: GenericPlayer) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for (object, view) in objectViews {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let ship \u003d object as? ShipUI else {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "henry"
        },
        "content": "            if ship \u003d\u003d player.playerShip?.shipObject {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                view.addGlow(colored: .green)"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                view.removeGlow()"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func update(frame: Rect, for object: GameObject) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let objectView \u003d objectViews[object] else {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if objectQueues[object] \u003d\u003d nil {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let identifier \u003d String(UInt(bitPattern: ObjectIdentifier(object)))"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            objectQueues[object] \u003d DispatchQueue(label: identifier)"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.objectQueues[object]?.async {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let semaphore \u003d DispatchSemaphore.init(value: 0)"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            DispatchQueue.main.async { [weak self] in"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let self \u003d self else {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                UIView.animate(withDuration: 1, delay: 0, options: .curveLinear, animations: {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    let newFrame \u003d CGRect.translatingFrom(otherBounds: self.modelBounds,"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                          otherFrame: frame, to: self.view.bounds)"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    objectView.frame \u003d newFrame"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }, completion: { _ in semaphore.signal() })"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            semaphore.wait()"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func register(object: GameObject) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if self.objectViews[object] !\u003d nil {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let objectFrame \u003d CGRect.translatingFrom(otherBounds: self.modelBounds,"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                 otherFrame: object.frame.value, to: self.view.bounds)"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let objectView \u003d UIImageView(frame: objectFrame)"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        object.subscibeToFrame { [weak self] frame in"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.update(frame: frame, for: object)"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if object as? ShipUI !\u003d nil {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            objectView.image \u003d UIImage(named: \"ship.png\")"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.objectViews[object] \u003d objectView"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.view.addSubview(objectView)"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func getImageFor(node: Node) -\u003e UIImage? {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if node as? Sea !\u003d nil {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return UIImage(named: \"sea-node\")"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        } else if node as? Port !\u003d nil {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return UIImage(named: \"port-node\")"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return nil"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func onTapPort(portView: NodeView) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let port \u003d portView.node as? Port else {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        mainController.showInformation(ofPort: port)"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private enum State {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case chooseDestination"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case normal"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 2,
      "Jason Chong": 231
    }
  },
  {
    "path": "SailingThroughHistory/Interface/Controller/PlayerItemsTableDataSource.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  PlayerItemsTableDataSource.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 23/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class PlayerItemsTableDataSource: NSObject, UITableViewDataSource {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let reuseIdentifier \u003d \"playerItemsTableCell\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let header \u003d \"Items\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private weak var tableView: UITableView?"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let player: GenericPlayer"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var items \u003d [GenericItem]()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(player: GenericPlayer, tableView: UITableView) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.player \u003d player"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.tableView \u003d tableView"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.init()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        tableView.dataSource \u003d self"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.subscribeToItems()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func subscribeToItems() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        player.subscribeToItems { [weak self] _, items in"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.items \u003d items"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.tableView?.reloadData()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let cell \u003d UITableViewCell(style: .value1,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                   reuseIdentifier: PlayerItemsTableDataSource.reuseIdentifier)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "        cell.textLabel?.text \u003d items[indexPath.row].itemParameter?.displayName ?? \"\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        cell.detailTextLabel?.text \u003d \"\\(InterfaceConstants.itemQuantityPrefix)\\(items[indexPath.row].quantity)\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return cell"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func numberOfSections(in tableView: UITableView) -\u003e Int {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return 1"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -\u003e Int {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return items.count"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, titleForHeaderInSection section: Int) -\u003e String? {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return PlayerItemsTableDataSource.header"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 1,
      "Jason Chong": 53
    }
  },
  {
    "path": "SailingThroughHistory/Interface/Controller/PortItemTableDataSource.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  MainGameViewController+TableViewDelegate.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 22/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class PortItemTableDataSource: NSObject, UITableViewDataSource, UITableViewDelegate {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let reuseIdentifier: String \u003d \"itemsTableCell\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let defaultPrice: Int \u003d 100"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let buyButtonLabel \u003d \"Buy\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let sellButtonLabel \u003d \"Sell\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let boughtSection \u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let soldSection \u003d 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let numSections \u003d 2"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private weak var mainController: MainGameViewController?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var playerCanInteract \u003d false"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var selectedPort: Port?"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var itemTypesSoldByPort \u003d [ItemType]()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var itemTypesBoughtByPort \u003d [ItemType]()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(mainController: MainGameViewController) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.mainController \u003d mainController"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func didSelect(port: Port, playerCanInteract: Bool) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.itemTypesSoldByPort \u003d port.itemParametersSoldByPort"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.itemTypesBoughtByPort \u003d port.itemParametersBoughtByPort"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.playerCanInteract \u003d playerCanInteract"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.selectedPort \u003d port"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let cell \u003d tableView.dequeueReusableCell("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            withIdentifier: PortItemTableDataSource.reuseIdentifier, for: indexPath)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            as? UITradeTableCell"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let tableCell \u003d cell else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            preconditionFailure(\"Cell does not inherit from UITradeTableCell.\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let port \u003d selectedPort else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return tableCell"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "        var array: [ItemType]"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        switch indexPath.section {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case PortItemTableDataSource.boughtSection:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": "            array \u003d itemTypesBoughtByPort"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let item \u003d array[indexPath.row]"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": "            tableCell.set(price: port.getSellValue(of: item) ??"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                PortItemTableDataSource.defaultPrice)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            tableCell.set(buttonLabel: PortItemTableDataSource.sellButtonLabel)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            tableCell.buttonPressedCallback \u003d { [weak self] in"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self?.mainController?.portItemButtonPressed(action: .playerSell(item: item))"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case PortItemTableDataSource.soldSection:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": "            array \u003d itemTypesSoldByPort"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let item \u003d array[indexPath.row]"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "henry"
        },
        "content": "            tableCell.set(price: port.getBuyValue(of: array[indexPath.row]) ??"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                PortItemTableDataSource.defaultPrice)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            tableCell.set(buttonLabel: PortItemTableDataSource.buyButtonLabel)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            tableCell.buttonPressedCallback \u003d { [weak self] in"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self?.mainController?.portItemButtonPressed(action: .playerBuy(item: item))"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            array \u003d []"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "henry"
        },
        "content": "        tableCell.set(name: array[indexPath.row].rawValue)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if playerCanInteract {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            tableCell.enable()"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            tableCell.disable()"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return tableCell"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func numberOfSections(in tableView: UITableView) -\u003e Int {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return PortItemTableDataSource.numSections"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -\u003e Int {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        switch section {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case PortItemTableDataSource.boughtSection:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "henry"
        },
        "content": "            return itemTypesBoughtByPort.count"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case PortItemTableDataSource.soldSection:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "henry"
        },
        "content": "            return itemTypesSoldByPort.count"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return 0"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, titleForHeaderInSection section: Int) -\u003e String? {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        switch section {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case PortItemTableDataSource.boughtSection:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return \"Buying\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case PortItemTableDataSource.soldSection:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return \"Selling\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 11,
      "Jason Chong": 97
    }
  },
  {
    "path": "SailingThroughHistory/Interface/Controller/TeamScoreTableController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  TeamScoreTableController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 11/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class TeamScoreTableController: NSObject {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let header \u003d \"Total Team Money:\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    weak var tableView: UITableView?"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var scores: [(Team, Int)]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(tableView: UITableView, scores: [Team: Int]) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.tableView \u003d tableView"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.scores \u003d Array(scores)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.init()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        tableView.dataSource \u003d self"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        tableView.reloadData()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func set(scores: [Team: Int]) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.scores \u003d Array(scores)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        tableView?.reloadData()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension TeamScoreTableController: UITableViewDataSource {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -\u003e Int {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return scores.count"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let cell \u003d UITableViewCell(style: .default, reuseIdentifier: nil)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let score \u003d scores[indexPath.row]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        cell.textLabel?.text \u003d \"\\(score.0.name): \\(String(score.1))\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return cell"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, titleForHeaderInSection section: Int) -\u003e String? {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return TeamScoreTableController.header"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 45
    }
  },
  {
    "path": "SailingThroughHistory/Interface/ControllerUtils.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  ControllerUtils.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  BubbleBlaster"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 27/2/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 nus.cs3217.a0164721j. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "/// Shared general utilities for controller component."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "enum ControllerUtils {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Generates a controller for a confirmation alert."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - title: The title of the alert."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - desc: The description to show in the alert."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - okAction: The function to call if ok is pressed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - cancelAction: The function to call if cancel is pressed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Returns: The generated controller."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static func getConfirmationAlert(title: String, desc: String, okAction: (() -\u003e Void)?, cancelAction: (() -\u003e Void)?)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        -\u003e UIAlertController {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let confirmationAlert \u003d UIAlertController(title: title, message: desc, preferredStyle: .alert)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            confirmationAlert.addAction(UIAlertAction(title: \"Ok\", style: .default, handler: { _ in okAction?()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }))"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            confirmationAlert.addAction(UIAlertAction(title: \"Cancel\", style: .cancel, handler: { _ in cancelAction?()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }))"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return confirmationAlert"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Generates a controller for a generic alert."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - title: The title of the alert."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - message: The description to show in the alert."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Returns: The generated controller."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static func getGenericAlert(titled title: String, withMsg message: String) -\u003e UIAlertController {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return getGenericAlert(titled: title, withMsg: message, action: nil)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Generates a controller for a generic alert."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - title: The title of the alert."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - message: The description to show in the alert."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - action: The function to call when ok is pressed."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Returns: The generated controller."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static func getGenericAlert(titled title: String, withMsg message: String, action: (() -\u003e Void)?)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        -\u003e UIAlertController {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let alert \u003d UIAlertController(title: title, message: message, preferredStyle: .alert)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            alert.addAction(UIAlertAction(title: \"OK\", style: .default) { _ in action?() })"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return alert"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 56
    }
  },
  {
    "path": "SailingThroughHistory/Interface/GenericPublishSubject.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  GamePublishSubject.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 19/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import RxSwift"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class GenericPublishSubject\u003cElement\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let disposeBag \u003d DisposeBag()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let publishSubject \u003d PublishSubject\u003cElement\u003e()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func on(next: Element) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        publishSubject.onNext(next)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribe(with observer: @escaping (Element) -\u003e Void) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return publishSubject.observeOn(SerialDispatchQueueScheduler(qos: .userInteractive))"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .subscribe(onNext: observer, onError: nil, onCompleted: nil, onDisposed: nil)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .disposed(by: disposeBag)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 24
    }
  },
  {
    "path": "SailingThroughHistory/Interface/InterfaceConstants.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  InterfaceConstants.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 19/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "enum InterfaceConstants {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let moneyPrefix \u003d \"Gold: \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let cargoPrefix \u003d \"Current Cargo Weight: \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let capacityPrefix \u003d \"Weight Capacity: \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let itemQuantityPrefix \u003d \"x\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let waitingForOthersMsg \u003d \"Waiting for other players to finish.\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let defaultAnimationDuration: TimeInterval \u003d 0.25"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let unownedPortOwner \u003d \"Neutral\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let taxPrefix \u003d \"Tax: \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 20
    }
  },
  {
    "path": "SailingThroughHistory/Interface/Path.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Path.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by Jason Chong on 18/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "struct Path: Hashable, Codable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    let fromObject: GameObject"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    let toObject: GameObject"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(from fromNode: GameObject, to toNode: GameObject) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        fromObject \u003d fromNode"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        toObject \u003d toNode"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 19
    }
  },
  {
    "path": "SailingThroughHistory/Interface/View/CountdownLabelView.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  CountdownLabelView.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 11/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import CountdownLabel"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "@objc protocol CountdownLabelView: class {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func set(isHidden: Bool)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func setCountDownTime(seconds: TimeInterval)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func start()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension CountdownLabel: CountdownLabelView {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @objc func set(isHidden: Bool) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.isHidden \u003d isHidden"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @objc func start() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.animationType \u003d .Burn"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.start(completion: nil)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @objc func setCountDownTime(seconds: TimeInterval) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        /// This is due to a bug in the library where the label is minutes"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        /// but the input is taken as seconds"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.setCountDownTime(minutes: seconds)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 32
    }
  },
  {
    "path": "SailingThroughHistory/Interface/View/PortItemButtonAction.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  PortItemButtonAction.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 22/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "enum PortItemButtonAction {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": "    case playerBuy(item: ItemType)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "    case playerSell(item: ItemType)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 2,
      "Jason Chong": 10
    }
  },
  {
    "path": "SailingThroughHistory/Interface/View/PortItemTableCellDelegate.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  PortItemTableCellDelegate.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 22/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "protocol PortItemTableCellDelegate: class {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func portItemButtonPressed(action: PortItemButtonAction)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 11
    }
  },
  {
    "path": "SailingThroughHistory/Interface/View/UIBezierPath+Arrow.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  UIBezierPath+Arrow.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 11/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension UIBezierPath {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func drawArrow(from start: CGPoint, to end: CGPoint, arrowAngle: CGFloat \u003d CGFloat.pi / 6, headLength: CGFloat \u003d 30) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.move(to: start)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.addLine(to: end)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let startEndAngle \u003d atan((end.y - start.y) / (end.x - start.x))"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            + ((end.x - start.x) \u003c 0 ? CGFloat(Double.pi) : 0)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let arrowLine1 \u003d CGPoint(x: end.x + headLength * cos(CGFloat(Double.pi) - startEndAngle + arrowAngle),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                 y: end.y - headLength * sin(CGFloat(Double.pi) - startEndAngle + arrowAngle))"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let arrowLine2 \u003d CGPoint(x: end.x + headLength * cos(CGFloat(Double.pi) - startEndAngle - arrowAngle),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                 y: end.y - headLength * sin(CGFloat(Double.pi) - startEndAngle - arrowAngle))"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.addLine(to: arrowLine1)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.move(to: end)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.addLine(to: arrowLine2)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 26
    }
  },
  {
    "path": "SailingThroughHistory/Interface/View/UIBlurredBackgroundView.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  UIBlurredBackgroundView.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 21/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class UIBlurredBackgroundView: UIView {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override init(frame: CGRect) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.init(frame: frame)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        blurBackground()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.init(coder: aDecoder)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        blurBackground()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func blurBackground() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.backgroundColor \u003d UIColor.clear"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let blurEffect \u003d UIBlurEffect(style: .extraLight)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let blurView \u003d UIVisualEffectView(effect: blurEffect)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        blurView.autoresizingMask \u003d [.flexibleWidth, .flexibleHeight]"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        blurView.frame \u003d self.bounds"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        blurView.alpha \u003d 0.7"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.insertSubview(blurView, at: 0)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 31
    }
  },
  {
    "path": "SailingThroughHistory/Interface/View/UIButtonRounded.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  UIButtonRounded.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 17/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class UIButtonRounded: UIButton {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let contentEdgeInsets \u003d UIEdgeInsets(top: 5, left: 40, bottom: 5, right: 0)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let titleEdgeInsets \u003d UIEdgeInsets(top: 0, left: -20, bottom: 0, right: 20)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let borderWidth: CGFloat \u003d 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let cornerRadius: CGFloat \u003d 20"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let backgroundColor \u003d UIColor.white"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let defaultColor \u003d UIColor(red: 0.10, green: 0.47, blue: 0.98, alpha: 1)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override init(frame: CGRect) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.init(frame: frame)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        roundEdges()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.init(coder: aDecoder)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        roundEdges()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func roundEdges() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        layer.cornerRadius \u003d UIButtonRounded.cornerRadius"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        borderWidth \u003d UIButtonRounded.borderWidth"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        borderColor \u003d UIButtonRounded.defaultColor"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        contentEdgeInsets \u003d UIButtonRounded.contentEdgeInsets"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        titleEdgeInsets \u003d UIButtonRounded.titleEdgeInsets"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        backgroundColor \u003d UIButtonRounded.backgroundColor"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        titleLabel?.adjustsFontSizeToFitWidth \u003d true"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func set(color: UIColor) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        setTitleColor(color, for: .normal)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        borderColor \u003d color"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 1,
      "Jason Chong": 42
    }
  },
  {
    "path": "SailingThroughHistory/Interface/View/UIEventTableCell.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  UIEventTableCell.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 15/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class UIEventTableCell: UITableViewCell {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var labelView: UILabel! {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            labelView.adjustsFontSizeToFitWidth \u003d true"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var buttonView: UIButtonRounded!"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var buttonPressedCallback: (() -\u003e Void)?"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func set(label: String) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        labelView.text \u003d label"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func set(buttonLabel: String) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        buttonView.setTitle(buttonLabel, for: .normal)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBAction private func buttonPressed(_ sender: UIButtonRounded) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        buttonPressedCallback?()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 31
    }
  },
  {
    "path": "SailingThroughHistory/Interface/View/UILightningView.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  UILightningView.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 12/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import URWeatherView"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "protocol UILightningView: UIView {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func initView()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func stop()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func start()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension URWeatherView: UILightningView {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func start() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let option \u003d UREffectLightningOption(lineThickness: 100)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.isUserInteractionEnabled \u003d false"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let times \u003d [0.1, 0.103, 0.14,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                     0.17, 0.173, 0.20,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                     0.35, 0.353, 0.38,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                     0.385, 0.388, 0.415,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                     0.54, 0.543, 0.57,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                     0.69, 0.693, 0.72,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                     0.74, 0.743, 0.77,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                     0.93, 0.933, 0.96]"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let lightningShowTimes \u003d [times[0] - 0.005, times[4] - 0.005, times[7] - 0.005, times[10] - 0.005,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                  times[13] - 0.005, times[16] - 0.005, times[19] - 0.005, times[22] - 0.005]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.startWeatherScene(.lightning, duration: 6.0, showTimes: lightningShowTimes,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                               userInfo: [URWeatherKeyLightningOption: option])"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func initView() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        UIGraphicsBeginImageContextWithOptions(frame.size, false, 0.0)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let blank \u003d UIGraphicsGetImageFromCurrentImageContext() else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        UIGraphicsEndImageContext()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.initView(mainWeatherImage: blank, backgroundImage: blank)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 43
    }
  },
  {
    "path": "SailingThroughHistory/Interface/View/UILightningViewFactory.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  UILightningViewFactory.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 12/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import URWeatherView"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "enum UILightningViewFactory {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static func getLightningView(frame: CGRect) -\u003e UILightningView {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return URWeatherView(frame: frame)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 15
    }
  },
  {
    "path": "SailingThroughHistory/Interface/View/UITradeTableCell.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  UIPortItemTableCell.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 22/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class UITradeTableCell: UITableViewCell {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var itemNameLabel: UILabel!"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var itemPriceLabel: UILabel!"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var actionButton: UIButtonRounded!"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var buttonPressedCallback: (() -\u003e Void)?"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBAction func buttonPressed(_ sender: UIButton) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        buttonPressedCallback?()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func set(name: String) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        itemNameLabel.text \u003d name"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func set(price: Int) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        itemPriceLabel.text \u003d String(price)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func set(buttonLabel: String) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        actionButton.setTitle(buttonLabel, for: .normal)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func enable() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        actionButton.isEnabled \u003d true"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        actionButton.set(color: UIColor.blue)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func disable() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        actionButton.isEnabled \u003d false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        actionButton.set(color: UIColor.lightGray)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 44
    }
  },
  {
    "path": "SailingThroughHistory/Interface/View/UIVIew+Border.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  UIView+Border.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  BubbleBlaster"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 27/2/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 nus.cs3217.a0164721j. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "/// Extension for changing border settings in interface builder."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "/// Used only for convenience."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "/// @IBInspectable Code from : https://stackoverflow.com/questions/28854469/change-uibutton-bordercolor-in-storyboard"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension UIView {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBInspectable var cornerRadius: CGFloat {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return layer.cornerRadius"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            layer.cornerRadius \u003d newValue"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            layer.masksToBounds \u003d newValue \u003e 0"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBInspectable var borderWidth: CGFloat {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return layer.borderWidth"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            layer.borderWidth \u003d newValue"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBInspectable var borderColor: UIColor? {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return UIColor(cgColor: layer.borderColor!)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            layer.borderColor \u003d newValue?.cgColor"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 42
    }
  },
  {
    "path": "SailingThroughHistory/Interface/View/View+SpecialEffects.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  View+SpecialEffects.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  GameEngine"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 17/2/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 nus.cs3217.a0164721j. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension UIView {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Adds a glow of the input color to the view."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter color: `UIColor` of the glow."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func addGlow(colored color: UIColor) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        layer.shadowOffset \u003d .zero"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        layer.shadowColor \u003d color.cgColor"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        layer.shadowRadius \u003d 20"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        layer.shadowOpacity \u003d 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        layer.shadowPath \u003d UIBezierPath(rect: bounds).cgPath"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Removes glow from the view."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter color: `UIColor` of the glow."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func removeGlow() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        layer.shadowOpacity \u003d 0"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func fadeOutAndRemove(withDuration duration: TimeInterval, completion callback: @escaping () -\u003e Void) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        UIView.animate(withDuration: duration, animations: { [weak self] in"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.alpha \u003d 0"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }, completion: { [weak self] _ in"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.removeFromSuperview()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            callback()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        })"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 37
    }
  },
  {
    "path": "SailingThroughHistory/Interface/View/View+Translate.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Taken from Jason\u0027s PS4"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  UIView+Translate.swift"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  GameEngine"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 19/2/19."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 nus.cs3217.a0164721j. All rights reserved."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension UIView {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Transforms the frame of this view to match the given frame, which is of a different scale due to being in the"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// given other bound. This view will be scaled and transformed to have a frame equivalent of the given frame."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - otherBounds: The bounds that contain the other frame."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - otherFrame: The frame to match."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func translateFromDifferentScale(otherBounds: Rect, otherFrame: Rect) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let bounds \u003d superview?.bounds else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let otherBoundsCg \u003d CGRect(fromRect: otherBounds)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let otherFrameCg \u003d CGRect(fromRect: otherFrame)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let ratio \u003d min(bounds.width / otherBoundsCg.width, bounds.height / otherBoundsCg.height)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        /// Transforms the size of the view to match."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        transform \u003d  transform.concatenating("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            CGAffineTransform(scaleX: 1 / frame.width, y: 1 / frame.height))"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        transform \u003d transform.concatenating("
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            CGAffineTransform(scaleX: ratio * otherFrameCg.width, y: ratio * otherFrameCg.height))"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        /// Changes the position of the view to match."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        transform \u003d transform.concatenating("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            CGAffineTransform(translationX: -frame.origin.x, y: -frame.origin.y))"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        transform \u003d transform.concatenating("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            CGAffineTransform(translationX: ratio * otherFrameCg.origin.x, y: ratio * otherFrameCg.origin.y))"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 40
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/API/GenericItem.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  GenericItem.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 18/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "protocol GenericItem: Codable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    var name: String? { get }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    var itemType: ItemType { get }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    var itemParameter: ItemParameter? { get }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    var weight: Int? { get }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    var quantity: Int { get set }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    func setItemParameter(_ itemParameter: ItemParameter)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    func decayItem(with time: Double) -\u003e Int?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    func combine(with item: GenericItem) -\u003e Bool"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    func remove(amount: Int) -\u003e Int"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    func setQuantity(quantity: Int)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getBuyValue(at port: Port) -\u003e Int?"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "    func sell(at port: Port) -\u003e Int?"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "func \u003d\u003d (lhs: GenericItem, rhs: GenericItem?) -\u003e Bool {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "    return lhs.itemParameter \u003d\u003d rhs?.itemParameter \u0026\u0026 lhs.quantity \u003d\u003d rhs?.quantity"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 29
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/API/GenericLevel.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  GenericLevel.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 17/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "protocol GenericLevel {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    var maxTaxAmount: Int { get }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    var defaultTaxAmount: Int { get }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    var numNPC: Int { get }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var upgrades: [Upgrade] { get }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var playerParameters: [PlayerParameter] { get set }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    var itemParameters: [ItemParameter] { get set }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var eventParameters: [EventParameter] { get set }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var teams: [Team] { get set }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var numOfTurn: Int { get set }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var timeLimit: Int { get set }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var map: Map { get }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(map: Map, teams: [String])"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 17,
      "Yang Shuqi": 7,
      "Jason Chong": 1
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/Enums/EditMode.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  EditableObject.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/18/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "enum EditMode {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    case sea"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    case path"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    case port"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    case pirate"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    case weather"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    case item"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    case erase"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    case startingNode"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    case portOwnership"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func getNodeView(name: String, at center: CGPoint) -\u003e NodeView? {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        switch self {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case .sea:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return NodeView(node: Sea(name: name, originX: Double(center.x),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                      originY: Double(center.y)))"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case .port:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return NodeView(node: Port(team: nil, name: name, originX: Double(center.x),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                       originY: Double(center.y)))"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 31,
      "Jason Chong": 3
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/Enums/ItemType.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  File.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/19/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "enum ItemType: String, Codable, CaseIterable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case teaLeaves \u003d \"Tea Leaves\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case silk \u003d \"Silk\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case perfume \u003d \"Perfume\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case opium \u003d \"Opium\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    case food \u003d \"Food\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 11,
      "henry": 1,
      "Jason Chong": 5
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/Game Parameters/EventParameter.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  EventParameters.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/19/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "struct EventParameter: Codable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "extension EventParameter: Equatable {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    static func \u003d\u003d (lhs: EventParameter, rhs: EventParameter) -\u003e Bool {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 19
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/Game Parameters/GameParameter.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  GameParameter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 17/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class GameParameter: GenericLevel, Codable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    let maxTaxAmount \u003d 2000"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    let defaultTaxAmount \u003d 1000"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    let numNPC \u003d 5"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var upgrades: [Upgrade] \u003d [BiggerShipUpgrade(), FasterShipUpgrade(), BiggerSailsUpgrade(), MercernaryUpgrade()]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var playerParameters \u003d [PlayerParameter]()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    var itemParameters \u003d [ItemParameter]()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var eventParameters \u003d [EventParameter]()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var teams: [Team]"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var numOfTurn \u003d GameConstants.numOfTurn"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var timeLimit \u003d Int(GameConstants.playerTurnDuration)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var map: Map"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    required init(map: Map, teams: [String]) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.map \u003d map"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.teams \u003d teams.map { Team(name: $0) }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.playerParameters \u003d teams.map { PlayerParameter(name: \"\\($0)-player\", teamName: $0, node: nil) }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        ItemType.allCases.forEach {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.itemParameters.append(ItemParameter(itemType: $0,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                     displayName: $0.rawValue,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                     weight: 0,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                     isConsumable: true))"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let values \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        playerParameters \u003d try values.decode([PlayerParameter].self, forKey: .playerParameters)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        itemParameters \u003d try values.decode([ItemParameter].self, forKey: .itemParameters)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        eventParameters \u003d try values.decode([EventParameter].self, forKey: .eventParameters)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        teams \u003d try values.decode([Team].self, forKey: .teams)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        numOfTurn \u003d try values.decode(Int.self, forKey: .numOfTurn)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        timeLimit \u003d try values.decode(Int.self, forKey: .timeLimit)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map \u003d try values.decode(Map.self, forKey: .map)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let upgradeTypes \u003d try values.decode([UpgradeType].self, forKey: .upgrades)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        upgrades \u003d upgradeTypes.map { $0.toUpgrade() }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for node in map.getNodes() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if let index \u003d teams.map({ $0.startId }).firstIndex(of: node.identifier) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                teams[index].startingNode \u003d node"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let port \u003d node as? Port else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            port.assignOwner(teams.first(where: { team in"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                team.name \u003d\u003d port.ownerName"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }))"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(playerParameters, forKey: .playerParameters)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(itemParameters, forKey: .itemParameters)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(eventParameters, forKey: .eventParameters)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(teams, forKey: .teams)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(numOfTurn, forKey: .numOfTurn)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(timeLimit, forKey: .timeLimit)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(map, forKey: .map)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let upgradeTypes \u003d upgrades.map { $0.type }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        try container.encode(upgradeTypes, forKey: .upgrades)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case playerParameters"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case itemParameters"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case eventParameters"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case teams"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case numOfTurn"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case timeLimit"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case map"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case upgrades"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 16,
      "Yang Shuqi": 57,
      "Jason Chong": 12
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/Game Parameters/Item.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Item.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 18/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class Item: GenericItem, Codable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    var name: String? {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "        return itemParameter?.displayName"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    var itemType: ItemType"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    var itemParameter: ItemParameter?"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    var weight: Int? {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let unitWeight \u003d itemParameter?.unitWeight else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "        return quantity * unitWeight"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    // TODO: prevent quantity from going below 0"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "    var quantity: Int {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "            return realQuantity"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "        set(value) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "            guard value \u003e\u003d 0 else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "                // TODO error"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "                realQuantity \u003d 0"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "                return"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "            realQuantity \u003d value"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "            decimalQuantity \u003d Double(realQuantity)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var realQuantity \u003d 0"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var decimalQuantity \u003d 0.0"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "    init(itemParameter: ItemParameter, quantity: Int) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.itemType \u003d itemParameter.itemType"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.itemParameter \u003d itemParameter"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.quantity \u003d quantity"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "        let values \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": "        try itemType \u003d values.decode(ItemType.self, forKey: .itemType)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": "        try itemParameter \u003d values.decode(ItemParameter.self, forKey: .itemParameter)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": "        try quantity \u003d values.decode(Int.self, forKey: .quantity)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "henry"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(itemType, forKey: .itemType)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(itemParameter, forKey: .itemParameter)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(quantity, forKey: .quantity)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "henry"
        },
        "content": "    func setItemParameter(_ itemParameter: ItemParameter) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.itemParameter \u003d itemParameter"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "henry"
        },
        "content": "    func decayItem(with time: Double) -\u003e Int? {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let halfLife \u003d itemParameter?.getHalfLife() else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "henry"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": "        decimalQuantity /\u003d pow(M_E, M_LN2 / Double(halfLife))"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": "        let diff \u003d Int(realQuantity - Int(decimalQuantity))"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard diff \u003e\u003d 1 else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "henry"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "henry"
        },
        "content": "        realQuantity -\u003d diff"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "henry"
        },
        "content": "        return diff"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "henry"
        },
        "content": "    func combine(with item: GenericItem) -\u003e Bool {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard itemParameter \u003d\u003d item.itemParameter else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "henry"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "henry"
        },
        "content": "        quantity +\u003d item.quantity"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "henry"
        },
        "content": "        item.setQuantity(quantity: 0)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "henry"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Remove Item quantity by input amount."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// - Returns:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "henry"
        },
        "content": "    ///   If Item quantity is enough, return 0."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "henry"
        },
        "content": "    ///   If Item quantity is not enough, return deficit as positive integer."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "henry"
        },
        "content": "    func remove(amount: Int) -\u003e Int {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "henry"
        },
        "content": "        if quantity \u003c amount {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "henry"
        },
        "content": "            let deficit \u003d amount - quantity"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "henry"
        },
        "content": "            quantity \u003d 0"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "henry"
        },
        "content": "            return deficit"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "henry"
        },
        "content": "        quantity -\u003d amount"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "henry"
        },
        "content": "        return 0"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "henry"
        },
        "content": "    func setQuantity(quantity: Int) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.quantity \u003d quantity"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getBuyValue(at port: Port) -\u003e Int? {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let itemParameter \u003d itemParameter,"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "henry"
        },
        "content": "            let unitValue \u003d port.getBuyValue(of: itemParameter) else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "henry"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "henry"
        },
        "content": "        return unitValue * quantity"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "henry"
        },
        "content": "    func sell(at port: Port) -\u003e Int? {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let itemParameter \u003d itemParameter,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "henry"
        },
        "content": "            let unitValue \u003d port.getSellValue(of: itemParameter) else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "henry"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "henry"
        },
        "content": "        let value \u003d unitValue * quantity"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "henry"
        },
        "content": "        setQuantity(quantity: 0)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "henry"
        },
        "content": "        return value"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func getRemainingQuantity(port: Port) -\u003e Int {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return quantity"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case itemType"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case quantity"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "henry"
        },
        "content": "        case itemParameter"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 120,
      "Yang Shuqi": 13
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/Game Parameters/ItemParameter.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  ItemParameter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by henry on 17/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "struct ItemParameter: Codable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let defaultPrice \u003d 100"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    let displayName: String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    let unitWeight: Int"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    let itemType: ItemType"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    let isConsumable: Bool"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var sellValue: Int \u003d Default.Item.sellValue"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var buyValue: Int \u003d Default.Item.buyValue"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var halfLife: Int?"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(itemType: ItemType, displayName: String, weight: Int, isConsumable: Bool) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.itemType \u003d itemType"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.displayName \u003d displayName"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.unitWeight \u003d abs(weight)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.isConsumable \u003d isConsumable"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        assert(checkRep())"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "    // Create a quantized representation"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "    func createItem(quantity: Int) -\u003e GenericItem {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "        return Item(itemParameter: self, quantity: quantity)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "    // Global pricing information"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func getBuyValue() -\u003e Int {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return buyValue"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func getSellValue() -\u003e Int {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return sellValue"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func getHalfLife() -\u003e Int? {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return halfLife"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    mutating func setHalfLife(to value: Int) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if value \u003c 0 {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        halfLife \u003d value"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        assert(checkRep())"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    mutating func setBuyValue(value: Int) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if value \u003c 0 {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        buyValue \u003d value"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        assert(checkRep())"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    mutating func setSellValue(value: Int) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if value \u003c 0 {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        sellValue \u003d value"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        assert(checkRep())"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func checkRep() -\u003e Bool {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let unwrappedHalfLife \u003d halfLife else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return sellValue \u003e\u003d 0 \u0026\u0026 buyValue \u003e\u003d 0"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return sellValue \u003e\u003d 0 \u0026\u0026 buyValue \u003e\u003d 0 \u0026\u0026 unwrappedHalfLife \u003e\u003d 0 \u0026\u0026 unitWeight \u003e\u003d 0"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "extension ItemParameter: Hashable {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    static func \u003d\u003d (lhs: ItemParameter, rhs: ItemParameter) -\u003e Bool {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "henry"
        },
        "content": "        return lhs.itemType \u003d\u003d rhs.itemType"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func hash(into hasher: inout Hasher) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        hasher.combine(self.itemType)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 75,
      "henry": 12,
      "Jason Chong": 1
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/Game Parameters/Map.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Map.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/19/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class Map: Codable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    let basePirateRate \u003d 0.03"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var map: String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var bounds: Rect"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    var nodeIDPair: [Int: Node]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private(set) var gameObjects \u003d GameVariable(value: [GameObject]())"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var npcs: [NPC] {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return gameObjects.value"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .compactMap { $0 as? NPC }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var nodes \u003d GameVariable(value: Set\u003cNode\u003e()) // need acces to nodes and paths"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var pathsVariable \u003d GameVariable(value: [Node: [Path]]())"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var paths: [Node: [Path]] {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            pathsVariable.value \u003d newValue"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return pathsVariable.value"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(map: String, bounds: Rect?) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let unwrappedBounds \u003d bounds else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            fatalError(\"Map bounds shouldn\u0027t be nil.\")"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.map \u003d map"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.bounds \u003d unwrappedBounds"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "        nodeIDPair \u003d [Int: Node]()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func changeBackground(_ map: String, with bounds: Rect?) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let unwrappedBounds \u003d bounds else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            fatalError(\"Map bounds shouldn\u0027t be nil.\")"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.map \u003d map"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.bounds \u003d unwrappedBounds"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func addNode(_ node: Node) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        nodes.value.insert(node)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": "        nodeIDPair[node.identifier] \u003d node"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func removeNode(_ node: Node) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        nodes.value.remove(node)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": "        nodeIDPair.removeValue(forKey: node.identifier)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // Remove all paths related with removed node"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let pathsOfNode \u003d paths[node] else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for path in pathsOfNode {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            paths[path.toNode]?.removeAll(where: { $0 \u003d\u003d path })"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            paths[path.fromNode]?.removeAll(where: { $0 \u003d\u003d path })"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        assert(checkRep())"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func add(path: Path) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard nodes.value.contains(path.toNode) \u0026\u0026 nodes.value.contains(path.fromNode)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            \u0026\u0026 path.toNode !\u003d path.fromNode else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            NSLog(\"\\(path) is not added to map due to absense of its nodes\")"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if paths[path.fromNode] \u003d\u003d nil {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            paths[path.fromNode] \u003d []"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if paths[path.toNode] \u003d\u003d nil {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            paths[path.toNode] \u003d []"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        paths[path.fromNode]?.append(path)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        paths[path.toNode]?.append(path)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        assert(checkRep())"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func removePath(_ path: Path) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        pathsVariable.value[path.fromNode]?.removeAll(where: { $0 \u003d\u003d path })"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        pathsVariable.value[path.toNode]?.removeAll(where: { $0 \u003d\u003d path })"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func getNodes() -\u003e Set\u003cNode\u003e {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return nodes.value"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func getPaths(of node: Node) -\u003e [Path] {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return paths[node] ?? [Path]()"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func getAllPaths() -\u003e Set\u003cPath\u003e {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var pathSet \u003d Set\u003cPath\u003e()"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for path in paths {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            path.value.forEach { pathSet.insert($0) }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return pathSet"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func findNode(at point: CGPoint) -\u003e Node? {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for node in nodes.value where CGFloat(node.frame.originX) \u003d\u003d point.x \u0026\u0026"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            CGFloat(node.frame.originY) \u003d\u003d point.y {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return node"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return nil"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func addGameObject(gameObject: GameObject) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        gameObjects.value.append(gameObject)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToNodes(with callback: @escaping (Set\u003cNode\u003e) -\u003e Void) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        nodes.subscribe(with: callback)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToPaths(with callback: @escaping ([Node: [Path]]) -\u003e Void) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        pathsVariable.subscribe(with: callback)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToObjects(with callback: @escaping (([GameObject]) -\u003e Void)) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        gameObjects.subscribe(with: callback)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getPiratesIslands() -\u003e [(Node, PirateIsland)] {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return getNodes().map { node in"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            node.objects"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                .compactMap { $0 as? PirateIsland }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                .map { (node, $0) }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }.flatMap { $0 }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func removeAllNpcs() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        gameObjects.value \u003d gameObjects"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .value"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .filter { $0 as? NPC \u003d\u003d nil }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let container \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        Node.nextID \u003d try container.decode(Int.self, forKey: .nodeNextId)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        Node.reuseID \u003d try container.decode([Int].self, forKey: .nodeReuseId)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        print(Node.nextID)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.map \u003d try container.decode(String.self, forKey: .map)"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.bounds \u003d try container.decode(Rect.self, forKey: .bounds)"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var nodesArrayForType \u003d try container.nestedUnkeyedContainer(forKey: CodingKeys.nodes)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var nodes \u003d Set\u003cNode\u003e()"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "henry"
        },
        "content": "        nodeIDPair \u003d [Int: Node]()"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        while !nodesArrayForType.isAtEnd {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let node \u003d try nodesArrayForType.nestedContainer(keyedBy: NodeTypeKey.self)"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let type \u003d try node.decode(NodeTypes.self, forKey: NodeTypeKey.type)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            switch type {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            case .port:"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let node \u003d try node.decode(Port.self, forKey: NodeTypeKey.node)"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                nodes.insert(node)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                nodeIDPair[node.identifier] \u003d node"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            case .sea:"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let node \u003d try node.decode(Sea.self, forKey: NodeTypeKey.node)"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                nodes.insert(node)"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                nodeIDPair[node.identifier] \u003d node"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.nodes.value \u003d nodes"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let pathDictionary \u003d try container.decode([Int: [Int: [Volatile]]].self, forKey: .paths)"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for pair in pathDictionary {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let fromNode \u003d nodeIDPair[pair.key] else {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            for subPair in pair.value {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                guard let toNode \u003d nodeIDPair[subPair.key] else {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    continue"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                // add path to from node neighbour"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                if paths[fromNode] \u003d\u003d nil {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    paths[fromNode] \u003d []"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let path \u003d Path(from: fromNode, to: toNode)"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                path.modifiers \u003d subPair.value"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                paths[fromNode]?.append(path)"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                // add path to to node neighbour"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                if paths[toNode] \u003d\u003d nil {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    paths[toNode] \u003d []"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                paths[toNode]?.append(path)"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.pathsVariable.value \u003d paths"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var objectsWithType \u003d try container.nestedUnkeyedContainer(forKey: CodingKeys.objects)"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        while !objectsWithType.isAtEnd {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let object \u003d try objectsWithType.nestedContainer(keyedBy: ObjectTypeKey.self)"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let type \u003d try object.decode(ObjectType.self, forKey: .type)"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            switch type {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            case .npc:"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let object \u003d try object.decode(NPC.self, forKey: .object)"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                addGameObject(gameObject: object)"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            case .ship:"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let object \u003d try object.decode(ShipUI.self, forKey: .object)"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                addGameObject(gameObject: object)"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            case .pirate:"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let object \u003d try object.decode(PirateIsland.self, forKey: .object)"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                addGameObject(gameObject: object)"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(map, forKey: .map)"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(Node.nextID, forKey: .nodeNextId)"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(Node.reuseID, forKey: .nodeReuseId)"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var nodesWithType \u003d [NodeWithType]()"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for node in nodes.value {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if node is Port {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                nodesWithType.append(NodeWithType(node: node, type: NodeTypes.port))"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if node is Sea {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                nodesWithType.append(NodeWithType(node: node, type: NodeTypes.sea))"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(nodesWithType, forKey: .nodes)"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var simplifiedPaths \u003d [Int: [Int: [Volatile]]]()"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for pair in getAllPaths() {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let fromID \u003d pair.fromNode.identifier"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let toID \u003d pair.toNode.identifier"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if simplifiedPaths[fromID] \u003d\u003d nil {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                simplifiedPaths[fromID] \u003d [:]"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            simplifiedPaths[fromID]?[toID] \u003d []"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            pair.modifiers.forEach { simplifiedPaths[fromID]?[toID]?.append($0)}"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(simplifiedPaths, forKey: .paths)"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(bounds, forKey: .bounds)"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(nodesWithType, forKey: .nodes)"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var objectsWithType \u003d [ObjectWithType]()"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for object in gameObjects.value {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if object is ShipUI {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                objectsWithType.append(ObjectWithType(object: object, type: ObjectType.ship))"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            } else if object is PirateIsland {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                objectsWithType.append(ObjectWithType(object: object, type: ObjectType.pirate))"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            } else if object is NPC {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                objectsWithType.append(ObjectWithType(object: object, type: ObjectType.npc))"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        try container.encode(objectsWithType, forKey: .objects)"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case map"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case nodes"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case paths"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case bounds"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "henry"
        },
        "content": "        case entities"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case nodeNextId"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case nodeReuseId"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "henry"
        },
        "content": "        case npcs"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case objects"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    enum NodeTypeKey: String, CodingKey {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case type"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case node"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    enum NodeTypes: String, Codable {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case port"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case sea"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    enum ObjectTypeKey: String, CodingKey {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "henry"
        },
        "content": "        case type"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case object"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    enum ObjectType: String, Codable {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "henry"
        },
        "content": "        case npc"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case pirate"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case ship"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    struct NodeWithType: Codable, Hashable {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var node: Node"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var type: NodeTypes"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        init(node: Node, type: NodeTypes) {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.node \u003d node"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.type \u003d type"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    struct ObjectWithType: Codable {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let object: GameObject"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let type: ObjectType"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func checkRep() -\u003e Bool {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for path in getAllPaths() {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard nodes.value.contains(path.toNode) \u0026\u0026 nodes.value.contains(path.fromNode) else {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return false"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard path.toNode !\u003d path.fromNode else {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return false"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for node in nodes.value {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard nodeIDPair[node.identifier] !\u003d nil else {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return false"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for node in nodeIDPair.values {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard nodes.value.contains(node) else {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return false"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 241,
      "henry": 16,
      "Jason Chong": 86,
      "yuhongherald": 1
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/Game Parameters/PlayerParameter.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  PlayerParameter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/19/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class PlayerParameter: Codable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var name: String"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var teamName: String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var money \u003d GameVariable(value: 0)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private(set) var startingId: Int?"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var startingNode: Node? {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.startingId \u003d startingNode?.identifier"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(name: String, teamName: String, node: Node?) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.name \u003d name"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.teamName \u003d teamName"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.startingNode \u003d node"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let values \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        name \u003d try values.decode(String.self, forKey: .name)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        teamName \u003d try values.decode(String.self, forKey: .teamName)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let moneyValue \u003d try values.decode(Int.self, forKey: .money)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        startingNode \u003d try values.decode(Node?.self, forKey: .nodeId)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        money \u003d GameVariable(value: moneyValue)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func getName() -\u003e String {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return name"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func getTeam() -\u003e Team {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return Team(name: teamName)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func getMoney() -\u003e Int {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return money.value"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getStartingNode() -\u003e Node? {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": "        return startingNode"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func set(name: String, money: Int?) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if name !\u003d \"\" {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.name \u003d name"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if let unwrappedMoney \u003d money {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.money \u003d GameVariable(value: unwrappedMoney)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(name, forKey: .name)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(teamName, forKey: .teamName)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(money.value, forKey: .money)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(startingId, forKey: .nodeId)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": "    enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case name"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case teamName"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case money"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case nodeId"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 72,
      "henry": 5
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/Storage/LocalStorage.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Storage.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/21/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class LocalStorage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Check the validation of level name."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - name: the proposed level name."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func verify(name: String) throws {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard name !\u003d \"\" else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            throw StorageError.invalidName(message: \"Empty level name.\")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard name.count \u003c 255 else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            throw StorageError.invalidName(message: \"Level name is too long.\")"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard !name.contains(\"/\") else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            throw StorageError.invalidName(message: \"Level name contains invalid symbol.\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Attempt to encode level data into json file. A complete level data set should contains data, background image and preview image."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// On failure, all the related level data should be deleted."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - data: encodable data to be save into a JSON file"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - background: the background image to be saved"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - screenShot: the preview of level"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - name: proposed level name"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func save\u003cT: Encodable\u003e(_ data: T, _ background: UIImage, preview screenShot: UIImage, with name: String, replace: Bool \u003d false) throws -\u003e Bool {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try verify(name: name)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        print(\"\\(replace), \\(isLevelExist(name))\")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard replace || !isLevelExist(name) else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            throw StorageError.fileExisted(message: \"Level already exists.\")"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let backgroundName \u003d name + Default.Suffix.background"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let fileURL \u003d getFullURL(from: name, \".pList\")"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let backgroundURL \u003d getFullURL(from: backgroundName, \".png\")"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let previewURL \u003d getFullURL(from: name, \".png\")"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // Store level data"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let jsonEncoder \u003d JSONEncoder()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        jsonEncoder.outputFormatting \u003d .prettyPrinted"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let jsonData \u003d try? jsonEncoder.encode(data),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "              (try? background.pngData()?.write(to: backgroundURL)) !\u003d nil,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            (try? screenShot.pngData()?.write(to: previewURL)) !\u003d nil else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            deleteLevel(name)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            NSLog(\"Couldn\u0027t encode data to JSON format.\")"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let savedJson \u003d NSMutableData(data: jsonData)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        savedJson.write(to: fileURL, atomically: true)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Attempt to decode level data."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// On failure return nil and delete all related data. Log the failure information."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - fileName: name of the level to be decoded"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func readLevelData\u003cT: Codable\u003e(_ fileName: String) -\u003e T? {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let url \u003d getFullURL(from: fileName, \".pList\")"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let data \u003d try? Data(contentsOf: url) else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            deleteLevel(fileName)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            NSLog(\"Reading level \\(fileName) not exist.\")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let levelData \u003d try? JSONDecoder().decode(T.self, from: data) else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            deleteLevel(fileName)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            NSLog(\"Decoding level failed. \")"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return levelData"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Attempt to decode and init UIImage from image data."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// On failure return nil and delete all related data. Log the failure information."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - fileName: name of the image to be decoded"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Returns:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   UIImage constructed from the decoded data."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func readImage(_ fileName: String) -\u003e UIImage? {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let imageData \u003d readImageData(fileName) else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            deleteLevel(fileName)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            NSLog(\"Reading image \\(fileName) not exist.\")"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let image \u003d UIImage(data: imageData) else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            deleteLevel(fileName)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            NSLog(\"Initializing image from data failed. \")"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return image"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Attempt to decode image data."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// On failure return nil and delete all related data. Log the failure information."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - fileName: name of the image to be decoded"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func readImageData(_ fileName: String) -\u003e Data? {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let url \u003d getFullURL(from: fileName, \".png\")"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let imageData \u003d try? Data(contentsOf: url) else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            deleteLevel(fileName)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return imageData"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Delete all files related to a level, including JSON file, background image and preview image."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func deleteLevel(_ name: String) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let backgroundName \u003d name + Default.Suffix.background"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let fileURL \u003d getFullURL(from: name, \".pList\")"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let backgroundURL \u003d getFullURL(from: backgroundName, \".png\")"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let previewURL \u003d getFullURL(from: name, \".png\")"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try? FileManager.default.removeItem(at: fileURL)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try? FileManager.default.removeItem(at: backgroundURL)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try? FileManager.default.removeItem(at: previewURL)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Return all level names in the document directory without any extension."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func getAllRecords() -\u003e [String] {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let urls \u003d FileManager.default.urls(for: .documentDirectory, in: .userDomainMask)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // Get the URL for a file in the Documents Directory"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let documentDirectory \u003d urls.first else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return [String]()"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let fileURLs \u003d try? FileManager.default.contentsOfDirectory("
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            at: documentDirectory, includingPropertiesForKeys: [], options: .skipsHiddenFiles) else {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return [String]()"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return fileURLs.filter { $0.pathExtension \u003d\u003d \"pList\" }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            .compactMap { $0.lastPathComponent }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            .map { $0.replacingOccurrences(of: \".pList\", with: \"\") }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            .filter { self.isLevelExist($0) }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func getFullURL(from fileName: String, _ extensionStr: String) -\u003e URL {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let urls \u003d FileManager.default.urls(for: .documentDirectory, in: .userDomainMask)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // Get the URL for a file in the Documents Directory"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let documentDirectory \u003d urls.first else {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            NSLog(\"DocumentDirectory is empty\")"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return URL(fileReferenceLiteralResourceName: \"\")"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let url \u003d documentDirectory.appendingPathComponent(fileName + extensionStr)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return url"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func isLevelExist(_ name: String) -\u003e Bool {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let fileURL \u003d getFullURL(from: name, \".pList\")"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let backgroundURL \u003d getFullURL(from: name + Default.Suffix.background, \".png\")"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let previewURL \u003d getFullURL(from: name, \".png\")"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let fileManager \u003d FileManager.default"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return fileManager.fileExists(atPath: fileURL.path)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            \u0026\u0026 fileManager.fileExists(atPath: backgroundURL.path)"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            \u0026\u0026 fileManager.fileExists(atPath: previewURL.path)"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "enum StorageError: Error {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    case invalidName(message: String)"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    case fileExisted(message: String)"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func getMessage() -\u003e String {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        switch self {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case .invalidName(message: let message):"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return message"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case .fileExisted(message: let message):"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return message"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 176,
      "Jason Chong": 13
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/View/DetailEditTableViewController + Delegate.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  File.swift"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/26/19."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "extension DetailEditTableViewController: UITableViewDelegate, UITableViewDataSource {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func numberOfSections(in tableView: UITableView) -\u003e Int {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return data.count"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -\u003e Int {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return data[section].count"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let item \u003d data[indexPath.section][indexPath.item]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        switch item.type {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case .player:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let cell \u003d tableView.dequeueReusableCell(withIdentifier: \"playerIdentifier\") as? PlayerTableViewCell else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                fatalError(\"The dequeued cell is not an instance of PlayerTableViewCell.\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            cell.item \u003d item"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return cell"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case .turn:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let cell \u003d tableView.dequeueReusableCell(withIdentifier: \"turnIdentifier\") as? TurnTableViewCell else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                fatalError(\"The dequeued cell is not an instance of TurnTableViewCell.\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            cell.item \u003d item"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return cell"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            fatalError(\"Section exceed bounds.\")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func tableView(_ tableView: UITableView, titleForHeaderInSection section: Int) -\u003e String? {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return data[section][0].sectionTitle"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "extension DetailEditTableViewController: UITextFieldDelegate {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func textField(_ textField: UITextField, shouldChangeCharactersIn range: NSRange,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                   replacementString string: String) -\u003e Bool {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        switch textField.tag {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case FieldType.number.rawValue:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let invalidCharacters \u003d CharacterSet(charactersIn: \"0123456789\").inverted"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return string.rangeOfCharacter(from: invalidCharacters) \u003d\u003d nil"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return true"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 57
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/View/DetailEditTableViewController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  DetailEditTable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/19/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class DetailEditTableViewController: UIViewController {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var tableView: UITableView!"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var data \u003d [[GameParameterItem]]()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var numOfTurnMsg \u003d \"Number of Turn: \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var timeLimitMsg \u003d \"Time Limit Per Turn (sec): \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override var prefersStatusBarHidden: Bool {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.navigationController?.isToolbarHidden \u003d false"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func cancelPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.dismiss(animated: true, completion: nil)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func confirmPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for cell in tableView.visibleCells {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let indexPath \u003d tableView.indexPath(for: cell) else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            switch data[indexPath.section][indexPath.item].type {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            case .player:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                guard let castedCell \u003d cell as? PlayerTableViewCell,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    let item \u003d castedCell.item as? PlayerParameterItem else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    continue"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                if let name \u003d castedCell.nameField.text,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    let moneyText \u003d castedCell.moneyField.text {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    item.playerParameter.set(name: name, money: Int(moneyText))"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            case .turn:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                guard let castedCell \u003d cell as? TurnTableViewCell,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    let item \u003d castedCell.item as? TurnParameterItem else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    continue"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                guard let inputText \u003d castedCell.textField.text else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    continue"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                guard let input \u003d Int(inputText) else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    continue"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                switch castedCell.label.text {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                case numOfTurnMsg:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    item.game.numOfTurn \u003d input"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                case timeLimitMsg:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    item.game.timeLimit \u003d input"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    continue"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.dismiss(animated: true, completion: nil)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func initWith(game: GameParameter) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.data.append(game.playerParameters.map {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            PlayerParameterItem(playerParameter: $0)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        })"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.data.append([TurnParameterItem(label: numOfTurnMsg, game: game, input: game.numOfTurn),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                          TurnParameterItem(label: timeLimitMsg, game: game, input: game.timeLimit)])"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 79,
      "henry": 1
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/View/EditPanelViewController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  EdiePanelViewController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/18/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "protocol EditPanelDelegateProtocol: class {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var gameParameter: GameParameter { get }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func clicked(_ select: EditMode)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func addMapBackground(_ image: UIImage)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class EditPanelViewController: UIViewController, UIImagePickerControllerDelegate, UINavigationControllerDelegate {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    weak var delegate: EditPanelDelegateProtocol?"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override var prefersStatusBarHidden: Bool {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        super.viewDidLoad()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // Do any additional setup after loading the view."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func addMapPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let imagePicker \u003d UIImagePickerController()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        imagePicker.delegate \u003d self"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        imagePicker.sourceType \u003d .photoLibrary"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        imagePicker.allowsEditing \u003d false"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.present(imagePicker, animated:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            true)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func addPiratePressed(_ sender: Any) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        delegate?.clicked(.pirate)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func addWeatherPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        delegate?.clicked(.weather)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func addPortPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        delegate?.clicked(.port)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func addSeaPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        delegate?.clicked(.sea)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func addPathPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        delegate?.clicked(.path)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func editParamPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let storyboard \u003d UIStoryboard(name: \"Main\", bundle: nil)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let controller \u003d storyboard.instantiateViewController(withIdentifier: \"playerTable\")"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            as? DetailEditTableViewController else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                fatalError(\"Controller is not found or cannot be casted into DetailEditTableViewController.\")"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let unwrappedGame \u003d self.delegate?.gameParameter else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            fatalError(\"EditPanelDelegateProtocol not set.\")"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        controller.initWith(game: unwrappedGame)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.show(controller, sender: nil)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func editItemPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.delegate?.clicked(.item)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func editEventsPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // TODO: set events condition"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func removePressed(_ sender: Any) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        delegate?.clicked(.erase)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func imagePickerController(_ picker: UIImagePickerController,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                               didFinishPickingMediaWithInfo info: [UIImagePickerController.InfoKey: Any]) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if let image \u003d info[.originalImage] as? UIImage {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            delegate?.addMapBackground(image)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.dismiss(animated: true, completion: nil)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 94,
      "Jason Chong": 1
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/View/GalleryCollectionViewCell.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  GallaryCollectionViewCell.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/22/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class GalleryCollectionViewCell: UICollectionViewCell {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var label: UILabel!"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var previewImage: UIImageView!"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 14
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/View/GalleryViewController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  GallaryViewController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/22/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "protocol GalleryViewDelegateProtocol: class {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func load(_ gameParameter: GameParameter)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class GalleryViewController: UIViewController {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var storage \u003d LocalStorage()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var levelNames: [String] \u003d []"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    weak var delegate: GalleryViewDelegateProtocol?"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var selectedCallback: ((GameParameter) -\u003e Void)?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var collectionView: UICollectionView!"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override var prefersStatusBarHidden: Bool {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        super.viewDidLoad()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        levelNames \u003d storage.getAllRecords()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // Do any additional setup after loading the view."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func cancelPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.dismiss(animated: true, completion: {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.collectionView.removeFromSuperview()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        })"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "extension GalleryViewController: UICollectionViewDelegate, UICollectionViewDataSource {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -\u003e Int {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return levelNames.count"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func collectionView(_ collectionView: UICollectionView,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                        cellForItemAt indexPath: IndexPath) -\u003e UICollectionViewCell {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let cell \u003d collectionView.dequeueReusableCell(withReuseIdentifier: \"record\", for: indexPath)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            as? GalleryCollectionViewCell else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                fatalError(\"Cell cannot be casted into GallaryCollectionViewCell\")"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let levelName \u003d levelNames[indexPath.item]"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        cell.label.text \u003d levelName"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        DispatchQueue.global(qos: .userInteractive).async { [weak self] in"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let image \u003d self?.storage.readImage(levelName)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            DispatchQueue.main.async {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                cell.previewImage.image \u003d image"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return cell"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let levelName \u003d levelNames[indexPath.item]"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let gameParameter: GameParameter \u003d storage.readLevelData(levelName) else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let alert \u003d UIAlert(errorMsg: \"Level broken. Level data is deleted.\", msg: nil)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            alert.present(in: self)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            levelNames \u003d storage.getAllRecords()"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.collectionView.reloadData()"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.dismiss(animated: true, completion: {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.collectionView.removeFromSuperview()"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        })"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        selectedCallback?(gameParameter)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 70,
      "Jason Chong": 7
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/View/ItemCollectionViewCell.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  ItemCollectionViewCell.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/21/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class ItemCollectionViewCell: UICollectionViewCell {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var label: UILabel!"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var consumableToggle: UISwitch!"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var lifeField: UITextField!"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var sellField: UITextField!"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var buyField: UITextField!"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func switchClicked(_ sender: Any) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if consumableToggle.isOn {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            lifeField.isEnabled \u003d true"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            lifeField.isEnabled \u003d false"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 24
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/View/ItemCollectionViewController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  ItemTableViewCell.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/19/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class ItemCollectionViewController: UIViewController, UICollectionViewDataSource,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "UICollectionViewDelegate, UITextFieldDelegate {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var addButton: UIButton!"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var collectionView: UICollectionView!"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var itemTypes: [ItemType] \u003d []"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var selectedPort: Port?"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override var prefersStatusBarHidden: Bool {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        collectionView.translatesAutoresizingMaskIntoConstraints \u003d false"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        collectionView.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 100).isActive \u003d true"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        collectionView.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: -100).isActive \u003d true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        collectionView.topAnchor.constraint(equalTo: view.topAnchor, constant: 50).isActive \u003d true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func addPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let alert \u003d UIAlert(title: \"Input item display name:\", msg: nil, confirm: { name in"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            // TODO: add item type, add item parameter"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }, textPlaceHolder: \"Input item name here\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        alert.present(in: self)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func confirmPressed(_ sender: Any?) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let port \u003d selectedPort else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for cell in collectionView.visibleCells {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let indexPath \u003d collectionView.indexPath(for: cell),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let castedCell \u003d cell as? ItemCollectionViewCell else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let itemType \u003d itemTypes[indexPath.item]"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "           /* if itemParam.isConsumable, let lifeText \u003d castedCell.lifeField.text, let life \u003d Int(lifeText) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                itemParam.setHalfLife(to: life)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if let buyPriceText \u003d castedCell.buyField.text, let buyPrice \u003d Int(buyPriceText) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                port.setBuyValue(of: itemType, value: buyPrice)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if let sellPriceText \u003d castedCell.sellField.text, let sellPrice \u003d Int(sellPriceText) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                port.setSellValue(of: itemType, value: sellPrice)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        view.removeFromSuperview()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.removeFromParent()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.dismiss(animated: true, completion: nil)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func cancelPressed(_ sender: Any?) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        view.removeFromSuperview()"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.removeFromParent()"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.dismiss(animated: true, completion: nil)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func initWith(port: Port) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.selectedPort \u003d port"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.itemTypes \u003d port.getAllItemType()"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        collectionView.reloadData()"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -\u003e Int {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return itemTypes.count"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func collectionView(_ collectionView: UICollectionView,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                        cellForItemAt indexPath: IndexPath) -\u003e UICollectionViewCell {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let cell \u003d collectionView"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            .dequeueReusableCell(withReuseIdentifier: \"itemInfoCell\", for: indexPath) as? ItemCollectionViewCell else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                fatalError(\"Cell cannot be casted into ItemCollectionViewCell\")"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let itemType \u003d itemTypes[indexPath.item]"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        cell.label.text \u003d itemType.rawValue"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let port \u003d selectedPort else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return cell"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if let sellPrice \u003d port.getSellValue(of: itemType) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            cell.sellField.text \u003d String(sellPrice)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if let buyPrice \u003d port.getBuyValue(of: itemType) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            cell.buyField.text \u003d String(buyPrice)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        /// TODO: Refactor and move this"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        /*if itemParam.isConsumable, let life \u003d itemParam.getHalfLife() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            cell.lifeField.isEnabled \u003d true"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            cell.lifeField.text \u003d String(life)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if !itemParam.isConsumable {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            cell.lifeField.isEnabled \u003d false"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }*/"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return cell"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func collectionView(_ collectionView: UICollectionView,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                        viewForSupplementaryElementOfKind kind: String,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                        at indexPath: IndexPath) -\u003e UICollectionReusableView {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        switch kind {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case UICollectionView.elementKindSectionHeader:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return collectionView.dequeueReusableSupplementaryView("
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    ofKind: kind, withReuseIdentifier: \"itemCollectionHeaderView\","
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    for: indexPath)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            assert(false, \"Invalid element type\")"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func textField(_ textField: UITextField, shouldChangeCharactersIn range: NSRange,"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                   replacementString string: String) -\u003e Bool {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let invalidCharacters \u003d CharacterSet(charactersIn: \"0123456789\").inverted"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return string.rangeOfCharacter(from: invalidCharacters) \u003d\u003d nil"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 118,
      "Jason Chong": 15
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/View/LevelEditorViewController + Delegate.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Level.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/19/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "extension LevelEditorViewController: EditPanelDelegateProtocol {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func clicked(_ select: EditMode) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        editPanel.isHidden \u003d true"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        panelToggle.setTitle(showPanelMsg, for: .normal)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        view.sendSubviewToBack(editPanel)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        editMode \u003d select"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func addMapBackground(_ image: UIImage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        mapBackground.image \u003d image"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "extension LevelEditorViewController: GalleryViewDelegateProtocol {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func load(_ gameParameter: GameParameter) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.gameParameter \u003d gameParameter"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        reInit()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "extension LevelEditorViewController: UIScrollViewDelegate {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func viewForZooming(in scrollView: UIScrollView) -\u003e UIView? {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return editingAreaWrapper"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func scrollViewWillBeginZooming(_ scrollView: UIScrollView, with view: UIView?) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        UIView.transition(with: teamMenu, duration: 0.5, options: .transitionCrossDissolve, animations: {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.teamMenu.alpha \u003d 0"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }, completion: { _ in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.teamMenu.isHidden \u003d true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.teamMenu.alpha \u003d 1"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        })"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "extension LevelEditorViewController: MenuViewDelegateProtocol {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func assign(port: Port, to team: Team?) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        teamMenu.isHidden \u003d true"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        port.assignOwner(team)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func start(from node: Node, for team: Team) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        teamMenu.isHidden \u003d true"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let preStartingNode \u003d team.startingNode"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        team.startingNode \u003d node"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.editingAreaWrapper.subviews.forEach { view in"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let nodeView \u003d view as? NodeView else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if nodeView.node \u003d\u003d preStartingNode {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                nodeView.removeIcon()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if team.startingNode \u003d\u003d nodeView.node, let shipIcon \u003d getIconOf(team: team) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                nodeView.addIcon(shipIcon)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func getEditingMode(for gesture: UIGestureRecognizer) -\u003e EditMode? {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        switch gesture {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case is UITapGestureRecognizer:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return .portOwnership"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case is UILongPressGestureRecognizer:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return .startingNode"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func getIconOf(team: Team) -\u003e UIImageView? {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let view \u003d UIImageView(frame: CGRect(x: 0, y: 0, width: 50, height: 50))"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        switch team.name {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case \"Dutch\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            view.image \u003d UIImage(named: Resources.Flag.dutch)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case \"British\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            view.image \u003d UIImage(named: Resources.Flag.british)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return view"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 93
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/View/LevelEditorViewController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  LevelEditorViewController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/17/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class LevelEditorViewController: UIViewController {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var scrollView: UIScrollView! {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            scrollView.delegate \u003d self"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            scrollView.maximumZoomScale \u003d 3"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var editPanel: UIView!"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var teamMenu: UIView!"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var editingAreaWrapper: UIView!"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var mapBackground: UIImageView!"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var panelToggle: UIButton!"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var panelDest: EditPanelViewController?"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var menuDest: MenuViewController?"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var showPanelMsg \u003d \"Show Panel\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var hidePanelMsg \u003d \"Hide Panel\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var gameParameter: GameParameter \u003d {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let imageName \u003d Default.Background.image"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var bounds: Rect?"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if let image \u003d UIImage(named: imageName) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            bounds \u003d Rect(originX: 0, originY: 0, height: Double(image.size.height), width: Double(image.size.width))"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let map \u003d Map(map: imageName, bounds: bounds)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return GameParameter(map: map, teams: [\"Dutch\", \"British\"])"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var editMode: EditMode?"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var lineLayerArr \u003d [PathView]()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var lineLayer \u003d PathView()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var startingNode: NodeView?"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var destination: NodeView?"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let storage \u003d LocalStorage()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        switch segue.identifier {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case \"toEditPanel\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let panelDest \u003d segue.destination as? EditPanelViewController else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            panelDest.delegate \u003d self"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.panelDest \u003d panelDest"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case \"toPlayerMenu\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let menuDest \u003d segue.destination as? MenuViewController else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            menuDest.delegate \u003d self"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            menuDest.data \u003d gameParameter.teams"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.menuDest \u003d menuDest"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case \"toGallary\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let gallaryDest \u003d segue.destination as? GalleryViewController else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            gallaryDest.selectedCallback \u003d { loadedParameter in"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self.load(loadedParameter)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            gallaryDest.delegate \u003d self"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func reInit() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        reInitScrollView()"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        initBackground()"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        menuDest?.data \u003d gameParameter.teams"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        teamMenu.isUserInteractionEnabled \u003d true"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "henry"
        },
        "content": "        let map \u003d gameParameter.map"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let teams \u003d gameParameter.teams"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let teamStartIds \u003d teams.map { $0.startId }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // remove All nodes / paths"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.editingAreaWrapper.subviews.filter { $0 is NodeView }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            .forEach { $0.removeFromSuperview() }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.editingAreaWrapper.layer.sublayers?.filter { $0 is PathView }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            .forEach { $0.removeFromSuperlayer() }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // Add nodes to map"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.getNodes().forEach { node in"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let nodeView \u003d NodeView(node: node)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            nodeView.addTo(self.editingAreaWrapper, map: self.gameParameter.map, with: initNodeGestures())"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if let teamIndex \u003d teamStartIds.firstIndex(of: node.identifier) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let team \u003d teams[teamIndex]"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                team.startingNode \u003d node"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                if let icon \u003d getIconOf(team: teams[teamIndex]) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    nodeView.addIcon(icon)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // Add paths to map"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for path in map.getAllPaths() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            lineLayer \u003d PathView(path: path)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            editingAreaWrapper.layer.addSublayer(lineLayer)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            lineLayerArr.append(lineLayer)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        super.viewDidLoad()"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        reInitScrollView()"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        initBackground()"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        teamMenu.frame.size \u003d CGSize(width: 200, height: 100)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        teamMenu.isHidden \u003d true"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let tapGesture \u003d UITapGestureRecognizer(target: self, action: #selector(tapOnMap(_:)))"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        editingAreaWrapper.addGestureRecognizer(tapGesture)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func backPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        dismiss(animated: true, completion: nil)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func editPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if editPanel.isHidden {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            editPanel.isHidden \u003d false"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            panelToggle.setTitle(hidePanelMsg, for: .normal)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            view.bringSubviewToFront(editPanel)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            editPanel.isHidden \u003d true"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            panelToggle.setTitle(showPanelMsg, for: .normal)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            view.sendSubviewToBack(editPanel)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func savePressed(_ sender: Any) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let alert \u003d UIAlert(title: \"Save Level with Name: \", confirm: { name in"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.store(with: name)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }, textPlaceHolder: \"Input level name here\")"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        alert.present(in: self)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @objc func tapOnMap(_ sender: UITapGestureRecognizer) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard editMode !\u003d nil else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if !editPanel.isHidden {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let location \u003d sender.location(in: self.mapBackground)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if editMode \u003d\u003d .erase {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            var removed \u003d 0"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            for (index, path) in self.lineLayerArr.enumerated() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                if self.isPoint(point: location, withinDistance: 20, ofPath: path.path) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    self.lineLayerArr.remove(at: index - removed)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    removed +\u003d 1"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    path.removeFromSuperlayer()"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    guard let path \u003d path.shipPath else {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                        return"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    self.gameParameter.map.removePath(path)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if editMode \u003d\u003d .weather {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.lineLayerArr.forEach { path in"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                if self.isPoint(point: location, withinDistance: 20, ofPath: path.path) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    path.add(Weather())"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if editMode \u003d\u003d .sea || editMode \u003d\u003d .port {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let alert \u003d UIAlert(title: \"Input name: \", confirm: { ownerName in"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                guard let nodeView \u003d self.editMode?.getNodeView(name: ownerName, at: location) else {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "henry"
        },
        "content": "                nodeView.addTo(self.editingAreaWrapper, map: self.gameParameter.map, with: self.initNodeGestures())"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }, textPlaceHolder: \"Input name here.\")"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            alert.present(in: self)"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    final func isPoint(point: CGPoint, withinDistance distance: CGFloat, ofPath path: CGPath?) -\u003e Bool {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let castedPath \u003d path else {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if let hitPath \u003d CGPath( __byStroking: castedPath,"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                 transform: nil,"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                 lineWidth: distance,"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                 lineCap: CGLineCap.round,"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                 lineJoin: CGLineJoin.miter,"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                 miterLimit: 0) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let isWithinDistance \u003d hitPath.contains(point)"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return isWithinDistance"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return false"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @objc func singleTapOnNode(_ sender: UITapGestureRecognizer) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let mode \u003d editMode else {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        switch mode {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case .erase:"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let nodeView \u003d sender.view as? NodeView else {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "henry"
        },
        "content": "            nodeView.removeFrom(map: self.gameParameter.map)"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            nodeView.node.remove()"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            var offset \u003d 0"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            for (index, lineLayer) in lineLayerArr.enumerated() {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                if lineLayer.shipPath?.fromNode \u003d\u003d nodeView.node"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    || lineLayer.shipPath?.toNode \u003d\u003d nodeView.node {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    lineLayerArr.remove(at: index - offset)"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    lineLayer.removeFromSuperlayer()"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    offset+\u003d1"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case .item:"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let storyboard \u003d UIStoryboard(name: \"Main\", bundle: nil)"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let controller \u003d storyboard.instantiateViewController(withIdentifier: \"itemEditTable\")"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                as? ItemCollectionViewController else {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                fatalError(\"Controller itemEditTable cannot be casted into ItemCollectionViewController\")"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let portView \u003d sender.view as? NodeView,"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let port \u003d portView.node as? Port else {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let alert \u003d UIAlert(errorMsg: \"Please select a port!\", msg: nil)"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                alert.present(in: self)"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            _ \u003d controller.view"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            controller.initWith(port: port)"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.addChild(controller)"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            view.addSubview(controller.view)"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            controller.didMove(toParent: self)"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case .pirate:"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let nodeView \u003d sender.view as? NodeView else {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let alert \u003d UIAlert(errorMsg: \"Please select a node!\", msg: nil)"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                alert.present(in: self)"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if nodeView.node is Port {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let alert \u003d UIAlert(errorMsg: \"You cannot add pirate to a port!\", msg: nil)"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                alert.present(in: self)"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            nodeView.node.add(object: PirateIsland(in: nodeView.node))"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            nodeView.update()"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @objc func doubleTapOnNode(_ sender: UITapGestureRecognizer) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let node \u003d sender.view as? NodeView, let port \u003d node.node as? Port else {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let alert \u003d UIAlert(errorMsg: \"Double click on port to assign ownership.\", msg: nil)"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            alert.present(in: self)"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if teamMenu.isHidden {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            UIView.animate(withDuration: 0, animations: {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let point \u003d node.convert(CGPoint(x: node.bounds.maxX, y: node.bounds.maxY), to: self.view)"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self.teamMenu.frame.origin \u003d point"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            })"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            teamMenu.isHidden \u003d false"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            teamMenu.isHidden \u003d true"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        menuDest?.set(node: port, for: sender)"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @objc func longPressOnNode(_ sender: UILongPressGestureRecognizer) {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let node \u003d sender.view as? NodeView else {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if teamMenu.isHidden {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            UIView.animate(withDuration: 0, animations: {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let point \u003d node.convert(CGPoint(x: node.bounds.maxX, y: node.bounds.maxY), to: self.view)"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self.teamMenu.frame.origin \u003d point"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            })"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            teamMenu.isHidden \u003d false"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        menuDest?.set(node: node.node, for: sender)"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @objc func drawPath(_ sender: UIPanGestureRecognizer) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard editMode \u003d\u003d .path else {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let fromNode \u003d sender.view as? NodeView else {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        startingNode \u003d fromNode"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let endPoint \u003d sender.location(in: mapBackground)"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let endView \u003d editingAreaWrapper.hitTest(endPoint, with: nil) as? NodeView"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if endView !\u003d nil {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            destination \u003d endView"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            destination?.highlighted(true)"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            destination?.highlighted(false)"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            destination \u003d nil"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let bazier \u003d UIBezierPath()"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        bazier.move(to: fromNode.center)"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        switch sender.state {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case .began:"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            lineLayer \u003d PathView()"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            startingNode?.highlighted(true)"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            editingAreaWrapper.layer.addSublayer(lineLayer)"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case .changed:"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            bazier.addLine(to: endPoint)"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            lineLayer.path \u003d bazier.cgPath"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case .ended:"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            startingNode?.highlighted(false)"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            destination?.highlighted(false)"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            destination \u003d nil"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let toNode \u003d endView else {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                lineLayer.removeFromSuperlayer()"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            bazier.addLine(to: toNode.center)"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let path \u003d Path(from: fromNode.node, to: toNode.node)"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let pathReversed \u003d Path(from: toNode.node, to: fromNode.node)"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if gameParameter.map.getAllPaths().contains(path) {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                lineLayer.removeFromSuperlayer()"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            lineLayer.set(path: path)"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            gameParameter.map.add(path: path)"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            gameParameter.map.add(path: pathReversed)"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            lineLayer.path \u003d bazier.cgPath"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            lineLayerArr.append(lineLayer)"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func store(with name: String, replace: Bool \u003d false) {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var bounds \u003d Rect(originX: 0, originY: 0,"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                          height: Double(self.view.bounds.size.height),"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                          width: Double(self.view.bounds.size.width))"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if let size \u003d self.mapBackground.image?.size {"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            bounds \u003d Rect(originX: 0, originY: 0, height: Double(size.height), width: Double(size.width))"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.gameParameter.map.changeBackground(\"\\(name)background\", with: bounds)"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let background \u003d self.mapBackground.image, let preview \u003d self.scrollView.screenShot else {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let alert \u003d UIAlert(errorMsg: \"Cannot save without background and preview image.\", msg: \"\", confirm: { _ in"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self.store(with: name)"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            })"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            alert.present(in: self)"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let result \u003d try storage.save(self.gameParameter, background, preview: preview, with: name, replace: replace)"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if result \u003d\u003d false {"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let alert \u003d UIAlert(errorMsg: \"Save failed.\", msg: \"\")"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                alert.present(in: self)"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        } catch StorageError.fileExisted {"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let alert \u003d UIAlert(errorMsg: \"File Existed. Are you sure to replace?\", msg: \"\", confirm: { _ in"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self.store(with: name, replace: true)"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            })"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            alert.present(in: self)"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        } catch {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let error \u003d error as? StorageError"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let alert \u003d UIAlert(errorMsg: error?.getMessage() ?? \"Unknown Error.\", msg: nil)"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            alert.present(in: self)"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func initBackground() {"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let image \u003d storage.readImage(gameParameter.map.map) ?? UIImage(named: gameParameter.map.map),"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let editingAreaWrapper \u003d self.editingAreaWrapper else {"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        mapBackground.contentMode \u003d .topLeft"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        mapBackground.frame \u003d CGRect(origin: CGPoint.zero, size: image.size)"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        editingAreaWrapper.frame \u003d mapBackground.frame"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        editingAreaWrapper.subviews.forEach {"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            $0.frame \u003d mapBackground.frame"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        scrollView.contentSize \u003d image.size"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        scrollView.minimumZoomScale \u003d max(view.frame.height/image.size.height, view.frame.width/image.size.width)"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        scrollView.setZoomScale(scrollView.minimumZoomScale, animated: false)"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        mapBackground.image \u003d image"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func reInitScrollView () {"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let oldScrollView \u003d self.scrollView else {"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            preconditionFailure(\"scrollView is nil.\")"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let scrollView \u003d UIScrollView(frame: self.scrollView.frame)"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.scrollView \u003d scrollView"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        scrollView.translatesAutoresizingMaskIntoConstraints \u003d false"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        view.insertSubview(scrollView, aboveSubview: oldScrollView)"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        scrollView.topAnchor.constraint(equalTo: view.topAnchor).isActive \u003d true"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        scrollView.trailingAnchor.constraint(equalTo: view.trailingAnchor).isActive \u003d true"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        scrollView.bottomAnchor.constraint(equalTo: view.bottomAnchor).isActive \u003d true"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        scrollView.leadingAnchor.constraint(equalTo: view.leadingAnchor).isActive \u003d true"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        scrollView.updateConstraints()"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        editingAreaWrapper.removeFromSuperview()"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        scrollView.addSubview(editingAreaWrapper)"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func initNodeGestures() -\u003e [UIGestureRecognizer] {"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let singleTapOnNodeGesture \u003d UITapGestureRecognizer(target: self, action: #selector(singleTapOnNode(_:)))"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        singleTapOnNodeGesture.numberOfTapsRequired \u003d 1"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let doubleTapOnNodeGesture \u003d UITapGestureRecognizer(target: self, action: #selector(doubleTapOnNode(_:)))"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        doubleTapOnNodeGesture.numberOfTapsRequired \u003d 2"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let longPressOnNodeGesture \u003d UILongPressGestureRecognizer(target: self, action: #selector(longPressOnNode(_:)))"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        singleTapOnNodeGesture.require(toFail: doubleTapOnNodeGesture)"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        singleTapOnNodeGesture.delaysTouchesBegan \u003d true"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        doubleTapOnNodeGesture.delaysTouchesBegan \u003d true"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let drawPathGesture \u003d UIPanGestureRecognizer(target: self, action: #selector(drawPath(_:)))"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return [singleTapOnNodeGesture, doubleTapOnNodeGesture, longPressOnNodeGesture, drawPathGesture]"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func fillWith(_ subview: UIView) {"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        subview.translatesAutoresizingMaskIntoConstraints \u003d false"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        subview.leadingAnchor.constraint(equalTo: view.leadingAnchor).isActive \u003d true"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        subview.trailingAnchor.constraint(equalTo: view.trailingAnchor).isActive \u003d true"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        subview.topAnchor.constraint(equalTo: view.topAnchor).isActive \u003d true"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        subview.bottomAnchor.constraint(equalTo: view.bottomAnchor).isActive \u003d true"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 445,
      "henry": 4,
      "Jason Chong": 10
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/View/MenuViewController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  MenuViewController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/24/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "protocol MenuViewDelegateProtocol: class {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func assign(port: Port, to team: Team?)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func start(from node: Node, for team: Team)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func getEditingMode(for gesture: UIGestureRecognizer) -\u003e EditMode?"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class MenuViewController: UITableViewController {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var data: [Team] \u003d [] {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.tableView.reloadData()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var node: Node?"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var editMode: EditMode?"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    weak var delegate: MenuViewDelegateProtocol?"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        super.viewDidLoad()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.tableView.isUserInteractionEnabled \u003d true"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.tableView.isScrollEnabled \u003d false"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    // MARK: - Table view data source"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override func numberOfSections(in tableView: UITableView) -\u003e Int {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return 1"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -\u003e Int {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return data.count"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let cell \u003d tableView.dequeueReusableCell(withIdentifier: \"menuCell\", for: indexPath)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        cell.textLabel?.text \u003d data[indexPath.item].name"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        cell.textLabel?.textAlignment \u003d .center"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard editMode \u003d\u003d .portOwnership else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return cell"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if let unwrappedPort \u003d node as? Port, let portOwner \u003d unwrappedPort.owner, portOwner \u003d\u003d data[indexPath.item] {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            cell.backgroundColor \u003d .gray"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            cell.backgroundColor \u003d .white"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return cell"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let selectedTeam \u003d data[indexPath.item]"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if editMode \u003d\u003d .portOwnership, let unwrappedPort \u003d node as? Port {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if let portOwner \u003d unwrappedPort.owner, portOwner \u003d\u003d selectedTeam {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self.delegate?.assign(port: unwrappedPort, to: nil)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self.delegate?.assign(port: unwrappedPort, to: data[indexPath.item])"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if editMode \u003d\u003d .startingNode, let unwrappedNode \u003d node {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.delegate?.start(from: unwrappedNode, for: selectedTeam)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func set(node: Node, for gesture: UIGestureRecognizer) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.node \u003d node"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.tableView.reloadData()"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.editMode \u003d delegate?.getEditingMode(for: gesture)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 83
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/View/NodeView.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  NodeView.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/19/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class NodeView: UIImageView {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var node: Node"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var nodeLabel: UILabel"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var icon: UIImageView?"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(node: Node) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.node \u003d node"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.nodeLabel \u003d NodeView.getBlankLabel()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.init(frame: CGRect(fromRect: node.frame))"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        nodeLabel.text \u003d node.name"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        nodeLabel.frame.size \u003d CGSize(width: node.frame.width, height: 15)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if let image \u003d Resources.Icon.of(node) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.image \u003d UIImage(named: image)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        node.objects.forEach { object in"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if let image \u003d Resources.Icon.of(object) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self.image \u003d UIImage(named: image)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.addSubview(nodeLabel)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        fatalError(\"init(coder:) has not been implemented\")"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    // Update image of a node view after new object is added into it."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func update() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        node.objects.forEach { object in"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if let image \u003d Resources.Icon.of(object) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self.image \u003d UIImage(named: image)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Add NodeView to provided superView: view and add Node model to Map model"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - view: superView where NodeView is added"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - map: Map model where Node is added"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - gestures: gesture recognizers added to NodeView"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func addTo(_ view: UIView, map: Map, with gestures: [UIGestureRecognizer]) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.addNode(node)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.isUserInteractionEnabled \u003d true"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for gesture in gestures {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.addGestureRecognizer(gesture)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        view.addSubview(self)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Remove NodeView from superView and remove Node model from Map model"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - map: Map model where Node is removed from"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func removeFrom(map: Map) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.removeNode(node)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.removeFromSuperview()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Add icon on left top of the node view to represent special attribute of the node."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - icon: The image view of the icon."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func addIcon(_ icon: UIImageView) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.addSubview(icon)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.icon \u003d icon"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        icon.translatesAutoresizingMaskIntoConstraints \u003d false"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        icon.bottomAnchor.constraint(equalTo: self.bottomAnchor).isActive \u003d true"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        icon.trailingAnchor.constraint(equalTo: self.trailingAnchor).isActive \u003d true"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        icon.widthAnchor.constraint(equalToConstant: 20).isActive \u003d true"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        icon.heightAnchor.constraint(equalToConstant: 20).isActive \u003d true"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func removeIcon() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.icon?.removeFromSuperview()"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func highlighted(_ highlighted: Bool) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if highlighted {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.layer.borderColor \u003d UIColor.white.cgColor"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.layer.borderWidth \u003d 3.0"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.layer.borderColor \u003d nil"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.layer.borderWidth \u003d 0"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static func getBlankLabel() -\u003e UILabel {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let label \u003d UILabel()"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        label.frame.origin \u003d CGPoint(x: 0, y: -15)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        label.backgroundColor \u003d .white"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        label.textAlignment \u003d .center"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        label.font \u003d label.font.withSize(10)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return label"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 94,
      "Jason Chong": 16
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/View/PathView.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  PathView.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 4/1/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class PathView: CAShapeLayer {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var shipPath: Path?"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    static func \u003d\u003d (lhs: PathView, rhs: PathView) -\u003e Bool {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return lhs.shipPath \u003d\u003d rhs.shipPath"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override init() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        super.init()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.strokeColor \u003d UIColor.black.cgColor"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.lineWidth \u003d 2.0"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(path: Path) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        super.init()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.strokeColor \u003d UIColor.black.cgColor"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.lineWidth \u003d 2.0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.shipPath \u003d path"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let bazier \u003d UIBezierPath()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        bazier.move(to: CGPoint(x: path.fromNode.frame.midX,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                y: path.fromNode.frame.midY))"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        bazier.addLine(to: CGPoint(x: path.toNode.frame.midX,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                   y: path.toNode.frame.midY))"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.path \u003d bazier.cgPath"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        path.modifiers.forEach { self.add($0) }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        fatalError(\"init(coder:) has not been implemented\")"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func set(path: Path) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.shipPath \u003d path"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func add(_ modifier: Volatile) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let path \u003d shipPath else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.shipPath?.modifiers.append(modifier)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let layer \u003d CALayer()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let image \u003d UIImage(named: Resources.Icon.weather)?.cgImage"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        layer.contentsGravity \u003d .resizeAspect"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        layer.contents \u003d image"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let midX \u003d (path.fromNode.frame.midX + path.toNode.frame.midX) / 2"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let midY \u003d (path.fromNode.frame.midY + path.toNode.frame.midY) / 2"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        layer.frame \u003d CGRect(x: midX, y: midY, width: 50, height: 50)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.addSublayer(layer)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 61
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/View/PlayerTableViewCell.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  PlayerTableViewCell.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/19/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "enum GameParameterItemType {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    case player"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    case turn"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "enum FieldType: Int {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    case name"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    case number"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "protocol GameParameterItem {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var type: GameParameterItemType { get }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var sectionTitle: String { get }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class PlayerParameterItem: GameParameterItem {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var type: GameParameterItemType {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return .player"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var sectionTitle: String {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return \"Player Parameter\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var playerParameter: PlayerParameter"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(playerParameter: PlayerParameter) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.playerParameter \u003d playerParameter"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class TurnParameterItem: GameParameterItem {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var type: GameParameterItemType {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return .turn"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var sectionTitle: String {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return \"Game Turn\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var label: String"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var input: Int?"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var game: GameParameter"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(label: String, game: GameParameter, input: Int) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.label \u003d label"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.input \u003d input"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.game \u003d game"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class PlayerTableViewCell: UITableViewCell {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var nameField: UITextField!"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var moneyField: UITextField!"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var item: GameParameterItem? {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let item \u003d item as? PlayerParameterItem else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            nameField.text \u003d item.playerParameter.getName()"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            moneyField.text \u003d String(item.playerParameter.getMoney())"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            nameField.tag \u003d FieldType.name.rawValue"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            moneyField.tag \u003d FieldType.number.rawValue"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class TurnTableViewCell: UITableViewCell {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var label: UILabel!"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var textField: UITextField!"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var item: GameParameterItem? {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let item \u003d item as? TurnParameterItem else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            label.text \u003d item.label"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let input \u003d item.input else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                textField.text \u003d \"\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            textField.text \u003d String(input)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            textField.tag \u003d FieldType.number.rawValue"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 100
    }
  },
  {
    "path": "SailingThroughHistory/MainMenuViewController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  MainMenuViewController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class MainMenuViewController: UIViewController {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.viewDidLoad()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override func viewDidAppear(_ animated: Bool) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.viewDidAppear(true)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.view.window?.rootViewController \u003d self"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if segue.identifier \u003d\u003d \"menuToLocalRoom\" {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let roomController \u003d segue.destination as? WaitingRoomViewController,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let deviceId \u003d UIDevice.current.identifierForVendor?.uuidString else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    let alert \u003d ControllerUtils.getGenericAlert(titled: \"Error\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                                withMsg: \"An error has occured. Please try again later.\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    present(alert, animated: true)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            roomController.roomConnection \u003d LocalRoomConnection(deviceId: deviceId)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 34
    }
  },
  {
    "path": "SailingThroughHistory/Network/FirestoreConstants.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  FirestoreConstants.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import FirebaseFirestore"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "enum FirestoreConstants {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let maxImageSize: Int64 \u003d 104857600 // 100MB"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let firestore \u003d Firestore.firestore()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let rooms \u003d firestore.collection(\"Rooms\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let roomCollectionName \u003d \"Rooms\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let roomCollection \u003d firestore.collection(roomCollectionName)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let modelCollectionName \u003d \"Model\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let initialStateDocumentName \u003d \"Initial State\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let currentStateDocumentName \u003d \"Current State\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let runTimeInfoCollectionName \u003d \"Runtime Info\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let turnActionsDocumentName \u003d \"TurnActions\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let errorCategory \u003d \"Firebase\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let numPlayersKey \u003d \"NumPlayers\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let playersCollectionName \u003d \"Players\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    static let devicesCollectionName \u003d \"Devices\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let lastHeartBeatKey \u003d \"LastHeartBeat\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let pushStateErrorMsg: StaticString \u003d \"Failed to push state\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let encodeStateErrorMsg \u003d \"Failed to encode state\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let pullErrorMsg \u003d \"Failed to pull document.\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let roomMasterKey \u003d \"RoomMaster\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let roomStartedKey \u003d \"started\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let playerTeamKey \u003d \"Team\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    static let playerDeviceKey \u003d \"Device\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let teamsKey \u003d \"Teams\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let backgroundUrlKey \u003d \"backgroundUrl\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 2,
      "Jason Chong": 34
    }
  },
  {
    "path": "SailingThroughHistory/Network/FirestoreRoom.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  FirebaseRoom.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import FirebaseFirestore"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class FirestoreRoom: Room {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let name: String"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let firestore: Firestore"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(named name: String) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.name \u003d name"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.firestore \u003d FirestoreConstants.firestore"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static func processRooms(snapshot: QuerySnapshot?, error: Error?) -\u003e [Room] {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let roomDocuments \u003d snapshot?.documents else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            fatalError(\"Failed to read rooms\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return roomDocuments"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .map { FirestoreRoom(named: $0.documentID) }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getConnection(completion callback: @escaping (RoomConnection?, Error?) -\u003e ()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        FirebaseRoomConnection.getConnection(for: self, completion: callback)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static func deleteIfNecessary(named name: String) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let devicesCollectionReference \u003d FirestoreConstants"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .roomCollection"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .document(name)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .collection(FirestoreConstants.devicesCollectionName)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        func deleteIfEmpty(_: Error?) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            devicesCollectionReference.getDocuments(completion: { (snapshot, error) in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let snapshot \u003d snapshot else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    print(\"Unable to load room players: \\(String(describing: error?.localizedDescription))\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                if snapshot.documents.count \u003c\u003d 0 {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    FirestoreConstants.roomCollection.document(name).delete()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    deleteAllRoomInformation(named: name)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            })"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        devicesCollectionReference.getDocuments { (snapshot, error) in"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let snapshot \u003d snapshot else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                print(\"Unable to load room players: \\(String(describing: error?.localizedDescription))\")"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            for document in snapshot.documents {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let lastHeartBeat \u003d document.get(FirestoreConstants.lastHeartBeatKey)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    as? Double,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    Date().timeIntervalSince1970 - lastHeartBeat \u003c 60 else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        document.reference.delete(completion: deleteIfEmpty)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        return"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static func deleteAllRoomInformation(named name: String) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let devicesCollectionReference \u003d FirestoreConstants"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .roomCollection"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .document(name)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .collection(FirestoreConstants.devicesCollectionName)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let playersCollectionReference \u003d FirestoreConstants"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .roomCollection"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .document(name)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .collection(FirestoreConstants.playersCollectionName)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for reference in [devicesCollectionReference, playersCollectionReference] {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            reference.getDocuments { (snapshot, _) in"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                for document in snapshot?.documents ?? [] {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    document.reference.delete()"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 86
    }
  },
  {
    "path": "SailingThroughHistory/Network/FirestoreRoomConnection.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  FirebaseConnection.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import FirebaseFirestore"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import CodableFirebase"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import FirebaseStorage"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import os"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class FirebaseRoomConnection: RoomConnection {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    static private let deadTime: TimeInterval \u003d 60"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let deviceId: String"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private(set) var roomMasterId: String"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var numOfPlayers: Int"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let roomName: String"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var heartbeatTimer: Timer?"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var removalCallback: (() -\u003e Void)?"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var listeners \u003d [ListenerRegistration]()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var roomDocumentRef: DocumentReference {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return FirestoreConstants.roomCollection.document(roomName)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var modelCollectionRef: CollectionReference {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return roomDocumentRef.collection(FirestoreConstants.modelCollectionName)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var runTimeInfoCollectionRef: CollectionReference {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return roomDocumentRef.collection(FirestoreConstants.runTimeInfoCollectionName)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var turnActionsDocumentRef: DocumentReference {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return runTimeInfoCollectionRef.document(FirestoreConstants.turnActionsDocumentName)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var devicesCollectionRef: CollectionReference {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return roomDocumentRef.collection(FirestoreConstants.devicesCollectionName)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var playersCollectionRef: CollectionReference {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return roomDocumentRef.collection(FirestoreConstants.playersCollectionName)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(forRoom roomName: String) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.roomName \u003d roomName"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let deviceId \u003d UIDevice.current.identifierForVendor?.uuidString else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            fatalError(\"Device has no uuid\")"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.deviceId \u003d deviceId"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.roomMasterId \u003d \"\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.numOfPlayers \u003d 0"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func subscribeRemoval(removalCallback: (() -\u003e Void)?) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.removalCallback \u003d removalCallback"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        listeners.append(roomDocumentRef.addSnapshotListener { [weak self] (document, _) in"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if let document \u003d document {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                if !document.exists {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    self?.removalCallback?()"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        })"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        listeners.append(devicesCollectionRef.document(deviceId).addSnapshotListener { [weak self] (document, _) in"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let document \u003d document, !document.exists else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.devicesCollectionRef"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                .document(document.documentID)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                .collection(FirestoreConstants.playersCollectionName)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                .getDocuments(completion: { (snapshot, _) in"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    guard let snapshot \u003d snapshot else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                        return"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    snapshot.documents.forEach { document in"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        self?.playersCollectionRef.document(document.documentID).delete()"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                })"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.removalCallback?()"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        })"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static func getConnection(for room: FirestoreRoom,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                              completion callback: @escaping (RoomConnection?, Error?) -\u003e Void) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let connection \u003d FirebaseRoomConnection(forRoom: room.name)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        func postConnectionActions(error: Error?) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if let error \u003d error {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                callback(nil, error)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            connection.roomDocumentRef.getDocument { (querySnapshot, error) in"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                guard let document \u003d querySnapshot, error \u003d\u003d nil else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    print(\"Failed to update master Id. Error: \\(String(describing: error))\")"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                connection.roomMasterId \u003d document.get(FirestoreConstants.roomMasterKey) as? String ?? \"\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                connection.postJoinActions(completion: callback)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        connection.roomDocumentRef.getDocument { (snapshot, error) in"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if let error \u003d error {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                callback(nil, error)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if let document \u003d snapshot, document.exists, let started \u003d document.get(FirestoreConstants.roomStartedKey) as? Bool {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                if (!started) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    // join as usual player"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    connection.devicesCollectionRef.document(connection.deviceId).setData([FirestoreConstants.numPlayersKey: connection.numOfPlayers]) { error in"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                        postConnectionActions(error: error)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    // join as spectator - during game play"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    connection.devicesCollectionRef.document(connection.deviceId).setData([FirestoreConstants.numPlayersKey: connection.numOfPlayers]) { error in"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                        postConnectionActions(error: error)"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                connection.createRoom(completion: postConnectionActions)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func addPlayer() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let playerId \u003d \"\\(getNewPlayerIndex())-\" + self.deviceId"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.playersCollectionRef"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .document(playerId)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .setData([FirestoreConstants.playerDeviceKey: self.deviceId]) { [weak self] error in"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let self \u003d self, error \u003d\u003d nil else {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.numOfPlayers +\u003d 1"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.devicesCollectionRef.document(self.deviceId)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    .setData([FirestoreConstants.numPlayersKey: self.numOfPlayers])"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func getNewPlayerIndex() -\u003e Int {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return self.numOfPlayers + 1"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func createRoom(completion: @escaping (Error?) -\u003e Void) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let currentTime \u003d Date().timeIntervalSince1970"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let batch \u003d Firestore.firestore().batch()"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let data: [String: Any] \u003d [FirestoreConstants.roomMasterKey: self.deviceId,"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                   FirestoreConstants.roomStartedKey: false]"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        batch.setData(data, forDocument: self.roomDocumentRef)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.roomDocumentRef.setData([FirestoreConstants.roomMasterKey: self.deviceId])"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.devicesCollectionRef.document(deviceId).setData([FirestoreConstants.numPlayersKey: self.numOfPlayers,"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            FirestoreConstants.lastHeartBeatKey: currentTime])"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        batch.commit(completion: completion)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func postJoinActions(completion callback: @escaping (RoomConnection?, Error?) -\u003e Void) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.sendAndCheckHeartBeat { [weak self] in"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.subscribeRemoval(removalCallback: nil)"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.devicesCollectionRef.document(self.deviceId).updateData([FirestoreConstants.numPlayersKey: self.numOfPlayers])"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.heartbeatTimer \u003d Timer.scheduledTimer(withTimeInterval: 5, repeats: true, block: { _ in"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.sendAndCheckHeartBeat(completion: nil)"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        })"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.heartbeatTimer?.fire()"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        callback(self, nil)"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func sendAndCheckHeartBeat(completion callback: (() -\u003e Void)?) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let currentTime \u003d Date().timeIntervalSince1970"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        devicesCollectionRef.document(deviceId)"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .updateData([FirestoreConstants.lastHeartBeatKey: currentTime]) { _ in"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                callback?()"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        devicesCollectionRef.getDocuments { [weak self] (snapshot, error) in"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if let error \u003d error {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                print(\"Error reading device documents. \\(error.localizedDescription)\")"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let data \u003d snapshot else {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            for document in data.documents {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let lastHeartBeat \u003d document.get(FirestoreConstants.lastHeartBeatKey) as? TimeInterval else {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    print(\"Error reading last heartbeat for \\(document.documentID)\")"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    document.reference.delete()"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                if currentTime - lastHeartBeat \u003e FirebaseRoomConnection.deadTime {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    let deviceName \u003d document.documentID"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    /// Remove player"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    self?.removeDevice(withId: deviceName)"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func removeDevice(withId deviceName: String) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.devicesCollectionRef.document(deviceName).delete()"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.playersCollectionRef.whereField(FirestoreConstants.playerDeviceKey, isEqualTo: deviceName).getDocuments { (snapshot, error) in"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let snapshot \u003d snapshot else {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            snapshot.documents.forEach { document in"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                document.reference.delete()"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if deviceName \u003d\u003d self.roomMasterId {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.roomDocumentRef.delete()"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func startGame(initialState: GameState, background: Data, completion callback: @escaping (Error?) -\u003e Void) throws {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let reference \u003d Storage.storage().reference().child(deviceId).child(\"background.png\")"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let path \u003d reference.fullPath"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        reference"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .putData(background, metadata: StorageMetadata()) { [weak self] (_, error) in"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard error \u003d\u003d nil, let self \u003d self else {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    print(error ?? \"Error starting game\")"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let batch \u003d FirestoreConstants.firestore.batch()"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let data \u003d try? FirestoreEncoder.init().encode(initialState) else {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                batch.setData(data,"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                              forDocument: self.modelCollectionRef.document(FirestoreConstants.initialStateDocumentName))"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                batch.updateData([FirestoreConstants.roomStartedKey: true,"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                  FirestoreConstants.backgroundUrlKey: path], forDocument: self.roomDocumentRef)"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                batch.commit(completion: callback)"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func push(initialState: GameState, completion callback: @escaping (Error?) -\u003e Void) throws {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        try push(initialState,"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                 to: modelCollectionRef.document(FirestoreConstants.initialStateDocumentName),"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                 encodeErrorMsg: FirestoreConstants.encodeStateErrorMsg,"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                 completion: callback)"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func push(currentState: GameState, forTurn turn: Int, completion callback: @escaping (Error?) -\u003e Void) throws {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        try push(currentState,"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                 to: modelCollectionRef.document(String(turn)),"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                 encodeErrorMsg: FirestoreConstants.encodeStateErrorMsg,"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                 completion: callback)"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToMasterState(for turn: Int, callback: @escaping (GameState) -\u003e Void) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        listeners.append(modelCollectionRef.document(String(turn)).addSnapshotListener { (snapshot, error) in"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let data \u003d snapshot?.data(),"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                error \u003d\u003d nil,"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let state \u003d try? FirestoreDecoder.init().decode(GameState.self, from: data) else {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            callback(state)"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        })"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToActions(for turn: Int, callback: @escaping ([(String, [PlayerAction])], Error?) -\u003e Void) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        listeners.append(turnActionsDocumentRef.collection(String(turn)).addSnapshotListener { (query, queryError) in"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let snapshot \u003d query else {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                callback([], NetworkError.pullError(message: \"Snapshot is nil for turn actions\"))"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if let queryError \u003d queryError {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                callback([], NetworkError.pullError(message: queryError.localizedDescription))"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            do {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let actions \u003d try snapshot.documents.map {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    ($0.documentID, try FirebaseDecoder.init().decode(PlayerActionBatch.self, from: $0.data()).actions)"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                callback(actions, nil)"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            } catch {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                callback([],"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                         NetworkError.pullError(message: \"Error when decoding: \\(error.localizedDescription)\"))"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        })"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToMembers(with callback: @escaping ([RoomMember]) -\u003e Void) {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        listeners.append(playersCollectionRef.addSnapshotListener { (snapshot, error) in"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let snapshot \u003d snapshot, error \u003d\u003d nil else {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            var players \u003d [RoomMember]()"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            for document in snapshot.documents {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let team \u003d document.get(FirestoreConstants.playerTeamKey) as? String"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let player \u003d document.documentID"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                guard let deviceId \u003d document.get(FirestoreConstants.playerDeviceKey) as? String else {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    self.playersCollectionRef.document(document.documentID).delete()"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    continue"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                players.append(RoomMember(playerName: player, teamName: team, deviceId: deviceId))"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            callback(players)"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        })"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func push\u003cT: Codable\u003e(_ codable: T, to docRef: DocumentReference,"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                  encodeErrorMsg: String,"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                  completion callback: @escaping (Error?) -\u003e Void) throws {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let encoded \u003d try? FirestoreEncoder().encode(codable) else {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            throw NetworkError.encodeError(message: encodeErrorMsg)"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        docRef.setData(encoded, completion: callback)"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func push(actions: [PlayerAction], fromPlayer player: GenericPlayer, forTurnNumbered turn: Int, completion callback: @escaping (Error?) -\u003e ()) throws {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        /// TODO: Change collection"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        /// Room doc -\u003e runtimeinfo(col) -\u003e TurnActions (doc) -\u003e Turn1...Turn999 (col)"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        try push(PlayerActionBatch(playerName: player.name, actions: actions),"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                 to: turnActionsDocumentRef.collection(String(turn)).document(player.name),"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                 encodeErrorMsg: FirestoreConstants.encodeStateErrorMsg,"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                 completion: callback)"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func set(teams: [Team]) {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        roomDocumentRef.setData([FirestoreConstants.teamsKey: teams.map { $0.name }])"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscibeToTeamNames(with callback: @escaping ([String]) -\u003e Void) {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.listeners.append(roomDocumentRef.addSnapshotListener({ (document, error) in"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let document \u003d document, error \u003d\u003d nil,"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let teamNames \u003d document.get(FirestoreConstants.teamsKey) as? [String] else {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            callback(teamNames)"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }))"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func changeTeamName(for identifier: String, to teamName: String) {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        playersCollectionRef.document(identifier).updateData([FirestoreConstants.playerTeamKey: teamName])"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func remove(player identifier: String) {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.numOfPlayers -\u003d 1"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.numOfPlayers \u003d self.numOfPlayers \u003e\u003d 0 ? self.numOfPlayers : 0"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        devicesCollectionRef.document(self.deviceId).updateData([FirestoreConstants.numPlayersKey: self.numOfPlayers])"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        playersCollectionRef.document(identifier).delete()"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToStart(with callback: @escaping (GameState, Data) -\u003e Void) {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.listeners.append(modelCollectionRef.addSnapshotListener { [weak self] (snapshot, error) in"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let snapshot \u003d snapshot, error \u003d\u003d nil else {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let document \u003d snapshot.documents"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                .filter({ $0.documentID \u003d\u003d FirestoreConstants.initialStateDocumentName})"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                .first else {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let initialState \u003d try? FirestoreDecoder.init().decode(GameState.self, from: document.data()) else {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                print(\"Error decoding game state\")"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.roomDocumentRef.getDocument { (snapshot, error) in"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let snapshot \u003d snapshot, error \u003d\u003d nil else {"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let url \u003d snapshot.get(FirestoreConstants.backgroundUrlKey) as? String else {"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                Storage.storage().reference(withPath: url)"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    .getData(maxSize: FirestoreConstants.maxImageSize) { (data, error) in"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        guard let data \u003d data, error \u003d\u003d nil else {"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                            return"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        callback(initialState, data)"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        })"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func changeRemovalCallback(to callback: @escaping () -\u003e Void) {"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.removalCallback \u003d callback"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    deinit {"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.heartbeatTimer?.invalidate()"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.listeners.forEach { $0.remove() }"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 97,
      "Jason Chong": 308
    }
  },
  {
    "path": "SailingThroughHistory/Network/FirestoreRooms.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  GameRooms.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import FirebaseFirestore"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class FirestoreRooms: NetworkRooms {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var rooms \u003d [String]()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var callbacks \u003d [([String]) -\u003e Void]()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var listener: ListenerRegistration?"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.listener \u003d FirestoreConstants"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .roomCollection"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .addSnapshotListener({ [unowned self] (snapshot, _) in"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let snapshot \u003d snapshot else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.rooms \u003d []"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                for document in snapshot.documents {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    let name \u003d document.documentID"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    FirestoreRoom.deleteIfNecessary(named: name)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    if !(document.data()[FirestoreConstants.roomStartedKey] as? Bool ?? false) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        self.rooms.append(name)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.callbacks.forEach { $0(self.rooms) }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            })"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        print(\"networkRooms: \\(self.rooms.count)\")"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribe(with callback: @escaping ([String]) -\u003e Void) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        callback(self.rooms)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        callbacks.append(callback)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    deinit {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        listener?.remove()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 1,
      "Jason Chong": 44
    }
  },
  {
    "path": "SailingThroughHistory/Network/Local/LocalRoomConnection.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  LocalRoomConnection.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 14/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class LocalRoomConnection: RoomConnection {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var roomMasterId: String"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var roomMemberCallbacks \u003d [([RoomMember]) -\u003e Void]()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var roomMembers \u003d [RoomMember]() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            roomMemberCallbacks.forEach { $0(roomMembers) }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var gameStartCallbacks \u003d [(GameState, Data) -\u003e Void]()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var initialState: (state: GameState, background: Data)? {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let initialState \u003d initialState else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            gameStartCallbacks.forEach { $0(initialState.state, initialState.background) }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var currentState \u003d [Int: GameState]()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var currentStateCallbacks \u003d [Int: [(GameState) -\u003e Void]]()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var actionCallbacks \u003d [Int: [([(String, [PlayerAction])], Error?) -\u003e Void]]()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var actions \u003d [Int: [(String, [PlayerAction])]]()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var teams \u003d [String]() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            teamCallbacks.forEach { $0(teams) }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var teamCallbacks \u003d [([String]) -\u003e Void]()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(deviceId: String) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.roomMasterId \u003d deviceId"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func addPlayer() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let member \u003d RoomMember(playerName: \"\\(roomMembers.count)-Play\", teamName: nil, deviceId: roomMasterId)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        roomMembers.append(member)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func startGame(initialState: GameState, background: Data, completion callback: @escaping (Error?) -\u003e Void) throws {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.initialState \u003d (state: initialState, background: background)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        callback(nil)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func push(currentState: GameState, forTurn turn: Int, completion callback: @escaping (Error?) -\u003e Void) throws {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.currentState[turn] \u003d currentState"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.currentStateCallbacks[turn, default: []].forEach { $0(currentState) }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        callback(nil)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToMasterState(for turn: Int, callback: @escaping (GameState) -\u003e Void) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        currentStateCallbacks[turn, default: []].append(callback)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let state \u003d currentState[turn] else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        callback(state)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToActions(for turn: Int, callback: @escaping ([(String, [PlayerAction])], Error?) -\u003e Void) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        actionCallbacks[turn, default: []].append(callback)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let actions \u003d actions[turn] else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        callback(actions, nil)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToMembers(with callback: @escaping ([RoomMember]) -\u003e Void) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        roomMemberCallbacks.append(callback)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        callback(roomMembers)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func push(actions: [PlayerAction], fromPlayer player: GenericPlayer, forTurnNumbered turn: Int,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "              completion callback: @escaping (Error?) -\u003e ()) throws {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.actions[turn, default: []].append((player.name, actions))"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.actionCallbacks[turn, default: []].forEach { $0(self.actions[turn, default: []], nil) }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        callback(nil)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func set(teams: [Team]) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.teams \u003d teams.map { $0.name }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscibeToTeamNames(with callback: @escaping ([String]) -\u003e Void) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        teamCallbacks.append(callback)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        callback(teams)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToStart(with callback: @escaping (GameState, Data) -\u003e Void) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        gameStartCallbacks.append(callback)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let initialState \u003d self.initialState else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        callback(initialState.state, initialState.background)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func changeTeamName(for identifier: String, to teamName: String) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for (index, member) in roomMembers.enumerated() where member.playerName \u003d\u003d identifier {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            roomMembers[index] \u003d RoomMember(playerName: member.playerName,"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                            teamName: teamName,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                            deviceId: member.deviceId)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func remove(player: String) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        roomMembers \u003d roomMembers.filter { $0.playerName !\u003d player }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func changeRemovalCallback(to callback: @escaping () -\u003e Void) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        // Removal callback should never be triggered in a local game."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 125
    }
  },
  {
    "path": "SailingThroughHistory/Network/NetworkError.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  NetworkError.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "enum NetworkError: Error {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case pushError(message: String)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case encodeError(message: String)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case pullError(message: String)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 13
    }
  },
  {
    "path": "SailingThroughHistory/Network/NetworkFactory.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  NetworkFactory.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "enum NetworkFactory {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static func createRoomInstance(named name: String) -\u003e Room {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return FirestoreRoom(named: name)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static func createNetworkRoomsInstance() -\u003e NetworkRooms {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return FirestoreRooms()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 17
    }
  },
  {
    "path": "SailingThroughHistory/Network/NetworkRooms.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  NetworkRooms.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "protocol NetworkRooms {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribe(with callback: @escaping ([String]) -\u003e Void)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 11
    }
  },
  {
    "path": "SailingThroughHistory/Network/Room.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Room.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "protocol Room {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var name: String { get }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getConnection(completion callback: @escaping (RoomConnection?, Error?) -\u003e Void)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 13
    }
  },
  {
    "path": "SailingThroughHistory/Network/RoomConnection.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Network.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 26/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "protocol RoomConnection {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var roomMasterId: String { get }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func addPlayer()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func startGame(initialState: GameState, background: Data, completion callback: @escaping (Error?) -\u003e Void) throws"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func push(currentState: GameState, forTurn turn: Int, completion callback: @escaping (Error?) -\u003e Void) throws"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToActions(for turn: Int, callback: @escaping ([(String, [PlayerAction])], Error?) -\u003e Void)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToMembers(with callback: @escaping ([RoomMember]) -\u003e Void)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func push(actions: [PlayerAction], fromPlayer player: GenericPlayer,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "              forTurnNumbered turn: Int,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "              completion callback: @escaping (Error?) -\u003e ()) throws"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func set(teams: [Team])"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscibeToTeamNames(with callback: @escaping ([String]) -\u003e Void)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToStart(with callback: @escaping (GameState, Data) -\u003e Void)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func changeTeamName(for identifier: String, to teamName: String)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func remove(player: String)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func changeRemovalCallback(to callback: @escaping () -\u003e Void)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToMasterState(for turn: Int, callback: @escaping (GameState) -\u003e Void)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 2,
      "Jason Chong": 39
    }
  },
  {
    "path": "SailingThroughHistory/Parameters/Node.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Node.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 14/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class Node: Codable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    static var nextID: Int \u003d 0"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    static var reuseID: [Int] \u003d []"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    let identifier: Int"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let name: String"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let frame: Rect"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var objects: [GameObject] \u003d []"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(name: String, frame: Rect) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.name \u003d name"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.frame \u003d frame"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "        if !Node.reuseID.isEmpty {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.identifier \u003d Node.reuseID.removeLast()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.identifier \u003d Node.nextID"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            Node.nextID +\u003d 1"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func remove() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        Node.reuseID.append(self.identifier)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let values \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        identifier \u003d try values.decode(Int.self, forKey: .identifier)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        name \u003d try values.decode(String.self, forKey: .name)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        frame \u003d try values.decode(Rect.self, forKey: .frame)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var objectsArrayForType \u003d try values.nestedUnkeyedContainer(forKey: CodingKeys.objects)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        while !objectsArrayForType.isAtEnd {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let object \u003d try objectsArrayForType.nestedContainer(keyedBy: ObjectTypeKey.self)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let type \u003d try object.decode(ObjectTypes.self, forKey: ObjectTypeKey.type)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            switch type {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            case .pirate:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let object \u003d try object.decode(PirateIsland.self, forKey: ObjectTypeKey.object)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                objects.append(object)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            case .shipUI:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let object \u003d try object.decode(ShipUI.self, forKey: ObjectTypeKey.object)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                objects.append(object)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(identifier, forKey: .identifier)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(name, forKey: .name)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(frame, forKey: .frame)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var objectsWithType \u003d [ObjectWithType]()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for object in objects {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if object is PirateIsland {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                objectsWithType.append(ObjectWithType(object: object, type: ObjectTypes.pirate))"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if object is ShipUI {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                objectsWithType.append(ObjectWithType(object: object, type: ObjectTypes.shipUI))"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(objectsWithType, forKey: .objects)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func add(object: GameObject) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.objects.append(object)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case identifier"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case name"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case image"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case frame"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case objects"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    enum ObjectTypeKey: String, CodingKey {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case type"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case object"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    enum ObjectTypes: String, Codable {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case pirate"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case shipUI"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    struct ObjectWithType: Codable, Hashable {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var object: GameObject"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var type: ObjectTypes"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        init(object: GameObject, type: ObjectTypes) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.object \u003d object"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.type \u003d type"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "extension Node: Hashable {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func hash(into hasher: inout Hasher) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        hasher.combine(self.identifier)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    static func \u003d\u003d (lhs: Node, rhs: Node) -\u003e Bool {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return lhs.identifier \u003d\u003d rhs.identifier"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "henry"
        },
        "content": "// Mark : - Information"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "henry"
        },
        "content": "extension Node {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getNodesInRange(ship: Pirate_WeatherEntity, range: Double, map: Map) -\u003e [Node] {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var pQueue \u003d PriorityQueue\u003cComparablePair\u003cNode\u003e\u003e()"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "henry"
        },
        "content": "        var visited \u003d Set\u003cInt\u003e()"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "henry"
        },
        "content": "        var next \u003d self"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "henry"
        },
        "content": "        var nodesInRange \u003d [Node]()"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        pQueue.add(ComparablePair(object: next, weight: 0))"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        while !pQueue.isEmpty {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let comparableNode \u003d pQueue.poll()"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "henry"
        },
        "content": "            let weight \u003d comparableNode?.weight ?? 0"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "henry"
        },
        "content": "            next \u003d comparableNode?.object ?? self"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "henry"
        },
        "content": "            if visited.contains(next.identifier) || weight \u003e range {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "henry"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "henry"
        },
        "content": "            visited.insert(next.identifier)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "henry"
        },
        "content": "            nodesInRange.append(next)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "henry"
        },
        "content": "            for neighbor in map.getPaths(of: next) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "henry"
        },
        "content": "                let cost \u003d neighbor.computeCostOfPath(baseCost: 1, with: ship)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                pQueue.add(ComparablePair\u003cNode\u003e(object: neighbor.toNode, weight: weight + cost))"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "henry"
        },
        "content": "        return nodesInRange"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getCompleteShortestPath(to node: Node, with ship: Pirate_WeatherEntity, map: Map) -\u003e [Node] {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var pQueue \u003d PriorityQueue\u003cComparablePair\u003c[Node]\u003e\u003e()"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "henry"
        },
        "content": "        var visited \u003d Set\u003cInt\u003e()"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "henry"
        },
        "content": "        var next \u003d self"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "henry"
        },
        "content": "        var path \u003d [Node]()"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        pQueue.add(ComparablePair(object: [next], weight: 0))"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        while next !\u003d node \u0026\u0026 !pQueue.isEmpty {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let comparablePath \u003d pQueue.poll()"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "henry"
        },
        "content": "            path \u003d comparablePath?.object ?? [self]"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "henry"
        },
        "content": "            let weight \u003d comparablePath?.weight ?? 0"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "henry"
        },
        "content": "            next \u003d path.last ?? self"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "henry"
        },
        "content": "            if visited.contains(next.identifier) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "henry"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "henry"
        },
        "content": "            visited.insert(next.identifier)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            for neighbor in map.getPaths(of: next) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "henry"
        },
        "content": "                let cost \u003d neighbor.computeCostOfPath(baseCost: 1, with: ship)"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                pQueue.add(ComparablePair\u003c[Node]\u003e(object: path + [neighbor.toNode], weight: weight + cost))"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "henry"
        },
        "content": "        return path"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getNumNodesTo(to node: Node, map: Map) -\u003e Int? {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "henry"
        },
        "content": "        var queue \u003d [(Node, Int)]()"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "henry"
        },
        "content": "        var visited \u003d Set\u003cInt\u003e()"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "henry"
        },
        "content": "        var next \u003d self"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "henry"
        },
        "content": "        var weight \u003d -1"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "henry"
        },
        "content": "        while next !\u003d node \u0026\u0026 !queue.isEmpty {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "henry"
        },
        "content": "            (next, weight) \u003d queue.removeFirst()"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "henry"
        },
        "content": "            if visited.contains(next.identifier) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "henry"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "henry"
        },
        "content": "            visited.insert(next.identifier)"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "henry"
        },
        "content": "            for neighbor in map.getPaths(of: next) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "henry"
        },
        "content": "                queue.append((neighbor.toNode, weight + 1))"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "henry"
        },
        "content": "        return weight \u003c 0 ? nil : weight"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 92,
      "henry": 58,
      "Jason Chong": 31
    }
  },
  {
    "path": "SailingThroughHistory/Parameters/Path.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Path.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 18/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class Path: Hashable, Codable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    let fromNode: Node"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    let toNode: Node"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var modifiers \u003d [Volatile]()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(from fromObject: Node, to toObject: Node) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.fromNode \u003d fromObject"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.toNode \u003d toObject"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let values \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        fromNode \u003d try values.decode(Node.self, forKey: .fromNode)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        toNode \u003d try values.decode(Node.self, forKey: .toNode)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        modifiers \u003d try values.decode([Volatile].self, forKey: .modifiers)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static func \u003d\u003d (lhs: Path, rhs: Path) -\u003e Bool {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return (lhs.fromNode, lhs.toNode) \u003d\u003d (rhs.fromNode, rhs.toNode)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func hash(into hasher: inout Hasher) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        hasher.combine(fromNode)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        hasher.combine(toNode)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "    func computeCostOfPath(baseCost: Double, with ship: Pirate_WeatherEntity) -\u003e Double {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "        var result \u003d baseCost"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "        for modifier in modifiers {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": "            result \u003d Double(modifier.applyVelocityModifier(to: Float(result), with: Float(ship.getWeatherModifier())))"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case fromNode"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case toNode"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case modifiers"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 23,
      "henry": 8,
      "Jason Chong": 19
    }
  },
  {
    "path": "SailingThroughHistory/Parameters/PirateIsland.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  PirateUI.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by Jason Chong on 14/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class PirateIsland: GameObject {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": "    private static let pirateNodeHeight: Double \u003d 50"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "    private static let pirateNodeWidth: Double \u003d 50"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let influence \u003d 3"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let chance \u003d 0.2"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    init(in node: Node) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        super.init(frame: node.frame)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "        try super.init(from: decoder)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 19,
      "Jason Chong": 3
    }
  },
  {
    "path": "SailingThroughHistory/Parameters/Port.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Port.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 14/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class Port: Node {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    public var taxAmount: GameVariable\u003cInt\u003e \u003d GameVariable(value: 0)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    public var owner: Team? {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.ownerName \u003d self.owner?.name"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    public var ownerName: String?"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    // TODO: add item quantity editing in level editor"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var itemParametersSoldByPort: [ItemType] {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return [ItemType](itemBuyValue.keys)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var itemParametersBoughtByPort: [ItemType] {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return [ItemType](itemSellValue.keys)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "    var itemSellValue \u003d [ItemType: Int]()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    var itemBuyValue \u003d [ItemType: Int]()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let portNodeWidth: Double \u003d 50"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let portNodeHeight: Double \u003d 50"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(team: Team, originX: Double, originY: Double) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let frame \u003d Rect(originX: originX, originY: originY, height: Port.portNodeHeight,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                               width: Port.portNodeWidth)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        owner \u003d team"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        super.init(name: team.name, frame: frame)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        initDefaultPrices()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(team: Team?, name: String, originX: Double, originY: Double) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let frame \u003d Rect(originX: originX, originY: originY, height: Port.portNodeHeight,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                               width: Port.portNodeWidth)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        super.init(name: name, frame: frame)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        initDefaultPrices()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let values \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        ownerName \u003d try values.decode(String?.self, forKey: .ownerName)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "        itemBuyValue \u003d try values.decode([ItemType: Int].self, forKey: .itemBuyValue)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": "        itemSellValue \u003d try values.decode([ItemType: Int].self, forKey: .itemSellValue)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let superDecoder \u003d try values.superDecoder()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try super.init(from: superDecoder)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(owner?.name, forKey: .ownerName)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(itemBuyValue, forKey: .itemBuyValue)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(itemSellValue, forKey: .itemSellValue)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let superencoder \u003d container.superEncoder()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try super.encode(to: superencoder)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    public func assignOwner(_ team: Team?) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        owner \u003d team"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    public func collectTax(from player: Player) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "henry"
        },
        "content": "        // Prevent event listeners from firing unneccessarily"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if player.team \u003d\u003d owner {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        player.updateMoney(by: -taxAmount.value)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        owner?.updateMoney(by: taxAmount.value)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "henry"
        },
        "content": "    public func collectTax(from npc: NPC) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "henry"
        },
        "content": "        owner?.updateMoney(by: taxAmount.value)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getBuyValue(of type: ItemParameter) -\u003e Int? {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "henry"
        },
        "content": "        return getBuyValue(of: type.itemType)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getBuyValue(of type: ItemType) -\u003e Int? {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "henry"
        },
        "content": "        return itemBuyValue[type]"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getSellValue(of type: ItemParameter) -\u003e Int? {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "henry"
        },
        "content": "        return getSellValue(of: type.itemType)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getSellValue(of type: ItemType) -\u003e Int? {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "henry"
        },
        "content": "        return itemSellValue[type]"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func setBuyValue(of type: ItemType, value: Int) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        itemBuyValue[type] \u003d value"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func setSellValue(of type: ItemType, value: Int) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        itemSellValue[type] \u003d value"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "henry"
        },
        "content": "    // Availability at ports"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "henry"
        },
        "content": "    func delete(_ type: ItemParameter) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "henry"
        },
        "content": "        if getBuyValue(of: type) !\u003d nil {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "henry"
        },
        "content": "            itemBuyValue.removeValue(forKey: type.itemType)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "henry"
        },
        "content": "        if getSellValue(of: type) !\u003d nil {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "henry"
        },
        "content": "            itemSellValue.removeValue(forKey: type.itemType)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getAllItemType() -\u003e [ItemType] {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // default/placeholder for all items"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "henry"
        },
        "content": "        return Array(Set(itemParametersSoldByPort + itemParametersBoughtByPort))"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func initDefaultPrices() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        ItemType.allCases.forEach { [weak self] itemType in"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.itemSellValue[itemType] \u003d ItemParameter.defaultPrice"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.itemBuyValue[itemType] \u003d ItemParameter.defaultPrice"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case ownerName"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case itemParameters"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "henry"
        },
        "content": "        case itemBuyValue"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "henry"
        },
        "content": "        case itemSellValue"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 55,
      "henry": 38,
      "Jason Chong": 37,
      "yuhongherald": 3
    }
  },
  {
    "path": "SailingThroughHistory/Parameters/Sea.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Sea.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 14/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class Sea: Node {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let seaNodeWidth: Double \u003d 50"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let seaNodeHeight: Double \u003d 50"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(name: String, originX: Double, originY: Double) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let frame \u003d Rect(originX: originX, originY: originY, height: Sea.seaNodeHeight,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                               width: Sea.seaNodeWidth)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        super.init(name: name, frame: frame)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try super.init(from: decoder)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 5,
      "Jason Chong": 17
    }
  },
  {
    "path": "SailingThroughHistory/Parameters/VolatileModifier.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  VolatileModifier.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 14/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "protocol VolatileModifier: Codable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var isActive: Bool { get }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func applyVelocityModifier(to oldVelocity: Float, with modifier: Float) -\u003e Float"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func update(currentMonth: Int)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension VolatileModifier {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func applyVelocityModifier(to oldVelocity: Float, with modifier: Float) -\u003e Float {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return oldVelocity"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func update(currentMonth: Int) { }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "// Generic class inheritate from VolatileModifier to force subclasses conform to codable"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class Volatile: VolatileModifier, Codable {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var isActive \u003d false"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 8,
      "Jason Chong": 21,
      "yuhongherald": 1
    }
  },
  {
    "path": "SailingThroughHistory/Parameters/Weather.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Weather.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 14/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class Weather: Volatile {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var windVelocity: Float \u003d 0"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    let strengths: [Float] \u003d Default.Weather.strengths"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func applyVelocityModifier(to oldVelocity: Float, with modifier: Float) -\u003e Float {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if isActive {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return oldVelocity + windVelocity"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return oldVelocity"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Update wind velocity based on current month strength."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func update(currentMonth: Int) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        windVelocity \u003d strengths[currentMonth / 4]"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 6,
      "Jason Chong": 21
    }
  },
  {
    "path": "SailingThroughHistory/Rooms/MembersTableDataSource.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  PlayersTableDataSource.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 1/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class MembersTableDataSource: NSObject, UITableViewDataSource {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private let deviceId: String"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private let mainController: WaitingRoomViewController"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private static let reuseIdentifier \u003d \"waitingRoomCell\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let view: UITableView"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var waitingRoom: WaitingRoom"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(withView view: UITableView, withRoom waitingRoom: WaitingRoom, mainController: WaitingRoomViewController) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let deviceId \u003d UIDevice.current.identifierForVendor?.uuidString else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            fatalError(\"Device has no uuid\")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.deviceId \u003d deviceId"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.view \u003d view"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.waitingRoom \u003d waitingRoom"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.mainController \u003d mainController"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.init()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.waitingRoom.subscribeToMembers(with: { _ in"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            view.reloadData()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }, observer: self)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -\u003e Int {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return waitingRoom.players.count"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let cell \u003d tableView.dequeueReusableCell(withIdentifier: MembersTableDataSource.reuseIdentifier,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                                       for: indexPath)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            as? WaitingRoomViewCell else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                fatalError(\"Cells are not instances of RoomViewCell\")"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let player \u003d waitingRoom.players[indexPath.row]"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        cell.changeButtonPressedCallback \u003d { [weak self] in"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self?.waitingRoom.changeTeam(of: player.playerName)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        cell.removeButtonPressedCallback \u003d { [weak self] in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self?.waitingRoom.remove(player: player.playerName)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let isMaster \u003d waitingRoom.isRoomMaster()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if isMaster {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            cell.makeGameMasterButtonPressedCallback \u003d { [weak self] in"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self?.waitingRoom.makeGameMaster(player.playerName)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        cell.enableButton( isMaster || player.deviceId \u003d\u003d self.deviceId)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        cell.set(playerName: player.playerName)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if player.isGameMaster {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            cell.set(teamName: \"Game Master\")"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            cell.set(teamName: player.teamName ?? \"No team\")"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return cell"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 24,
      "Jason Chong": 40
    }
  },
  {
    "path": "SailingThroughHistory/Rooms/RoomMember.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  WaitingRoomPlayer.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 1/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "struct RoomMember {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let playerName: String"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let teamName: String?"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let deviceId: String"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var isGameMaster \u003d false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var hasTeam: Bool {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return teamName !\u003d nil"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(playerName: String, teamName: String?, deviceId: String) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.playerName \u003d playerName"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.teamName \u003d teamName"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.deviceId \u003d deviceId"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 23
    }
  },
  {
    "path": "SailingThroughHistory/Rooms/RoomViewCell.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  RoomViewCell.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class RoomViewCell: UITableViewCell {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var joinButtonPressed: UIButton!"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var roomNameLabel: UILabel!"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var joinButtonPressedCallback: (() -\u003e Void)?"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBAction private func joinButtonPressed(_ sender: UIButton) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        joinButtonPressedCallback?()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func set(roomName: String) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        roomNameLabel.text \u003d roomName"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 23
    }
  },
  {
    "path": "SailingThroughHistory/Rooms/Rooms.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Rooms.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class Rooms {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private(set) var rooms \u003d [Room]() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.subscriptions.forEach { $0(rooms) }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var subscriptions \u003d [([Room]) -\u003e Void]()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var networkRooms: NetworkRooms \u003d NetworkFactory.createNetworkRoomsInstance()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.networkRooms.subscribe { [weak self] roomNames in"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            print(\"roomNames: \\(roomNames.count)\")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let rooms \u003d roomNames.map { NetworkFactory.createRoomInstance(named: $0) }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.rooms \u003d rooms"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribe(with callback: @escaping ([Room]) -\u003e Void) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        callback(rooms)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        subscriptions.append(callback)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 1,
      "Jason Chong": 29
    }
  },
  {
    "path": "SailingThroughHistory/Rooms/RoomsMenuViewController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  File.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class RoomsMenuViewController: UIViewController {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet weak var roomsTableView: UITableView!"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var backButton: UIButtonRounded! {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            backButton.set(color: .red)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private lazy var dataSource \u003d RoomsTableDataSource(withView: roomsTableView, mainController: self)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var roomConnection: RoomConnection?"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var canJoinRoom \u003d true"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.viewDidLoad()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        roomsTableView.dataSource \u003d dataSource"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        roomsTableView.reloadData()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBAction func createRoomButtonPressed(_ sender: UIButton) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let alert \u003d UIAlert(title: \"Input name: \", confirm: { [weak self] roomName in"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.join(room: NetworkFactory.createRoomInstance(named: roomName))"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }, textPlaceHolder: \"Input name here.\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        alert.present(in: self)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func backButtonPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        dismiss(animated: true, completion: nil)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func join(room: Room) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if !canJoinRoom {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let alert \u003d ControllerUtils.getGenericAlert(titled: \"You cannot join multiple rooms.\", withMsg: \"\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        canJoinRoom \u003d false"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        room.getConnection { [weak self] (connection, error) in"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let connection \u003d connection, error \u003d\u003d nil else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let alert \u003d ControllerUtils.getGenericAlert(titled: \"Error joining room.\", withMsg: \"\") {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    self?.dismiss(animated: true, completion: nil)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self?.present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self?.canJoinRoom \u003d true"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.roomConnection \u003d connection"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.performSegue(withIdentifier: \"roomsToWaitingRoom\", sender: nil)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.canJoinRoom \u003d true"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.prepare(for: segue, sender: sender)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard segue.identifier \u003d\u003d \"roomsToWaitingRoom\","
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let nextController \u003d segue.destination as? WaitingRoomViewController,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let roomConnection \u003d self.roomConnection else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        nextController.roomConnection \u003d roomConnection"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 12,
      "Jason Chong": 61
    }
  },
  {
    "path": "SailingThroughHistory/Rooms/RoomsTableDataSource.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  RoomsTableDataSource.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class RoomsTableDataSource: NSObject, UITableViewDataSource {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let reuseIdentifier \u003d \"roomCell\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let view: UITableView"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var rooms: Rooms"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let mainController: RoomsMenuViewController"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(withView view: UITableView, mainController: RoomsMenuViewController) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.view \u003d view"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.rooms \u003d Rooms()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.mainController \u003d mainController"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.init()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.rooms.subscribe { _ in"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            view.reloadData()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -\u003e Int {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return rooms.rooms.count"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let cell \u003d tableView.dequeueReusableCell(withIdentifier: RoomsTableDataSource.reuseIdentifier,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                       for: indexPath)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            as? RoomViewCell else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                fatalError(\"Cells are not instances of RoomViewCell\")"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let room \u003d rooms.rooms[indexPath.row]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        cell.joinButtonPressedCallback \u003d { [weak self] in"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.mainController.join(room: room)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        cell.set(roomName: room.name)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return cell"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 44
    }
  },
  {
    "path": "SailingThroughHistory/Rooms/WaitingRoom.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  WaitingRoom.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 1/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class WaitingRoom {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var observers \u003d [(callback: ([RoomMember]) -\u003e Void, observer: AnyObject?)]()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private(set) var players: [RoomMember] {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            observers \u003d observers.filter { $0.observer !\u003d nil }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            observers.forEach {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                $0.callback(players)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var roomMaster: String?"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var parameters: GameParameter? {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            updateTeamList()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var connection: RoomConnection"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var teamNames \u003d [String]()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let identifier: String"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(fromConnection connection: RoomConnection) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let deviceId \u003d UIDevice.current.identifierForVendor?.uuidString else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            fatalError(\"Device has no uuid\")"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.identifier \u003d deviceId"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.players \u003d []"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.connection \u003d connection"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        connection.subscribeToMembers {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.players \u003d $0"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        connection.subscibeToTeamNames {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.teamNames \u003d $0"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToMembers(with callback: @escaping ([RoomMember]) -\u003e Void, observer: AnyObject?) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        observers.append((callback: callback, observer: observer))"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        callback(players)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func isRoomMaster() -\u003e Bool {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return identifier \u003d\u003d connection.roomMasterId"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func changeTeam(of identifier: String) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard teamNames.count \u003e 0,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let playerIndex \u003d players.firstIndex(where: { $0.playerName \u003d\u003d identifier }) else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let player \u003d players[playerIndex]"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let newTeamIndex \u003d ((teamNames.index(of: player.teamName ?? \"\") ?? 0) + 1) % teamNames.count"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let newTeamName \u003d teamNames[newTeamIndex]"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        connection.changeTeamName(for: player.playerName, to: newTeamName)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func remove(player playerName: String) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        connection.remove(player: playerName)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func makeGameMaster(_ identifier: String) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard isRoomMaster(),"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let playerIndex \u003d players.firstIndex(where: { $0.playerName \u003d\u003d identifier }) else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for index in players.indices {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            players[index].isGameMaster \u003d false"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        players[playerIndex].isGameMaster \u003d true"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func updateTeamList() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard isRoomMaster(),"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let parameters \u003d parameters else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        connection.set(teams: parameters.teams)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 6,
      "Jason Chong": 85
    }
  },
  {
    "path": "SailingThroughHistory/Rooms/WaitingRoomCell.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  WaitingRoomCell.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 4/10/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class WaitingRoomViewCell: UITableViewCell {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet private weak var changeButton: UIButton!"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var makeGameMasterButton: UIButton!"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet private weak var removeButton: UIButton!"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet private weak var playerNameLabel: UILabel!"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet private weak var teamNameLabel: UILabel!"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var changeButtonPressedCallback: (() -\u003e Void)?"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var removeButtonPressedCallback: (() -\u003e Void)?"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var makeGameMasterButtonPressedCallback: (() -\u003e Void)? {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            makeGameMasterButton.isHidden \u003d makeGameMasterButtonPressedCallback \u003d\u003d nil"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction private func changeButtonPressed(_ sender: UIButton) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        changeButtonPressedCallback?()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction private func removeButtonPressed(_ sender: UIButton) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        removeButtonPressedCallback?()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBAction private func makeGameMasterButtonPressed(_ sender: UIButton) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        makeGameMasterButtonPressedCallback?()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func set(playerName: String) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        playerNameLabel.text \u003d playerName"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func set(teamName: String) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        teamNameLabel.text \u003d teamName"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func enableButton(_ bool: Bool) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        changeButton.isEnabled \u003d bool"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        removeButton.isEnabled \u003d bool"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 39,
      "Jason Chong": 10
    }
  },
  {
    "path": "SailingThroughHistory/Rooms/WaitingRoomViewController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  WaitingRoomViewController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 1/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class WaitingRoomViewController: UIViewController {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var joinPlayerButton: UIButtonRounded!"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var chooseLevelButton: UIButtonRounded!"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var playersTableView: UITableView!"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet weak var backButton: UIButtonRounded! {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            backButton.set(color: .red)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var dataSource: MembersTableDataSource?"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var roomConnection: RoomConnection?"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var waitingRoom: WaitingRoom?"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var initialState: GenericGameState?"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var imageData: Data?"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.viewDidLoad()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let roomConnection \u003d roomConnection else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let alert \u003d ControllerUtils.getGenericAlert(titled: \"Error getting connection\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                        withMsg: \"\") { [weak self] in"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                            self?.dismiss(animated: true, completion: nil)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }        "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let waitingRoom \u003d WaitingRoom(fromConnection: roomConnection)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        subscribeToGameStart()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.waitingRoom \u003d waitingRoom"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        dataSource \u003d MembersTableDataSource(withView: playersTableView, withRoom: waitingRoom, mainController: self)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        playersTableView.dataSource \u003d dataSource"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBAction func chooseLevelPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if !getWaitingRoom().isRoomMaster() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            showNotAuthorizedAlert()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        performSegue(withIdentifier: \"waitingRoomToGallery\", sender: nil)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBAction func backButtonPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        dismiss(animated: true, completion: nil)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBAction func joinPlayerPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        roomConnection?.addPlayer()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.prepare(for: segue, sender: sender)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        switch segue.identifier {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case \"waitingRoomToGallery\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            prepareForSegueToGallery(segue: segue)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            break"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case \"waitingRoomToGame\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            prepareForSegueToGame(segue: segue)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            break"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            break"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func prepareForSegueToGallery(segue: UIStoryboardSegue) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard segue.identifier \u003d\u003d \"waitingRoomToGallery\","
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let galleryController \u003d segue.destination as? GalleryViewController else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        galleryController.selectedCallback \u003d { [weak self] gameParameter in"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.waitingRoom?.parameters \u003d gameParameter"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func prepareForSegueToGame(segue: UIStoryboardSegue) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let roomConnection \u003d roomConnection,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let initialState \u003d initialState,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let imageData \u003d imageData,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let gameController \u003d segue.destination as? MainGameViewController else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let system \u003d TurnSystem(isMaster: getWaitingRoom().isRoomMaster(), network: roomConnection, startingState: initialState, deviceId: self.getWaitingRoom().identifier)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        gameController.turnSystem \u003d system"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        gameController.network \u003d roomConnection"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        gameController.backgroundData \u003d imageData"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBAction func startGamePressed(_ sender: Any) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let (parameters, imageData) \u003d getGameData() else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        /// TODO: Remove hardcoded year"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let state \u003d GameState(baseYear: 1900, level: parameters, players: getWaitingRoom().players)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try roomConnection?.startGame(initialState: state, background: imageData) { [weak self] error in"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let error \u003d error else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                print(error)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let alert \u003d ControllerUtils.getGenericAlert(titled: \"Failed to start game.\","
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                            withMsg: \"Please try again later.\")"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self?.present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        } catch {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let alert \u003d ControllerUtils.getGenericAlert(titled: \"Failed to start game.\","
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                        withMsg: \"Error in game level.\")"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func getGameData() -\u003e (parameters: GameParameter, imageData: Data)? {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard !getWaitingRoom().players.isEmpty else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let alert \u003d ControllerUtils.getGenericAlert(titled: \"No players are registered.\","
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                        withMsg: \"You cannot start a game with no players.\")"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let parameters \u003d getWaitingRoom().parameters else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let alert \u003d ControllerUtils.getGenericAlert(titled: \"Missing Level.\","
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                        withMsg: \"Please choose a level first.\")"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let imageData \u003d LocalStorage().readImageData(parameters.map.map) else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let alert \u003d ControllerUtils.getGenericAlert(titled: \"Missing Image.\","
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                        withMsg: \"Please choose a valid level first.\")"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var gmFound \u003d false"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for member in getWaitingRoom().players {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if member.isGameMaster {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                if gmFound {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    let alert \u003d ControllerUtils.getGenericAlert(titled: \"More than one GM found\","
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        withMsg: \"There can only be at most 1 Game Master.\")"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return nil"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                gmFound \u003d true"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            } else if !member.hasTeam {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let alert \u003d ControllerUtils.getGenericAlert(titled: \"\\(member.playerName) has no team.\","
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    withMsg: \"Please make sure everyone has a team.\")"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return nil"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return (parameters: parameters, imageData: imageData)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToGameStart() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let roomConnection \u003d roomConnection else {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            preconditionFailure(\"No connection to room.\")"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        roomConnection.subscribeToStart { [weak self] (state, imageData) in"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let self \u003d self else {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.imageData \u003d imageData"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.initialState \u003d state"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.performSegue(withIdentifier: \"waitingRoomToGame\", sender: nil)"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getWaitingRoom() -\u003e WaitingRoom {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let waitingRoom \u003d waitingRoom else {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            fatalError(\"Waiting room is nil.\")"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return waitingRoom"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func showNotAuthorizedAlert() {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let alert \u003d ControllerUtils.getGenericAlert(titled: \"Action not allowed.\","
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                    withMsg: \"You are not the room master.\")"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 5,
      "Jason Chong": 189
    }
  },
  {
    "path": "SailingThroughHistory/Stubs/GenericItemStub.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  GenericItemStub.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class GenericItemStub: GenericItem {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    let name: String?"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    let itemType: ItemType"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    var itemParameter: ItemParameter?"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    var weight: Int?"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    var quantity: Int"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    var isAvailableAtPort \u003d true"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    var doesItemDecay \u003d true"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    var buyValue \u003d 100"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    var sellValue \u003d 100"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    init(name: String, itemType: ItemType, quantity: Int) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.name \u003d name"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.itemType \u003d itemType"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.quantity \u003d quantity"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "    func setItemParameter(_ itemParameter: ItemParameter) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "    func decayItem(with time: Double) -\u003e Int? {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "        if doesItemDecay {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "            quantity -\u003d 1"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "            return 1"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "    func combine(with item: GenericItem) -\u003e Bool {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "    func remove(amount: Int) -\u003e Int {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard quantity \u003e\u003d amount else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": "            let deficit \u003d amount - quantity"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "henry"
        },
        "content": "            quantity \u003d 0"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "            return deficit"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": "        quantity -\u003d amount"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": "        return 0"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": "    func setQuantity(quantity: Int) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.quantity \u003d quantity"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getBuyValue(at port: Port) -\u003e Int? {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": "        return buyValue"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "henry"
        },
        "content": "    func sell(at port: Port) -\u003e Int? {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "henry"
        },
        "content": "        return sellValue"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "henry"
        },
        "content": "    func copy() -\u003e GenericItemStub {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "henry"
        },
        "content": "        let newCopy \u003d GenericItemStub(name: name ?? \"\", itemType: itemType, quantity: quantity)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "henry"
        },
        "content": "        newCopy.itemParameter \u003d itemParameter"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": "        newCopy.weight \u003d weight"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "henry"
        },
        "content": "        newCopy.isAvailableAtPort \u003d isAvailableAtPort"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "henry"
        },
        "content": "        newCopy.doesItemDecay \u003d doesItemDecay"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "henry"
        },
        "content": "        newCopy.buyValue \u003d buyValue"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "henry"
        },
        "content": "        newCopy.sellValue \u003d sellValue"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "henry"
        },
        "content": "        return newCopy"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 79
    }
  },
  {
    "path": "SailingThroughHistory/Stubs/GenericPlayerStub.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  GenericPlayerStub.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 14/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class GenericPlayerStub {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    var name: String \u003d \"\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    var team: Team?"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    var money: GameVariable\u003cInt\u003e \u003d GameVariable(value: 0)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    var currentCargoWeight: Int \u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    var weightCapacity: Int \u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    var state: GameVariable\u003cPlayerState\u003e \u003d GameVariable(value: PlayerState.endTurn)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    var node: Node?"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    var nodeIdVariable: GameVariable\u003cInt\u003e \u003d GameVariable(value: 0)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    var hasRolled: Bool \u003d false"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    var deviceId: String \u003d \"\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    var map: Map?"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    var gameState: GenericGameState?"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "    var playerShip: Ship?"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    var homeNode: Int \u003d 0"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "    private let errorMessage \u003d \"GameMaster cannot perform normal actions\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getItemParameter(itemType: ItemType) -\u003e ItemParameter? {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": "    func addShipsToMap(map: Map) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "henry"
        },
        "content": "    func updateMoney(to amount: Int) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": "    func updateMoney(by amount: Int) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "henry"
        },
        "content": "    func canBuyUpgrade() -\u003e Bool {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": "    func subscribeToItems(with observer: @escaping (GenericPlayer, [GenericItem]) -\u003e Void) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "henry"
        },
        "content": "    func subscribeToCargoWeight(with observer: @escaping (GenericPlayer, Int) -\u003e Void) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "henry"
        },
        "content": "    func subscribeToWeightCapcity(with observer: @escaping (GenericPlayer, Int) -\u003e Void) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "henry"
        },
        "content": "    func subscribeToMoney(with observer: @escaping (GenericPlayer, Int) -\u003e Void) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "henry"
        },
        "content": "    func startTurn(speedMultiplier: Double, map: Map?) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "henry"
        },
        "content": "    func buyUpgrade(upgrade: Upgrade) -\u003e (Bool, InfoMessage?) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "henry"
        },
        "content": "    func roll() -\u003e (Int, [Int]) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "henry"
        },
        "content": "    func move(nodeId: Int) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getPath(to nodeId: Int) -\u003e [Int] {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getNodesInRange(roll: Int) -\u003e [Node] {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "henry"
        },
        "content": "    func canDock() -\u003e Bool {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "henry"
        },
        "content": "    func dock() throws {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getPirateEncounterChance() -\u003e Double {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getPurchasableItemTypes() -\u003e [ItemType] {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getMaxPurchaseAmount(itemParameter: ItemParameter) -\u003e Int {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "henry"
        },
        "content": "    func buy(itemType: ItemType, quantity: Int) throws {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "henry"
        },
        "content": "    func sell(item: GenericItem) throws {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "henry"
        },
        "content": "    func sell(itemType: ItemType, quantity: Int) throws {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "henry"
        },
        "content": "    func setTax(port: Port, amount: Int) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "henry"
        },
        "content": "    func endTurn() -\u003e [InfoMessage] {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "henry"
        },
        "content": "    func canTradeAt(port: Port) -\u003e Bool {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 143
    }
  },
  {
    "path": "SailingThroughHistory/Stubs/NodeStub.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  NodeStub.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class NodeStub: Node {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init(name: String, id: Int) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "        Node.nextID \u003d id"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "        Node.reuseID.removeAll()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "        let frame \u003d Rect(originX: 0, originY: 0, height: 0, width: 0)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        super.init(name: name, frame: frame)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "        try super.init(from: decoder)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 22
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Data/GameTime.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "class GameTime: Codable {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "    // TODO"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "    let baseYear: Int"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    // 1-based index"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var week: Int {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "        return Int(actualWeeks) % GameConstants.weeksInMonth"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var month: Int {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "        return (Int(actualWeeks) / 4) % GameConstants.monthsInYear"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var year: Int {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "        return baseYear + Int(actualWeeks) / GameConstants.monthsInYear * GameConstants.weeksInMonth"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var actualWeeks \u003d 0.0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    init(baseYear: Int) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.baseYear \u003d baseYear"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "        let values \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "        try baseYear \u003d values.decode(Int.self, forKey: .actualWeeks)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "        try actualWeeks \u003d values.decode(Double.self, forKey: .actualWeeks)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(baseYear, forKey: .baseYear)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(actualWeeks, forKey: .actualWeeks)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "    private enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "        case baseYear"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "        case actualWeeks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "    func reset() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "        actualWeeks \u003d 0"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "    func addWeeks(_ weeks: Double) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": "        actualWeeks +\u003d weeks"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func before(other: GameTime) -\u003e Bool {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return actualWeeks \u003c\u003d other.actualWeeks"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 30,
      "yuhongherald": 19
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Data/Protocols/Printable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Printable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol Printable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var displayName: String { get }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 11
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Data/Protocols/SerializableGameObject.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SerializableGameObject.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol SerializableGameObject: ComparableOp, Operatable, Printable, Unique {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var fields: [String] { get }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func getField(field: String) -\u003e Any?"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func setField(field: String, object: Any?) -\u003e Bool"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 13
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Data/Protocols/Unique.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Unique.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol Unique: class {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var identifier: Int { get }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 11
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/EngineConstants.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GameConstants.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 18/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "enum EngineConstants {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let largestTimeStep: Double \u003d 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let forecastDuration: Double \u003d 1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let weeksToSeconds: Double \u003d 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let fastestGameSpeed: Double \u003d 1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let slowestGameSpeed: Double \u003d 0.5"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let smallestEngineTick: Double \u003d 0.01"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "enum GameConstants {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let weeksInMonth: Int \u003d 4"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let monthsInYear: Int \u003d 12"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let playerTurnDuration: Double \u003d 120"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    static let numOfTurn: Int \u003d 20"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let monsoonMultiplier: Double \u003d 2"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "enum Resources {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    enum Weather {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        static let monsoon: [String] \u003d [\"sea-node.png\"]"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    enum Ships {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        static let british: [String] \u003d [\"ship\"]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        static let dutch: [String] \u003d [\"ship\"]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        static let pirate: [String] \u003d [\"pirate-node\"]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        static let npc: [String] \u003d [\"ship\"]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    enum Avatars {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        static let british: String \u003d \"\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        static let dutch: String \u003d \"\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        static let pirate: String \u003d \"\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        static let npc: String \u003d \"\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    enum Items {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        static let opium: String \u003d \"\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        static let perfume: String \u003d \"\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        static let silk: String \u003d \"\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        static let teaLeaves: String \u003d \"\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    enum Misc {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        static let currency: String \u003d \"\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        static let portNode: String \u003d \"port-node\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        static let pirateNode: String \u003d \"pirate-node\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // static let edge: String \u003d \"\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    enum Flag {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        static let british: String \u003d \"british-flag.png\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        static let dutch: String \u003d \"dutch-flag.png\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    enum Icon {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        static let port: String \u003d \"port-node.png\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        static let sea: String \u003d \"sea-node.png\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        static let pirate: String \u003d \"pirate-node.png\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        static let weather: String \u003d \"weather-icon.png\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        static func of(_ object: Any) -\u003e String? {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if object is Port {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return Resources.Icon.port"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if object is Sea {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return Resources.Icon.sea"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if object is PirateIsland {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return Resources.Icon.pirate"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "enum Default {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    enum Item {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        static let buyValue: Int \u003d 100"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        static let sellValue: Int \u003d 100"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    enum Weather {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        static let strengths: [Float] \u003d [0, 0, 0, 0]"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    enum Suffix {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        static let background: String \u003d \"background\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    enum Background {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        static let image: String \u003d \"worldmap1815.jpg\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 44,
      "Jason Chong": 2,
      "yuhongherald": 53
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/BAEEvaluatable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  BAEEvaluatable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 8/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class BAEEvaluatable\u003cT\u003e: Evaluatable\u003cT\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let first: Evaluatable\u003cT\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let evaluator: GenericOperator"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let second: Evaluatable\u003cT\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private var defaultValue: T"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    override var value: T {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return evaluator.evaluate(first: first.value, second: second.value) as? T ?? defaultValue"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            defaultValue \u003d newValue"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(first: Evaluatable\u003cT\u003e, second: Evaluatable\u003cT\u003e, evaluator: GenericOperator,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "         defaultValue: T) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.first \u003d first"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.second \u003d second"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.evaluator \u003d evaluator"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.defaultValue \u003d defaultValue"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init(defaultValue)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 31
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/ConditionEvaluatable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  ConditionEvaluatable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class ConditionEvaluatable\u003cT\u003e: Evaluatable\u003cT\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    override var value: T {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            for condition in conditions {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                guard condition.evaluate() else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    return falseValue.value"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return trueValue.value"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            // discarded"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let conditions: [Evaluate]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let trueValue: Evaluatable\u003cT\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let falseValue: Evaluatable\u003cT\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(trueValue: Evaluatable\u003cT\u003e, falseValue: Evaluatable\u003cT\u003e,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "         conditions: [Evaluate]) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.conditions \u003d conditions"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.trueValue \u003d trueValue"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.falseValue \u003d falseValue"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init(trueValue.value)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 34
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Evaluatable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Evaluatable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 3/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class Evaluatable\u003cT\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private var _value: T"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var value: T {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return _value"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            _value \u003d newValue"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(_ value: T) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self._value \u003d value"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 22
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/EventAction.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  EventAction.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class EventAction\u003cT\u003e: Printable, Modify {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var displayName: String \u003d \"action\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let variable: GameVariable\u003cT\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let value: Evaluatable\u003cT\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    init?(variable: GameVariable\u003cT\u003e?, value: Evaluatable\u003cT\u003e?) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let variable \u003d variable, let value \u003d value else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.variable \u003d variable"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.value \u003d value"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func modify() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        variable.value \u003d value.value"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 4,
      "yuhongherald": 22
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/EventCondition.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  TurnCondition.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class EventCondition\u003cT\u003e: Printable, Evaluate {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var displayName: String \u003d \"condition\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let firstEvaluatable: Evaluatable\u003cT\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let secondEvaluatable: Evaluatable\u003cT\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let changeOperator: GenericComparator"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(first: Evaluatable\u003cT\u003e, second: Evaluatable\u003cT\u003e, change: GenericComparator) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.firstEvaluatable \u003d first"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.secondEvaluatable \u003d second"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.changeOperator \u003d change"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func evaluate() -\u003e Bool {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return changeOperator.compare(first: firstEvaluatable,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                      second: secondEvaluatable)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 26
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/EventTrigger.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  EventTrigger.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 30/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class EventTrigger\u003cT\u003e: Printable, Trigger {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var displayName: String \u003d \"trigger\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let variable: GameVariable\u003cT\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let comparator: GenericComparator"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private var triggered: Bool \u003d false"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private var oldValue: T"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(variable: GameVariable\u003cT\u003e, comparator: GenericComparator) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.variable \u003d variable"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.comparator \u003d comparator"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.oldValue \u003d variable.value"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        variable.subscribe { [weak self] _ in"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            guard let self \u003d self else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                return"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            self.triggered \u003d self.triggered ||"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                self.comparator.compare(first: self.oldValue,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                        second: self.variable.value)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func hasTriggered() -\u003e Bool {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return triggered"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func resetTrigger() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        triggered \u003d false"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 38
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/FlipFlopTrigger.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  FlipFlopTrigger.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "// A trigger that only fires once"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class FlipFlopTrigger: Trigger {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var triggered: Bool \u003d true"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func hasTriggered() -\u003e Bool {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return triggered"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func resetTrigger() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        triggered \u003d false"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 19
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/GameVariableEvaluatable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GameVariableEvaluatable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class GameVariableEvaluatable\u003cT\u003e: Evaluatable\u003cT\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let variable: GameVariable\u003cT\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    override var value: T {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return variable.value"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            variable.value \u003d newValue"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(variable: GameVariable\u003cT\u003e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.variable \u003d variable"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init(variable.value)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 23
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Arithmetic/AddOperator.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  AddOperator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 30/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "struct AddOperator\u003cT\u003e: GenericOperator where T: Arithmetic {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var displayName: String { return \"+\" }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func evaluate(first: Any?, second: Any?) -\u003e Any? {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard let firstT \u003d first as? T, let secondT \u003d second as? T else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return firstT + secondT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 17
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Arithmetic/DivideOperator.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  DivideOperator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 8/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "struct DivideOperator\u003cT\u003e: GenericOperator where T: Arithmetic {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var displayName: String { return \"/\" }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func evaluate(first: Any?, second: Any?) -\u003e Any? {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard let firstT \u003d first as? T, let secondT \u003d second as? T else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return firstT / secondT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 17
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Arithmetic/MultiplyOperator.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  MultiplyOperator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 8/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "struct MultiplyOperator\u003cT\u003e: GenericOperator where T: Arithmetic {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var displayName: String { return \"*\" }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func evaluate(first: Any?, second: Any?) -\u003e Any? {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard let firstT \u003d first as? T, let secondT \u003d second as? T else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return firstT * secondT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 17
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Arithmetic/SubtractOperator.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SubtractOperator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 30/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "struct SubtractOperator\u003cT\u003e: GenericOperator where T: Arithmetic {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var displayName: String { return \"-\" }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func evaluate(first: Any?, second: Any?) -\u003e Any? {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard let firstT \u003d first as? T, let secondT \u003d second as? T else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return firstT - secondT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 17
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/ChangeOperator.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  TrueOperator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "// equivalent to a change operator, since conditions check on value change"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class ChangeOperator: GenericComparator {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func compare(first: Any?, second: Any?) -\u003e Bool {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var displayName: String { return \"changed\" }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 15
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Comparable/Extensions/ConditionComparable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  ConditionComparable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol ConditionComparable: ComparableOp {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    associatedtype T where T: Comparable"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "extension ConditionComparable {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var operators: [GenericComparator] {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return ["
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        EqualOperator\u003cT\u003e(),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        NotEqualOperator\u003cT\u003e(),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        LessThanOperator\u003cT\u003e(),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        GreaterThanOperator\u003cT\u003e(),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        LessThanOrEqualOperator\u003cT\u003e(),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        GreaterThanOrEqualOperator\u003cT\u003e(),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        ChangeOperator()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 25
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Comparable/Extensions/Int+ConditionComparable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Int+Condition.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "extension Int: ConditionComparable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    typealias T \u003d Int"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "extension Int: Arithmetic {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 14
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Comparable/GreaterThanOperator.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GreaterThanOperator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class GreaterThanOperator\u003cT\u003e: GenericComparator where T: Comparable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var displayName: String { return \"\u003e\" }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func compare(first: Any?, second: Any?) -\u003e Bool {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard let firstT \u003d first as? T, let secondT \u003d second as? T else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return firstT \u003e secondT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 17
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Comparable/GreaterThanOrEqualOperator.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GreaterThanOrEqualOperator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class GreaterThanOrEqualOperator\u003cT\u003e: GenericComparator where T: Comparable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var displayName: String { return \"\u003e\u003d\" }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func compare(first: Any?, second: Any?) -\u003e Bool {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard let firstT \u003d first as? T, let secondT \u003d second as? T else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return firstT \u003e\u003d secondT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 17
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Comparable/LessThanOperator.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  LessThanOperator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class LessThanOperator\u003cT\u003e: GenericComparator where T: Comparable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var displayName: String { return \"\u003c\" }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func compare(first: Any?, second: Any?) -\u003e Bool {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard let firstT \u003d first as? T, let secondT \u003d second as? T else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return firstT \u003c secondT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 17
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Comparable/LessThanOrEqualOperator.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  LessThanOrEqualOperator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class LessThanOrEqualOperator\u003cT\u003e: GenericComparator where T: Comparable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var displayName: String { return \"\u003c\u003d\" }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func compare(first: Any?, second: Any?) -\u003e Bool {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard let firstT \u003d first as? T, let secondT \u003d second as? T else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return firstT \u003c\u003d secondT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 17
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Equatable/EqualOperator.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  IntOperator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "struct EqualOperator\u003cT\u003e: GenericComparator where T: Equatable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var displayName: String { return \"\u003d\u003d\" }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func compare(first: Any?, second: Any?) -\u003e Bool {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard let firstT \u003d first as? T, let secondT \u003d second as? T else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return firstT \u003d\u003d secondT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 17
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Equatable/NotEqualOperator.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  NotEqualOperator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "struct NotEqualOperator\u003cT\u003e: GenericComparator where T: Equatable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var displayName: String { return \"!\u003d\" }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func compare(first: Any?, second: Any?) -\u003e Bool {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard let firstT \u003d first as? T, let secondT \u003d second as? T else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return firstT !\u003d secondT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 17
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Evaluate.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Evaluate.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 8/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol Evaluate {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func evaluate() -\u003e Bool"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 11
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Modify.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Modify.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 8/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol Modify {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func modify()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 11
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Protocols/Arithmetic.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Arithmetic.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 30/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol Arithmetic: Operatable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func + (lhs: Self, rhs: Self) -\u003e Self"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func - (lhs: Self, rhs: Self) -\u003e Self"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func * (lhs: Self, rhs: Self) -\u003e Self"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func / (lhs: Self, rhs: Self) -\u003e Self"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "extension Arithmetic {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var evaluators: [GenericOperator] {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return ["
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            AddOperator\u003cSelf\u003e(),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            SubtractOperator\u003cSelf\u003e(),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            MultiplyOperator\u003cSelf\u003e(),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            DivideOperator\u003cSelf\u003e()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 25
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Protocols/ComparableOp.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Operatable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol ComparableOp {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var operators: [GenericComparator] { get }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 11
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Protocols/GenericComparator.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GenericOperator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol GenericComparator: Printable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func compare(first: Any?, second: Any?) -\u003e Bool"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 11
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Protocols/GenericEvaluateOperator.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GenericEvaluateOperator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "// The operator works in the notion of a BAE"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol GenericOperator: Printable {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    associatedtype T"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func evaluate(first: T?, second: T?) -\u003e T?"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 13
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Protocols/GenericOperator.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GenericEvaluateOperator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "// The operator works in the notion of a BAE"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol GenericOperator: Printable {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func evaluate(first: Any?, second: Any?) -\u003e Any?"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 12
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Protocols/Operatable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  OpEvaluatable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol Operatable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var evaluators: [GenericOperator] { get }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 11
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Trigger.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Trigger.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 8/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol Trigger {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func hasTriggered() -\u003e Bool"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func resetTrigger()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 13
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/Activatable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Activatable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 11/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol Activatable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var active: Bool { get set }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 11
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/EventPresets.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  EventPresetsFactory.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class EventPresets {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    enum Event {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case monsoon(activate: Bool)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case neutralTax(operand: String) // split into add sub mult div"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case itemPrice(for: ItemType, operand: String) // split into item types"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case playerDeath(for: GenericPlayer)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let monsoonEvents: [Bool: PresetEvent]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let neutralTaxEvents: [String: PresetEvent]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let itemPriceEvents: [String: [String: PresetEvent]]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let playerDeathEvents: [String: PresetEvent]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let eventTable: EventTable\u003cPresetEvent\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    init(gameState: GenericGameState, turnSystem: GenericTurnSystem) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // monsoon []"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // taxes []"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // item price []"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // player death []"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        eventTable \u003d EventTable\u003cPresetEvent\u003e()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        var monsoonEvents: [Bool: PresetEvent] \u003d [Bool: PresetEvent]()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        var neutralTaxEvents: [String: PresetEvent] \u003d [String: PresetEvent]()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        var itemPriceEvents: [String: [String: PresetEvent]] \u003d [String: [String: PresetEvent]]()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        var playerDeathEvents: [String: PresetEvent] \u003d [String: PresetEvent]()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        monsoonEvents[true] \u003d eventTable.pushEvent("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            event: HeavyMonsoonEvent(gameState: gameState,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                     start: PresetConstants.monsoonStart,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                     end: PresetConstants.monsoonEnd)) // call push on table for each construct"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        var evaluators \u003d 0.evaluators"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for index in 0..\u003cevaluators.count {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            let key \u003d evaluators[index].displayName"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let taxEvent \u003d TaxChangeEvent(gameState: gameState,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                          genericOperator: evaluators[index],"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                          modifier: PresetConstants.taxModifiers[index])"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            taxEvent.active \u003d false"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            neutralTaxEvents[key] \u003d eventTable.pushEvent("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                event: taxEvent)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            /*itemPriceEvents[key] \u003d [String: PresetEvent]()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            for item in ItemType.allCases {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                itemPriceEvents[key]?[item.rawValue] \u003d eventTable.pushEvent("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    event: ItemPriceEvent(gameState: gameState,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                          itemType: item,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                          genericOperator: evaluators[index],"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                          modifier: PresetConstants.priceModifers[index]))"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }*/"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for player in gameState.getPlayers() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            playerDeathEvents[player.name] \u003d eventTable.pushEvent("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                event: NegativeMoneyEvent(player: player))"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            eventTable.pushEvent(event: PlayerArrivalEvent(player: player))"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.monsoonEvents \u003d monsoonEvents"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.neutralTaxEvents \u003d neutralTaxEvents"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.itemPriceEvents \u003d itemPriceEvents"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.playerDeathEvents \u003d playerDeathEvents"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func getEvent(event: Event) -\u003e PresetEvent? {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        switch event {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .monsoon(activate: let activate):"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return monsoonEvents[activate]"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .neutralTax(operand: let operand):"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return neutralTaxEvents[operand]"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .itemPrice(for: let itemType, operand: let operand):"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return itemPriceEvents[operand]?[itemType.rawValue]"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .playerDeath(for: let player):"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return playerDeathEvents[player.name]"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func getEvent(id: Int) -\u003e PresetEvent? {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return eventTable.getEvent(id: id)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func getEvents() -\u003e [PresetEvent] {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return eventTable.getAllEvents()"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 1,
      "Jason Chong": 10,
      "yuhongherald": 75
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/EventTable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  EventTable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class EventTable\u003cT\u003e where T: TurnSystemEvent {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private var table: [Int: T] \u003d [Int: T]()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private var nextID: Int \u003d Int.max"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func pushEvent(event: T) -\u003e T {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        event.identifier \u003d nextID"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        table[nextID] \u003d event"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        nextID -\u003d 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return event"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func getEvent(id: Int) -\u003e T? {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return table[id]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func getAllEvents() -\u003e [T] {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return Array(table.values)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getAllFlipFlopEvents() -\u003e [PresetEvent] {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return getAllEvents().filter { event in"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            event.triggers.contains { $0 is FlipFlopTrigger }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }.compactMap { $0 as? PresetEvent }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 6,
      "yuhongherald": 24
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/GameTime/CountdownCondition.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  CountdownTrigger.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class CountdownCondition: EventCondition\u003cGameTime\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(gameTime: GameVariable\u003cGameTime\u003e, to: GameTime) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init(first: GameVariableEvaluatable(variable: gameTime),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   second: Evaluatable(to), change: EqualOperator\u003cGameTime\u003e())"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 14
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/GameTime/GameTime+Equatable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GameTime+Equatable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 8/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "extension GameTime: Equatable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func \u003d\u003d (lhs: GameTime, rhs: GameTime) -\u003e Bool {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return lhs.week \u003d\u003d rhs.week \u0026\u0026"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "               lhs.month \u003d\u003d rhs.month \u0026\u0026"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "               lhs.year \u003d\u003d rhs.year"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "extension GameTime: ComparableOp {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var operators: [GenericComparator] {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return [EqualOperator\u003cGameTime\u003e(),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                NotEqualOperator\u003cGameTime\u003e()]"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 22
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/GameTime/MonthWithin.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GameTimeWithin.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 7/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class MonthWithin: GenericComparator {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let start: Int"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let end: Int"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var displayName: String {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return \"between \\(start) and \\(end) month\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(start: Int, end: Int) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.start \u003d max(start, 0) % 12 + 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.end \u003d max(end, 0) % 12 + 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func compare(first: Any?, second: Any?) -\u003e Bool {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard let _ \u003d first as? GameTime,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            let secondTime \u003d second as? GameTime else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        if start \u003e end \u0026\u0026"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            secondTime.month \u003e\u003d start || secondTime.month \u003c\u003d end {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            // wrapped"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        if secondTime.month \u003e\u003d start \u0026\u0026 secondTime.month \u003c\u003d end {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return true"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return false"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 34
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/GameTime/MonthWithinCondition.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  MonthWithinCondition.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class MonthWithinCondition: Evaluate {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let gameTime: GameVariable\u003cGameTime\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let start: Int"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let end: Int"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(gameTime: GameVariable\u003cGameTime\u003e, start: Int, end: Int) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.gameTime \u003d gameTime"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.start \u003d start"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.end \u003d end"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func evaluate() -\u003e Bool {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return gameTime.value.month \u003e\u003d start \u0026\u0026 gameTime.value.month \u003c\u003d end ||"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        start \u003e end \u0026\u0026 (gameTime.value.month \u003e\u003d start || gameTime.value.month \u003c\u003d end)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 24
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/GameTime/MonthWithinTrigger.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  TurnRangeTrigger.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 7/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class MonthWithinTrigger: EventTrigger\u003cGameTime\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(gameTime: GameVariable\u003cGameTime\u003e, start: Int, end: Int) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init(variable: gameTime,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   comparator: MonthWithin(start: start, end: end))"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 14
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/ItemPrice/ItemBuyPriceEvaluatable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  ItemPriceEvaluatable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class ItemBuyPriceEvaluatable: Evaluatable\u003cItemParameter\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let item: GameVariable\u003cItemParameter\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let genericOperator: GenericOperator"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let modifier: Int"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    override var value: ItemParameter {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            guard let newValue \u003d genericOperator.evaluate("
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                first: item.value.getBuyValue(), second: modifier) as? Int else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    return item.value"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            var copy \u003d item.value"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            copy.setBuyValue(value: newValue)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return copy"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            item.value \u003d newValue"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(item: GameVariable\u003cItemParameter\u003e, genericOperator: GenericOperator,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "         modifier: Int) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.genericOperator \u003d genericOperator"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.modifier \u003d modifier"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.item \u003d item"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init(item.value)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 34
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/ItemPrice/ItemPriceEvent.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  FreeTeaEvent.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 4/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class ItemPriceEvent: PresetEvent {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(gameState: GenericGameState, itemType: ItemType,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "         genericOperator: GenericOperator, modifier: Int) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let rawItem \u003d gameState.itemParameters.first {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            $0.value.itemType \u003d\u003d itemType"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard let item \u003d rawItem else {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            fatalError(\"Item not found in item parameters during runtime\")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let evaluatable \u003d ItemBuyPriceEvaluatable("
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            item: item,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            genericOperator: genericOperator,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            modifier: modifier)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init(triggers: [FlipFlopTrigger()],"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   conditions: [],"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   actions: [EventAction\u003cItemParameter\u003e(variable: item, value: evaluatable)],"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   parsable: { return \"\\(itemType.rawValue)\u0027s price has been set to \\(item.value.getBuyValue())\" },"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   displayName: \"Set \\(itemType.rawValue) price \\(genericOperator.displayName) \\(modifier)\")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 30
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/Monsoon/HeavyMonsoonEvent.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  HeavyMonsoonEvent.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 4/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class HeavyMonsoonEvent: PresetEvent {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(gameState: GenericGameState, start: Int, end: Int) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "        var actions: [EventAction\u003cBool\u003e?] \u003d []"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for path in gameState.map.getAllPaths() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            for monsoon in path.modifiers {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                guard let monsoon \u003d monsoon as? VolatileMonsoon else {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    continue"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                actions.append(EventAction\u003cBool\u003e("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    variable: monsoon.isActiveVariable,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    value: ConditionEvaluatable\u003cBool\u003e("
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                        trueValue: Evaluatable\u003cBool\u003e(true),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                        falseValue: Evaluatable\u003cBool\u003e(false),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                        conditions: [MonthWithinCondition(gameTime: gameState.gameTime,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                            start: start, end: end)])))"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // [MonthWithinTrigger(gameTime: gameState.gameTime,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // start: start, end: end)]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init(triggers: [EventTrigger\u003cGameTime\u003e(variable: gameState.gameTime,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                                     comparator: NotEqualOperator\u003cInt\u003e())],"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   conditions: [],"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   actions: actions,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   parsable: { return \"Heavy monsoon!\" },"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   displayName: \"Heavy monsoon!\")"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 1,
      "yuhongherald": 34
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/Monsoon/RegularMonsoonEvent.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  RegularMonsoonEvent.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 4/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "/*"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class RegularMonsoonEvent: TurnSystemEvent {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(gameState: GenericGameState, start: Int, end: Int, speed: Int) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        var actions: [EventAction\u003cBool\u003e] \u003d []"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for path in gameState.map.getAllPaths() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            for monsoon in path.modifiers {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                guard let monsoon \u003d monsoon as? VolatileMonsoon else {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    continue"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                actions.append(EventAction(variable: monsoon.isActiveVariable, value: Evaluatable(false)))"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init(triggers: [MonthWithinTrigger(gameTime: gameState.gameTime,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                                 start: start, end: end)],"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   conditions: [],"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   actions: actions,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   displayName: \"No monsoon!\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "*/"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 28
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/PlayerArrival/HistoryFactAction.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  HistoryFactAction.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 11/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class HistoryFactAction: Modify {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    init() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    func modify() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 17
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/PlayerArrival/PirateAction.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  PirateAction.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by Herald on 11/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "class PirateAction: Modify {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": "    private let player: GenericPlayer"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "    init(player: GenericPlayer, turnSystem: GenericTurnSystem) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.player \u003d player"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    func modify() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 16
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/PlayerArrival/PlayerArrivalEvent.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  PlayerArrivalEvent.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by Herald on 11/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "class PlayerArrivalEvent: PresetEvent {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(player: GenericPlayer) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "        super.init(triggers: [EventTrigger\u003cInt\u003e("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "            variable: player.nodeIdVariable,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "            comparator: NotEqualOperator\u003cInt\u003e())],"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "            conditions: [],"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            actions: [HistoryFactAction()], parsable: { return \"\" },"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            displayName: \"Arrival History Facts Event\")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 15,
      "Jason Chong": 3
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/PlayerDeath/NegativeMoneyEvent.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  RandomLoseMoneyEvent.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 4/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "/// Used to create player death event when money goes below zero."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "/// Sets money to 0, player\u0027s position to home node and empties player inventory."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "/// Note player gets to keep ship upgrades."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class NegativeMoneyEvent: PresetEvent {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(player: GenericPlayer) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "        var actions: [Modify?] \u003d []"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        actions.append(EventAction\u003cInt\u003e(variable: player.money,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                        value: Evaluatable\u003cInt\u003e(0)))"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "        actions.append(EventAction\u003c[GenericItem]\u003e(variable: player.playerShip?.items,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                                  value: Evaluatable\u003c[GenericItem]\u003e([])))"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "        actions.append(EventAction\u003cInt\u003e(variable: player.playerShip?.nodeIdVariable,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                        value: Evaluatable\u003cInt\u003e(player.homeNode)))"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init(triggers: [EventTrigger\u003cInt\u003e(variable: player.money,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                               comparator: GreaterThanOperator\u003cInt\u003e())],"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   conditions: [EventCondition\u003cInt\u003e("
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    first: GameVariableEvaluatable\u003cInt\u003e(variable: player.money),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    second: Evaluatable\u003cInt\u003e(0), change: LessThanOperator\u003cInt\u003e())],"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   actions: actions,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   parsable: { return \"\\(player.name) has lost their ship\u0027s cargo and is sent back to \\(player.homeNode)\" },"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   displayName: \"\\(player.name)\u0027s money below 0\")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 3,
      "Jason Chong": 1,
      "yuhongherald": 26
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/PresetConstants.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  PresetConstants.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "enum PresetConstants {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let monsoonStart: Int \u003d 6"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let monsoonEnd: Int \u003d 9"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    // get the operands from 0.operands"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let taxModifiers: [Int] \u003d [1000, 1000, 2, 2]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let priceModifers: [Int] \u003d [100, 100, 2, 2]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    // modifier array: +100, -100, *2 , /2"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 16
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/PresetEvent.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  PresetEvent.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 11/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class PresetEvent: TurnSystemEvent, Activatable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private var activeVariable: GameVariable\u003cBool\u003e \u003d GameVariable\u003cBool\u003e(value: false)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var active: Bool {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return activeVariable.value"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            activeVariable.value \u003d newValue"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            for trigger in triggers where trigger is FlipFlopTrigger {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                guard let trigger \u003d trigger as? FlipFlopTrigger else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    continue"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                trigger.triggered \u003d newValue"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "    override init(triggers: [Trigger], conditions: [Evaluate], actions: [Modify?], parsable: @escaping () -\u003e String, displayName: String) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        var newConditions: [Evaluate] \u003d conditions"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        newConditions.append(EventCondition\u003cBool\u003e(first: VariableEvaluatable\u003cBool\u003e(activeVariable),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                                  second: Evaluatable\u003cBool\u003e(true),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                                  change: EqualOperator\u003cBool\u003e()))"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init(triggers: triggers, conditions: conditions, actions: actions, parsable: parsable, displayName: displayName)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 1,
      "Jason Chong": 1,
      "yuhongherald": 31
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/Taxes/TaxChangeEvent.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  NoTaxes.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 4/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class TaxChangeEvent: PresetEvent {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(gameState: GenericGameState, genericOperator: GenericOperator, modifier: Int) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let modifier \u003d max(1, modifier)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "        var actions: [EventAction\u003cInt\u003e?] \u003d []"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for port in gameState.map.getNodes() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            guard let port \u003d port as? Port, port.owner \u003d\u003d nil else {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            actions.append(EventAction\u003cInt\u003e(variable: port.taxAmount,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                            value: BAEEvaluatable("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                                first: VariableEvaluatable(port.taxAmount),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                                second: Evaluatable(modifier),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                                evaluator: genericOperator,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                                defaultValue: 0)))"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init(triggers: [FlipFlopTrigger()],"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   conditions: [],"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   actions: actions,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   parsable: { return \"Neutral port taxes have been changed\" },"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   displayName: \"Set neutral port taxes by \\(genericOperator.displayName) \\(modifier)\")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 1,
      "yuhongherald": 29
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/TurnSystemEvent.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  UniqueTurnSystemEvent.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "// The base class for turn system events with manual-generated ids"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class TurnSystemEvent: Unique, Printable {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var identifier: Int \u003d -1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let displayName: String"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let triggers: [Trigger]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let conditions: [Evaluate]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let actions: [Modify]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let parsable: () -\u003e String"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(triggers: [Trigger], conditions: [Evaluate],"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "         actions: [Modify?], parsable: @escaping () -\u003e String, displayName: String) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.triggers \u003d triggers"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.conditions \u003d conditions"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.actions \u003d actions.compactMap({ $0 })"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.parsable \u003d parsable"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.displayName \u003d displayName"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func evaluateEvent() -\u003e GameMessage? {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        if !hasTriggered() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        executeWithConditions()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        resetTrigger()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // TODO: Write a message parser, require on construction"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return GameMessage.event(name: displayName, message: parsable())"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private func hasTriggered() -\u003e Bool {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for trigger in triggers {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            if trigger.hasTriggered() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                return true"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return false"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private func executeWithConditions() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for condition in conditions {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            if !condition.evaluate() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                return"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for action in actions {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            action.modify()"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private func resetTrigger() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for trigger in triggers {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            trigger.resetTrigger()"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 2,
      "Jason Chong": 2,
      "yuhongherald": 62
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/UniqueTurnSystemEvent.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  UniqueTurnSystemEvent.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 11/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class UniqueTurnSystemEvent: TurnSystemEvent, Hashable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    override var identifier: Int {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return _identifier"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            // discard"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func \u003d\u003d (lhs: UniqueTurnSystemEvent, rhs: UniqueTurnSystemEvent) -\u003e Bool {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return lhs.identifier \u003d\u003d rhs.identifier"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private static func getIdentifier() -\u003e Int {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        var identifier: Int \u003d 0 // dummy value"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        queue.sync {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            while identifiers.contains(nextID) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                nextID +\u003d 1 // naive implementation"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            identifiers.insert(nextID)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            identifier \u003d nextID"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            nextID +\u003d 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return identifier"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private static var nextID: Int \u003d 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private static var identifiers \u003d Set\u003cInt\u003e()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private static let queue \u003d DispatchQueue(label: \"UniqueTurnSystemEventQueue\","
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                             attributes: .concurrent)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let _identifier: Int"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    override init(triggers: [Trigger], conditions: [Evaluate],"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "                  actions: [Modify?], parsable: @escaping () -\u003e String, displayName: String) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self._identifier \u003d UniqueTurnSystemEvent.getIdentifier()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init(triggers: triggers, conditions: conditions,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   actions: actions, parsable: parsable, displayName: displayName)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func hash(into hasher: inout Hasher) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        hasher.combine(identifier)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    deinit {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let identifier \u003d self.identifier"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        UniqueTurnSystemEvent.queue.async(flags: .barrier) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            UniqueTurnSystemEvent.identifiers.remove(identifier)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 1,
      "yuhongherald": 60
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/VariableEvaluatable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  VariableEvaluatable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 3/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class VariableEvaluatable\u003cT\u003e: Evaluatable\u003cT\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private var variable: GameVariable\u003cT\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    override var value: T {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return variable.value"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            variable.value \u003d newValue"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(_ variable: GameVariable\u003cT\u003e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.variable \u003d variable"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init(variable.value) // dummy value"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 23
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/GameMessage/GameMessage.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GameMessage.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 11/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "enum GameMessage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    case playerAction(name: String, message: String)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    case event(name: String, message: String)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 12
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/GameMessage/Parsable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Parsable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 11/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol Parsable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func parse() -\u003e String"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 11
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/GenericTurnSystem.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GenericTurnSystem.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol GenericTurnSystem {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var gameState: GenericGameState { get }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "    var eventPresets: EventPresets? { get set }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var messages: [GameMessage] { get set }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func roll(for player: GenericPlayer) throws -\u003e (Int, [Int])"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func selectForMovement(nodeId: Int, by player: GenericPlayer) throws"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func setTax(for portId: Int, to amount: Int, by player: GenericPlayer) throws"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    func buy(itemType: ItemType, quantity: Int, by player: GenericPlayer) throws"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    func sell(itemType: ItemType, quantity: Int, by player: GenericPlayer) throws"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func purchase(upgrade: Upgrade, by player: GenericPlayer) throws -\u003e InfoMessage?"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func watchMasterUpdate(gameState: GenericGameState)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func endTurn()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func endTurnCallback(action: @escaping () -\u003e Void)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToState(with callback: @escaping (TurnSystem.State) -\u003e Void)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func startGame()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func acknoledgeTurnStart()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 3,
      "Jason Chong": 8,
      "yuhongherald": 14
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/GenericTurnSystemState.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GenericTurnSystemState.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol GenericTurnSystemState {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var currentTurn: Int { get }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var gameState: GenericGameState { get }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var currentPlayerIndex: Int { get set }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var triggeredEvents: [TurnSystemEvent] { get }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func addEvents(events: [TurnSystemEvent]) -\u003e Bool"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func removeEvents(events: [TurnSystemEvent]) -\u003e Bool"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func setEvents(events: [TurnSystemEvent]) -\u003e Bool"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func checkForEvents() -\u003e [GameMessage]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func turnFinished()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func processed(action: PlayerAction, from player: GenericPlayer)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 4,
      "yuhongherald": 19
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Network/GenericNetworkAdapter.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GenericNetworkAdapter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol GenericNetworkAdapter {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func create() -\u003e GenericNetworkSession"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func delete(session: GenericNetworkSession)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func join(sessionID: String)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func subscribe() // TODO: Write the protocol/class for arg"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func update()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 15
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Network/GenericNetworkSession.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GenericNetworkSession.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol GenericNetworkSession {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var ownerIdentifier: String { get }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var selfIdentifier: String { get }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var data: Int { get } // TODO: Write proper data class/protocol"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 13
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Network/NetworkAdapter.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  NetworkAdapter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "/*"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class NetworkAdapter: GenericNetworkAdapter {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func create() -\u003e GenericNetworkSession {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        \u003c#code#\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func delete(session: GenericNetworkSession) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        \u003c#code#\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func join(sessionID: String) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        \u003c#code#\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func subscribe() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        \u003c#code#\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func update() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        \u003c#code#\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "*/"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 31
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/NetworkInfo.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  NetworkInfo.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 8/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class NetworkInfo {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private var callbacks: [() -\u003e Void] \u003d []"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private var stateVariable: GameVariable\u003cState\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private var isBlocking \u003d false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let isMaster: Bool"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let deviceId: String"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private var pendingActions \u003d [PlayerAction]()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let networkActionQueue \u003d DispatchQueue(label: \"com.CS3217.networkActionQueue\")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let network: RoomConnection"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private var players \u003d [RoomMember]() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 26
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Old/BaseGameObject.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  ObservableGameObject.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "// gameobjects should all inherit from this"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "protocol BaseGameObject {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var fields: [String] { get }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getField(field: String) -\u003e Any?"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func setField(field: String, object: Any?) -\u003e Bool"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 4,
      "yuhongherald": 10
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Old/DiceData.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  DiceData.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 31/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//class DiceData: UniqueObject, BaseGameObject {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    enum DiceType {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        case uniform"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var operators: [GenericOperator] \u003d []"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var evaluators: [GenericEvaluateOperator] \u003d []"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var displayName: String"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var events: [Int : Observer] \u003d [Int: Observer]()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var objects: [String : Any?] \u003d [String: Any?]()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var fields: [String] \u003d ["
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        \"dice type\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        \"current roll\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        \"max roll\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    ]"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    init(displayName: String, diceType: DiceType, maxRoll: Int) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        self.displayName \u003d displayName"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        super.init()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        _ \u003d setField(field: fields[0], object: diceType)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        _ \u003d setField(field: fields[1], object: 0)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        _ \u003d setField(field: fields[2], object: maxRoll)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    func setField(field: String, object: Any?) -\u003e Bool {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        switch field {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        case fields[0]:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            guard let _ \u003d object as? DiceType else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//                return false"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        case fields[1]:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            guard let _ \u003d object as? Int else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//                return false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        case fields[2]:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            guard let _ \u003d object as? Int else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//                return false"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            return false"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        objects[field] \u003d object"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        return true"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 54
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Old/EdgeData.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  EdgeADT.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 31/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//class EdgeData: UniqueObject, BaseGameObject {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var operators: [GenericOperator] \u003d []"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var evaluators: [GenericEvaluateOperator] \u003d []"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var displayName: String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var events: [Int : Observer] \u003d [Int: Observer]()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var objects: [String : Any?] \u003d [String: Any?]()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var fields: [String] \u003d ["
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        \"From\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        \"To\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    ]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    init(displayName: String, from: NodeData, to: NodeData) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        self.displayName \u003d displayName"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        super.init()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        _ \u003d setField(field: fields[0], object: from)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        _ \u003d setField(field: fields[1], object: to)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        from.getField(field: from.fields[0]) as? [NodeData]"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    func setField(field: String, object: Any?) -\u003e Bool {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        switch field {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        case fields[0]:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            guard let _ \u003d object as? NodeData else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//                return false"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        case fields[1]:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            guard let _ \u003d object as? NodeData else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//                return false"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        default:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            return false"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        objects[field] \u003d object"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        return true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 46
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Old/GameData.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GameData.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 30/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//class GameData: UniqueObject, BaseGameObject {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var operators: [GenericOperator] \u003d []"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var evaluators: [GenericEvaluateOperator] \u003d []"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var displayName: String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var events: [Int : Observer] \u003d [Int: Observer]()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var objects: [String : Any?] \u003d [String: Any?]()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var fields: [String] \u003d ["
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    \"Players\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    \"Map\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    ]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    init(displayName: String, players: [Player], map: MapData) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        self.displayName \u003d displayName"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        super.init()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        setField(field: fields[0], object: players)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        setField(field: fields[1], object: map)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 27
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Old/InventoryData.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  InventoryData.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 31/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//class InventoryData: UniqueObject, BaseGameObject {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var operators: [GenericOperator] \u003d []"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var evaluators: [GenericEvaluateOperator] \u003d []"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var displayName: String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var events: [Int : Observer] \u003d [Int: Observer]()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var objects: [String : Any?] \u003d [String: Any?]()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var fields: [String] \u003d ["
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        \"Capacity\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        \"Opium\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        // add other item support here"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        // TODO: Current items have no weight. Introduce weights using item table"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    ]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    init(displayName: String, capacity: Int) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        self.displayName \u003d displayName"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        super.init()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        _ \u003d setField(field: fields[0], object: capacity)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    func setField(field: String, object: Any?) -\u003e Bool {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        switch field {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        case fields[0]:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            guard let _ \u003d object as? Int else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//                return false"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        case fields[1]:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            guard let _ \u003d object as? Int else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//                return false"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        default:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            return false"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        objects[field] \u003d object"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        return true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 46
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Old/ItemBuySellCache.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  ItemBuySellCache.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 3/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "/*"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "struct ItemBuySellCache {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let buyTable: [ItemType: Int]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let sellTable: [ItemType: Int]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let name: String"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let money: Int"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let inventory: [ItemType: Int]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(player: GenericPlayer) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // get port"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        //player."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        name \u003d player.name"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        money \u003d player.money.value"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // get inventory"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        //inventory \u003d player.item"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func buyOrSell(item: ItemType, amount: Int) throws {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "*/"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 31
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Old/MapData.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  MapData.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 30/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//class MapData: UniqueObject, BaseGameObject {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var operators: [GenericOperator] \u003d []"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var evaluators: [GenericEvaluateOperator] \u003d []"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var displayName: String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var events: [Int : Observer] \u003d [Int: Observer]()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var objects: [String : Any?] \u003d [String: Any?]()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var fields: [String] \u003d ["
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        \"Nodes\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        \"Edges\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        // TODO: Getting from an array seems to be a big problem, performance hit."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        // Enumerate ints"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    ]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    init(displayName: String) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        self.displayName \u003d displayName"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        super.init()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        _ \u003d setField(field: fields[0], object: [NodeData]())"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        _ \u003d setField(field: fields[1], object: [EdgeData]())"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 30
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Old/NodeData.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  NodeData.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 31/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//class NodeData: UniqueObject, BaseGameObject {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var operators: [GenericOperator] \u003d []"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var evaluators: [GenericEvaluateOperator] \u003d []"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var displayName: String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var events: [Int : Observer] \u003d [Int: Observer]()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var objects: [String : Any?] \u003d [String: Any?]()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var fields: [String] \u003d ["
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        \"Neighbors\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    ]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    init(displayName: String) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        self.displayName \u003d displayName"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        super.init()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        _ \u003d setField(field: fields[0], object: [NodeData]())"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    func setField(field: String, object: Any?) -\u003e Bool {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        return false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 29
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Old/PlayerData.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  PlayerData.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 30/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//class PlayerData: UniqueObject, BaseGameObject {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var operators: [GenericOperator] \u003d []"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var evaluators: [GenericEvaluateOperator] \u003d []"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var displayName: String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var events: [Int : Observer] \u003d [Int: Observer]()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var objects: [String : Any?] \u003d [String: Any?]()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var fields: [String] \u003d ["
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        \"Dice\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        \"Ship\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        \"Money\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        //\"Alignment\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    ]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    init(displayName: String, dice: DiceData, ship: ShipData, money: Int) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        self.displayName \u003d displayName"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        super.init()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 27
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Old/ShipData.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  ShipData.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 31/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//class ShipData: UniqueObject, BaseGameObject {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var operators: [GenericOperator] \u003d []"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var evaluators: [GenericEvaluateOperator] \u003d []"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var displayName: String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var events: [Int : Observer] \u003d [Int: Observer]()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var objects: [String : Any?] \u003d [String: Any?]()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var fields: [String] \u003d ["
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        \"Inventory\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        \"Location\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    ]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    init(displayName: String, inventory: InventoryData, location: NodeData) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        self.displayName \u003d displayName"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        super.init()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        _ \u003d setField(field: fields[0], object: inventory)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        _ \u003d setField(field: fields[1], object: location)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    func setField(field: String, object: Any?) -\u003e Bool {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        switch field {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        case fields[0]:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            guard let _ \u003d object as? InventoryData else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//                return false"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        case fields[1]:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            guard let _ \u003d object as? NodeData else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//                return false"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        default:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            return false"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        objects[field] \u003d object"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        return true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 45
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Old/WeakBox.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Weakbox.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "final class WeakBox\u003cA: AnyObject\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    weak var unbox: A?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(_ value: A?) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        unbox \u003d value"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 14
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/PlayerActions/ChangeType.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  ChangeType.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "enum ChangeType: String, Codable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    case add"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    case remove"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    case set"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 1,
      "yuhongherald": 12
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/PlayerActions/PlayerAction.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  PlayerAction.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "enum PlayerAction: Codable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let container \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let type \u003d try container.decode(Identifier.self, forKey: .type)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        switch type {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .move:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let node \u003d try container.decode(Int.self, forKey: .nodeId)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let isEnd \u003d try container.decode(Bool.self, forKey: .isEnd)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self \u003d .move(toNodeId: node, isEnd: isEnd)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .forceMove:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let node \u003d try container.decode(Int.self, forKey: .nodeId)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self \u003d .forceMove(toNodeId: node)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .setTax:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let port \u003d try container.decode(Int.self, forKey: .nodeId)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let taxAmount \u003d try container.decode(Int.self, forKey: .taxAmount)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self \u003d .setTax(forPortId: port, taxAmount: taxAmount)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .buyOrSell:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let itemType \u003d try container.decode(ItemType.self, forKey: .itemType)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let quantity \u003d try container.decode(Int.self, forKey: .quantity)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self \u003d .buyOrSell(itemType: itemType, quantity: quantity)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .purchaseUpgrade:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let type \u003d try container.decode(UpgradeType.self, forKey: .itemType)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self \u003d .purchaseUpgrade(type: type)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .pirate:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self \u003d .pirate"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        switch self {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .move(let node, let isEnd):"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try container.encode(Identifier.move, forKey: .type)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try container.encode(node, forKey: .nodeId)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try container.encode(isEnd, forKey: .isEnd)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .forceMove(let node):"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try container.encode(Identifier.forceMove, forKey: .type)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try container.encode(node, forKey: .nodeId)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .setTax(let port, let taxAmount):"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try container.encode(Identifier.setTax, forKey: .type)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try container.encode(port, forKey: .nodeId)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try container.encode(taxAmount, forKey: .taxAmount)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .buyOrSell(let itemType, let quantity):"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try container.encode(Identifier.buyOrSell, forKey: .type)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try container.encode(itemType, forKey: .itemType)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try container.encode(quantity, forKey: .quantity)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .purchaseUpgrade(let upgradeType):"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try container.encode(Identifier.purchaseUpgrade, forKey: .type)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try container.encode(upgradeType, forKey: .upgrade)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .pirate:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try container.encode(Identifier.pirate, forKey: .type)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": "            break"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case buyOrSell(itemType: ItemType, quantity: Int)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case move(toNodeId: Int, isEnd: Bool)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case forceMove(toNodeId: Int)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case purchaseUpgrade(type: UpgradeType)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case setTax(forPortId: Int, taxAmount: Int)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case pirate"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    //case setEvent(changeType: ChangeType, events: [TurnSystemEvent])"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private enum Identifier: String, Codable {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case buyOrSell"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case move"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case forceMove"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case setTax"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case purchaseUpgrade"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "henry"
        },
        "content": "        case pirate"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        //case setEvent"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case type"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case nodeId"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case isEnd"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case itemType"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case taxAmount"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case quantity"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case upgrade"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 4,
      "Jason Chong": 77,
      "yuhongherald": 10
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/PlayerActions/PlayerActionBatch.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  PlayerActionBatch.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 4/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "struct PlayerActionBatch: Codable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let playerName: String"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let actions: [PlayerAction]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 12
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/PlayerActions/PlayerActionError.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  PlayerActionError.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 2/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "enum PlayerActionError: Error {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    case invalidAction(message: String)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    case wrongPhase(message: String)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func getMessage() -\u003e String {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        switch self {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .invalidAction(message: let message):"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return message"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .wrongPhase(message: let message):"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return message"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 21
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Supporting Classes/TurnRangeTrigger.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  TurnRangeTrigger.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 7/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class MonthChangeTrigger: EventTrigger\u003cGameTime\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(gameState: GenericGameState, monthStart: Int, monthEnd: Int) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init(variable: gameState.gameTime,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   comparator: GameTimeWithin(start: monthStart, end: monthEnd))"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 14
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Supporting Classes/VolatileMonsoon.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  VolatileMonsoon.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 8/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "// extend this class to create various monsoon behaviors, eg blow left/right"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class VolatileMonsoon: Volatile {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var isActiveVariable: GameVariable\u003cBool\u003e \u003d GameVariable(value: false)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    override var isActive: Bool {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return isActiveVariable.value"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            isActiveVariable.value \u003d newValue"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func applyVelocityModifier(to oldVelocity: Float, with modifier: Float) -\u003e Float {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return oldVelocity * modifier * Float(GameConstants.monsoonMultiplier)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 23
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/TurnSystem.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  File.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class TurnSystem: GenericTurnSystem {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    enum State {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case ready"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case waitPlayerInput(from: GenericPlayer)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case playerInput(from: GenericPlayer, endTime: TimeInterval)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case waitForTurnFinish"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case evaluateMoves(for: GenericPlayer)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case waitForStateUpdate"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case invalid"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var state: State {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return stateVariable.value"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            stateVariable.value \u003d newValue"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    // TODO: Move this into new class"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var callbacks: [() -\u003e Void] \u003d []"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var stateVariable: GameVariable\u003cState\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let isMaster: Bool"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let deviceId: String"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var pendingActions \u003d [PlayerAction]()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let networkActionQueue \u003d DispatchQueue(label: \"com.CS3217.networkActionQueue\")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var setTaxActions \u003d [Int: (PlayerAction, GenericPlayer, Bool)]()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let network: RoomConnection"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var players \u003d [RoomMember]() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    // for events"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var eventPresets: EventPresets?"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var messages: [GameMessage] \u003d []"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var data: GenericTurnSystemState"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var gameState: GenericGameState {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return data.gameState"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var currentPlayer: GenericPlayer? {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        switch state {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .playerInput(let player, _):"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return player"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .waitPlayerInput(let player):"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return player"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(isMaster: Bool, network: RoomConnection, startingState: GenericGameState, deviceId: String) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.deviceId \u003d deviceId"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.network \u003d network"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.isMaster \u003d isMaster"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.data \u003d TurnSystemState(gameState: startingState, joinOnTurn: 0)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        // TODO: Turn harcoded"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.stateVariable \u003d GameVariable(value: .ready)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.eventPresets \u003d EventPresets(gameState: startingState, turnSystem: self)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if let eventPresets \u003d self.eventPresets {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.data.addEvents(events: eventPresets.getEvents())"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        network.subscribeToMembers { [weak self] members in"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.players \u003d members"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func startGame() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let player \u003d getFirstPlayer() else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            state \u003d .waitForTurnFinish"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        state \u003d .waitPlayerInput(from: player)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    // for testing"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getState() -\u003e TurnSystem.State {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return state"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    // MARK: - Player actions"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func roll(for player: GenericPlayer) throws -\u003e (Int, [Int]) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        try checkInputAllowed(from: player)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if player.hasRolled {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            throw PlayerActionError.invalidAction(message: \"Player has already rolled!\")"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return player.roll()"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func selectForMovement(nodeId: Int, by player: GenericPlayer) throws {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        try checkInputAllowed(from: player)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if !player.hasRolled {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            throw PlayerActionError.invalidAction(message: \"Player has not rolled!\")"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if !player.roll().1.contains(nodeId) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            throw PlayerActionError.invalidAction(message: \"Node is out of range!\")"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if nodeId \u003d\u003d player.node?.identifier {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var path \u003d player.getPath(to: nodeId)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        path.removeFirst()"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for (index, transitNode) in path.enumerated() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            pendingActions.append(.move(toNodeId: transitNode,"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                        isEnd: index \u003d\u003d path.indices.last))"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if isSuccess(probability: player.getPirateEncounterChance()) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            pendingActions.append(.pirate)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func setTax(for portId: Int, to amount: Int, by player: GenericPlayer) throws {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        try checkInputAllowed(from: player)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let port \u003d gameState.map.nodeIDPair[portId] as? Port else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            throw PlayerActionError.invalidAction(message: \"Port does not exist\")"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard player.team \u003d\u003d port.owner else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            throw PlayerActionError.invalidAction(message: \"Player does not own port!\")"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        pendingActions.append(.setTax(forPortId: portId, taxAmount: amount))"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func buy(itemType: ItemType, quantity: Int, by player: GenericPlayer) throws {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        try checkInputAllowed(from: player)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard quantity \u003e 0 else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            throw PlayerActionError.invalidAction(message: \"Bought quantity must be more than 0.\")"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if quantity \u003e\u003d 0 {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try player.buy(itemType: itemType, quantity: quantity)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            pendingActions.append(.buyOrSell(itemType: itemType, quantity: quantity))"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func sell(itemType: ItemType, quantity: Int, by player: GenericPlayer) throws {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        try checkInputAllowed(from: player)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard quantity \u003e 0 else {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            throw PlayerActionError.invalidAction(message: \"Sold quantity must be more than 0.\")"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if quantity \u003e\u003d 0 {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            do {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                try player.sell(itemType: itemType, quantity: quantity)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            } catch let error as BuyItemError {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                throw PlayerActionError.invalidAction(message: error.getMessage())"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            pendingActions.append(.buyOrSell(itemType: itemType, quantity: -quantity))"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func purchase(upgrade: Upgrade, by player: GenericPlayer) throws -\u003e InfoMessage? {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        try checkInputAllowed(from: player)"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if !player.canBuyUpgrade() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            throw PlayerActionError.invalidAction(message: \"Not allowed to buy upgrades now.\")"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let (success, msg) \u003d player.buyUpgrade(upgrade: upgrade)"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if success {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            pendingActions.append(.purchaseUpgrade(type: upgrade.type))"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return msg"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func checkInputAllowed(from player: GenericPlayer) throws {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        switch state {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .playerInput(let curPlayer, _):"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if player !\u003d curPlayer {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                throw PlayerActionError.wrongPhase(message: \"Please wait for your turn\")"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            throw PlayerActionError.wrongPhase(message: \"Aaction called on wrong phase\")"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func playerMove(_ player: GenericPlayer, _ nodeId: Int, isEnd: Bool) -\u003e GameMessage? {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let ship \u003d player.playerShip else {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let previous \u003d ship.node.name"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        player.move(nodeId: nodeId)"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if !isEnd {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let current \u003d ship.node.name"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return GameMessage.playerAction(name: player.name,"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                        message: \" has moved from \\(previous) to \\(current)\")"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Throws if action is invalid"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// For server actions only"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func process(action: PlayerAction, for player: GenericPlayer) throws -\u003e GameMessage? {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        switch state {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .evaluateMoves(for: let currentPlayer):"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if player !\u003d currentPlayer {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                throw PlayerActionError.wrongPhase(message: \"Evaluate move on wrong player!\")"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            throw PlayerActionError.wrongPhase(message: \"Make action called on wrong phase\")"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        switch action {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .move(let nodeId, let isEnd):"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return playerMove(player, nodeId, isEnd: isEnd)"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .forceMove(let nodeId): // quick hack for updating the player\u0027s position remotely"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return playerMove(player, nodeId, isEnd: true)"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        // some stuff with a sequence"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        // for node in nodes (Doesn\u0027t check adjacency)"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        // player.move(node: node)"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .setTax(let portId, _):"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let port \u003d gameState.map.nodeIDPair[portId] as? Port else {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                throw PlayerActionError.invalidAction(message: \"Port does not exist.\")"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if setTaxActions[portId] !\u003d nil {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                setTaxActions[portId] \u003d (action, player, false)"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                setTaxActions[portId] \u003d (action, player, true)"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return .playerAction(name: player.name, message: \"Instructed \\(port.name) to change tax.\")"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .buyOrSell(let itemType, let quantity):"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let message \u003d GameMessage.playerAction("
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                name: player.name,"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                message: \" has \\(quantity \u003e 0 ? \"purchased\": \"sold\") \\(quantity) \\(itemType.rawValue)\")"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if player.deviceId \u003d\u003d deviceId {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return message"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            do {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                if quantity \u003e\u003d 0 {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    try player.buy(itemType: itemType, quantity: quantity)"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    try player.sell(itemType: itemType, quantity: -quantity)"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            } catch let error as BuyItemError {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                throw PlayerActionError.invalidAction(message: error.getMessage())"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return message"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .purchaseUpgrade(let upgradeType):"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if player.deviceId \u003d\u003d deviceId {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return GameMessage.playerAction(name: player.name, message: \"You moved\")"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            _ \u003d player.buyUpgrade(upgrade: upgradeType.toUpgrade())"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return GameMessage.playerAction(name: player.name,"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                            message: \" has purchased the \\(upgradeType.toUpgrade().name)!\")"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .pirate:"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            player.playerShip?.startPirateChase()"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return GameMessage.playerAction(name: player.name, message: \" is chased by pirates!\")"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func handleSetTax() {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for (action, player, success) in setTaxActions.values {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            switch action {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            case .setTax(let portId, let taxAmount):"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let port \u003d gameState.map.nodeIDPair[portId] as? Port else {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard player.team \u003d\u003d port.owner else {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard success else {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    self.messages.append(GameMessage.playerAction(name: \"\", message: \"Failed to change tax for \\(port.name) due to conflicting instructions.\"))"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let previous \u003d port.taxAmount.value"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                port.taxAmount.value \u003d taxAmount"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.messages.append(GameMessage.playerAction("
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    name: player.name,"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    message: \" has set the tax for \\(port.name) from \\(previous) to \\(taxAmount)\"))"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        setTaxActions \u003d Dictionary()"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func setEvents(changeType: ChangeType, events: [TurnSystemEvent]) -\u003e Bool {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        switch changeType {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .add:"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return data.addEvents(events: events)"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .remove:"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return data.removeEvents(events: events)"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .set:"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return data.setEvents(events: events)"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func watchMasterUpdate(gameState: GenericGameState) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        switch state {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .waitForStateUpdate:"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            break"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        startGame()"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func endTurn() {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if let currentPlayer \u003d currentPlayer {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            /// TODO: Add error handling. If it throws, then encoding has failed."
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            do {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                try network.push(actions: pendingActions, fromPlayer: currentPlayer, forTurnNumbered: data.currentTurn) { _ in"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    /// TODO: Add error handling"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            } catch {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                print(error)"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            pendingActions \u003d []"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for callback in callbacks {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            callback()"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let player \u003d getNextPlayer() else {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            state \u003d .waitForTurnFinish"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let currentTurn \u003d data.currentTurn"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            network.subscribeToActions(for: currentTurn) { [weak self] actionPair, error in"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                if let _ \u003d error {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    /// TODO: Error handling"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self?.processTurnActions(forTurnNumber: currentTurn, playerActionPairs: actionPair)"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        state \u003d .waitPlayerInput(from: player)"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    // Unused"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func endTurnCallback(action: @escaping () -\u003e Void) {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        callbacks.append(action)"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getNextPlayer() -\u003e GenericPlayer? {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let players \u003d gameState.getPlayers()"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .filter { [weak self] in $0.deviceId \u003d\u003d self?.deviceId }"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let currentPlayer \u003d currentPlayer,"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let currentIndex \u003d players.firstIndex(where: { $0 \u003d\u003d currentPlayer }) else {"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return players.first"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let nextIndex \u003d currentIndex + 1"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if !players.indices.contains(nextIndex) {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return players[nextIndex]"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func getFirstPlayer() -\u003e GenericPlayer? {"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return gameState.getPlayers()"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .filter { [weak self] in $0.deviceId \u003d\u003d self?.deviceId }"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .first"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToState(with callback: @escaping (State) -\u003e Void) {"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        stateVariable.subscribe(with: callback)"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func acknoledgeTurnStart() {"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let player \u003d currentPlayer else {"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        startPlayerInput(from: player)"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func evaluateState(player: GenericPlayer, actions: [PlayerAction])"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        -\u003e [GameMessage] {"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var actions \u003d actions"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        state \u003d .evaluateMoves(for: player)"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var result \u003d [GameMessage]()"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        while !actions.isEmpty {"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            do {"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                if let message \u003d try process(action: actions.removeFirst(), for: player) {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    result.append(message)"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            } catch {"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                print(\"Invalid action from server, dropping action\")"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func updateStateMaster() {"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        state \u003d .waitForStateUpdate"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if isMaster {"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            // TODO: Change the typecast"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let gameState \u003d gameState as? GameState else {"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            do {"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                try network.push(currentState: gameState, forTurn: data.currentTurn) {"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    guard let error \u003d $0 else {"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        return"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    print(error.localizedDescription)"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            } catch let error {"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                print(error.localizedDescription)"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        /// The game state parameter is ignored for now, validation can be added here"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        network.subscribeToMasterState(for: data.currentTurn) { [weak self] _ in"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.data.turnFinished()"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let player \u003d self?.getFirstPlayer() else {"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self?.state \u003d .waitForTurnFinish"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.state \u003d .waitPlayerInput(from: player)"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func waitTurnFinish() {"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func isSuccess(probability: Double) -\u003e Bool {"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return Double(arc4random()) / Double(UINT32_MAX) \u003c probability"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func processTurnActions(forTurnNumber turnNum: Int, playerActionPairs: [(String, [PlayerAction])]) {"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        networkActionQueue.sync { [weak self] in"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let self \u003d self else {"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            switch self.state {"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            case .waitForTurnFinish:"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                break"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if self.data.currentTurn !\u003d turnNum {"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let eventResults \u003d data.checkForEvents() // events will run here, non-recursive"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.messages.append(contentsOf: eventResults)"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            for player in self.gameState.getPlayers() where"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                playerActionPairs.first(where: { $0.0 \u003d\u003d player.name }) \u003d\u003d nil {"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            for playerActionPair in playerActionPairs {"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let chosenPlayer \u003d"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    self.gameState.getPlayers().first(where: { $0.name \u003d\u003d playerActionPair.0 }) else {"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        continue"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                }"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let playerActions \u003d self.evaluateState(player: chosenPlayer, actions: playerActionPair.1)"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.messages.append(contentsOf: playerActions)"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                for infoMessage in chosenPlayer.endTurn() {"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    self.messages.append(GameMessage.playerAction(name: chosenPlayer.name,"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                                  message: infoMessage.message))"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            handleSetTax()"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            updateStateMaster()"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func startPlayerInput(from player: GenericPlayer) {"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let endTime \u003d Date().timeIntervalSince1970 + GameConstants.playerTurnDuration"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let turnNum \u003d data.currentTurn"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        DispatchQueue.global().asyncAfter(deadline: .now() + GameConstants.playerTurnDuration) { [weak self] in"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if player \u003d\u003d self?.currentPlayer \u0026\u0026 self?.data.currentTurn \u003d\u003d turnNum {"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self?.endTurn()"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.state \u003d .playerInput(from: player, endTime: endTime)"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 475,
      "yuhongherald": 15
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/TurnSystemController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  TurnSystemController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 8/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class TurnSystemController {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func roll(for player: GenericPlayer) throws -\u003e (Int, [Int]) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        try checkInputAllowed(from: player)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        if player.hasRolled {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            throw PlayerActionError.invalidAction(message: \"Player has already rolled!\")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return player.roll()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func selectForMovement(nodeId: Int, by player: GenericPlayer) throws {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        try checkInputAllowed(from: player)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        if !player.hasRolled {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            throw PlayerActionError.invalidAction(message: \"Player has not rolled!\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        if !player.roll().1.contains(nodeId) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            throw PlayerActionError.invalidAction(message: \"Node is out of range!\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        var path \u003d player.getPath(to: nodeId)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        path.removeFirst()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for transitNode in path {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            pendingActions.append(.move(toNodeId: transitNode))"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        pendingActions.append(.move(toNodeId: nodeId))"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func setTax(for portId: Int, to amount: Int, by player: GenericPlayer) throws {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        try checkInputAllowed(from: player)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard let port \u003d gameState.map.nodeIDPair[portId] as? Port else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            throw PlayerActionError.invalidAction(message: \"Port does not exist\")"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard player.team \u003d\u003d port.owner else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            throw PlayerActionError.invalidAction(message: \"Player does not own port!\")"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        pendingActions.append(.setTax(forPortId: portId, taxAmount: amount))"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func buy(itemType: ItemType, quantity: Int, by player: GenericPlayer) throws {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        try checkInputAllowed(from: player)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard quantity \u003e 0 else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            throw PlayerActionError.invalidAction(message: \"Bought quantity must be more than 0.\")"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        if quantity \u003e\u003d 0 {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            try player.buy(itemType: itemType, quantity: quantity)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            pendingActions.append(.buyOrSell(itemType: itemType, quantity: quantity))"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func sell(itemType: ItemType, quantity: Int, by player: GenericPlayer) throws {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        try checkInputAllowed(from: player)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard quantity \u003e 0 else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            throw PlayerActionError.invalidAction(message: \"Sold quantity must be more than 0.\")"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        if quantity \u003e\u003d 0 {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            do {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                try player.sell(itemType: itemType, quantity: quantity)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            } catch let error as BuyItemError {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                throw PlayerActionError.invalidAction(message: error.getMessage())"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            pendingActions.append(.buyOrSell(itemType: itemType, quantity: -quantity))"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 75
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/TurnSystemState.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  TurnSystemState.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "// A class used to hold the state of the turn based game"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class TurnSystemState: GenericTurnSystemState {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private var events: [Int: TurnSystemEvent] \u003d [Int: TurnSystemEvent]()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var actionHistory \u003d [(player: GenericPlayer, action: PlayerAction)]()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let gameState: GenericGameState"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var currentPlayerIndex \u003d 0"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var currentTurn: Int"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(gameState: GenericGameState, joinOnTurn: Int) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.gameState \u003d gameState"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.currentTurn \u003d joinOnTurn"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private var triggeredEventsDict: [Int: TurnSystemEvent] \u003d [Int: TurnSystemEvent]()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var triggeredEvents: [TurnSystemEvent] {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return Array(triggeredEventsDict.values)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func addEvents(events: [TurnSystemEvent]) -\u003e Bool {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        var result: Bool \u003d true"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for event in events {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            if self.events[event.identifier] !\u003d nil {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                result \u003d false"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            self.events[event.identifier] \u003d event"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func removeEvents(events: [TurnSystemEvent]) -\u003e Bool {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        var result: Bool \u003d true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for event in events {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            if self.events[event.identifier] \u003d\u003d nil {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                result \u003d false"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            self.events[event.identifier] \u003d nil"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func setEvents(events: [TurnSystemEvent]) -\u003e Bool {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return removeEvents(events: Array(self.events.values))"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            \u0026\u0026 addEvents(events: events)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func checkForEvents() -\u003e [GameMessage] {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        var result \u003d [GameMessage]()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for (_, event) in events {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            guard let eventResult \u003d event.evaluateEvent() else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            result.append(eventResult)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func turnFinished() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        currentTurn +\u003d 1"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        gameState.gameTime.value.addWeeks(4)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    // marked for deprecation"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func processed(action: PlayerAction, from player: GenericPlayer) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        actionHistory.append((player: player, action: action))"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 14,
      "yuhongherald": 61
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/UniqueObject.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  UniqueObject.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class UniqueObject: Unique, Hashable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var identifier: Int {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return _identifier"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func \u003d\u003d (lhs: UniqueObject, rhs: UniqueObject) -\u003e Bool {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return lhs.identifier \u003d\u003d rhs.identifier"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private static func getIdentifier() -\u003e Int {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        var identifier: Int \u003d 0 // dummy value"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        queue.sync {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            while identifiers.contains(nextID) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                nextID +\u003d 1 // naive implementation"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            identifiers.insert(nextID)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            identifier \u003d nextID"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            nextID +\u003d 1"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return identifier"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private static var nextID: Int \u003d 0"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private static var identifiers \u003d Set\u003cInt\u003e()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private static let queue \u003d DispatchQueue(label: \"UniqueTurnSystemEventQueue\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                             attributes: .concurrent)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let _identifier: Int"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self._identifier \u003d UniqueObject.getIdentifier()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func hash(into hasher: inout Hasher) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        hasher.combine(identifier)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    deinit {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let identifier \u003d self.identifier"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        UniqueObject.queue.async(flags: .barrier) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            UniqueObject.identifiers.remove(identifier)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 53
    }
  },
  {
    "path": "SailingThroughHistoryTests/EmotionEngineTest.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GameLogicTest.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 18/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "/*"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class EmotionEngineTest: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func testUpdateGameState() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let gameState \u003d GameEngineTypicalClasses.getTypicalGameState()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // TODO: Add stuff into the game state here"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let emotionEngine \u003d EmotionEngine(gameLogic: GameLogic(gameState: gameState))"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        var timeDiff \u003d 1.0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let stopwatch \u003d Stopwatch(smallestInterval: EngineConstants.smallestEngineTick)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        stopwatch.start()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        while stopwatch.getTimestamp() \u003c 2.0 \u0026\u0026 timeDiff \u003e 0 {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            timeDiff \u003d 1.0 - emotionEngine.currentGameTime"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            emotionEngine.updateGameState(deltaTime: timeDiff)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            // TODO: Monitor the game state here"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func testSetGameSpeed() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let logic \u003d EmotionEngine(gameLogic: GameLogic(gameState: GameState(baseYear: 0)))"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var event \u003d GameEvent(eventType: EventType.informative(initiater: \"\"), timestamp: 1, message: nil)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // This is an example of a functional test case."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // Use XCTAssert and related functions to verify your tests produce the correct results."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        event.timestamp \u003d 1 * logic.forecastDuration"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        logic.setGameSpeed(using: event)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        XCTAssertTrue(abs(logic.getGameSpeed() - logic.fastestGameSpeed) \u003c 0.001, \"Wrong game speed!\")"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        event.timestamp \u003d 1.1 * logic.forecastDuration"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        logic.setGameSpeed(using: event)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        XCTAssertTrue(abs(logic.getGameSpeed() - logic.fastestGameSpeed) \u003c 0.001, \"Wrong game speed!\")"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        event.timestamp \u003d 0 * logic.forecastDuration"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        logic.setGameSpeed(using: event)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        XCTAssertTrue(abs(logic.getGameSpeed() - logic.slowestGameSpeed) \u003c 0.001, \"Wrong game speed!\")"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        event.timestamp \u003d -0.1 * logic.forecastDuration"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        logic.setGameSpeed(using: event)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        XCTAssertTrue(abs(logic.getGameSpeed() -"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                       Double.lerp(0.1 * logic.forecastDuration, logic.slowestGameSpeed,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                   logic.fastestGameSpeed)) \u003c 0.001, \"Wrong game speed!\")"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        event.timestamp \u003d 0.6 * logic.forecastDuration"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        logic.setGameSpeed(using: event)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        XCTAssertTrue(abs(logic.getGameSpeed() -"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                       Double.lerp(0.6 * logic.forecastDuration, logic.fastestGameSpeed,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                   logic.slowestGameSpeed)) \u003c 0.001, \"Wrong game speed!\")"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "/*"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func testUpdateGameState() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let gameState \u003d GameLogic(gameState: GameState(baseYear: 0))"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let logic \u003d EmotionEngine(gameLogic: gameState)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        logic.updateGameState(deltaTime: 1.0)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // TODO: Write test to check months and weeks have been updated correctly"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // TODO: Write test to check that player movement have been done correctly"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // Bonus: Write test to check that game speed is set to tolerable bounds"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        if stopwatch.getTimestamp() \u003e\u003d 2.0 {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            XCTFail(\"Too inefficient!\")"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        stopwatch.stop()"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "*/"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 4,
      "Jason Chong": 4,
      "yuhongherald": 60
    }
  },
  {
    "path": "SailingThroughHistoryTests/GameParameter/GameParameterTest.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  GameParameterTest.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 4/1/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class GameParameterTest: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testUpdatePlayerParameter() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let originName \u003d \"name\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let changedName \u003d \"changedName\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test update name and money"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let playerParameter \u003d PlayerParameter(name: originName, teamName: \"team\", node: nil)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        playerParameter.set(name: changedName, money: 158)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(playerParameter.getName(), changedName, \"Name is not successfully changed\")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(playerParameter.getMoney(), 158, \"Money is not successfully changed\")"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertTrue(playerParameter.getTeam() \u003d\u003d Team(name: \"team\"), \"Team is accidently changed\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodablePlayerParameter() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test without node"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var playerParameter \u003d PlayerParameter(name: \"\", teamName: \"\", node: nil)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode1 \u003d try? JSONEncoder().encode(playerParameter) else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            XCTAssertThrowsError(\"Encode Failed\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var decode \u003d try? JSONDecoder().decode(PlayerParameter.self, from: encode1)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertTrue(isEqual(playerParameter: decode, playerParameter), \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test with node"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        playerParameter \u003d PlayerParameter(name: \"\", teamName: \"\", node: Sea(name: \"sea\", originX: 1, originY: 100))"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode2 \u003d try? JSONEncoder().encode(playerParameter) else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            XCTAssertThrowsError(\"Encode Failed\")"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        decode \u003d try? JSONDecoder().decode(PlayerParameter.self, from: encode2)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertTrue(isEqual(playerParameter: decode, playerParameter), \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test with port"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        playerParameter \u003d PlayerParameter(name: \"\", teamName: \"\","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                          node: Port(team: nil, name: \"NPCport\", originX: 0, originY: 0))"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode3 \u003d try? JSONEncoder().encode(playerParameter) else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            XCTAssertThrowsError(\"Encode Failed\")"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        decode \u003d try? JSONDecoder().decode(PlayerParameter.self, from: encode3)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertTrue(isEqual(playerParameter: decode, playerParameter), \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        playerParameter \u003d PlayerParameter(name: \"\", teamName: \"\", node: nil)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let team \u003d Team(name: \"team\")"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let port \u003d Port(team: team, name: \"selfport\", originX: 0, originY: 0)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        port.assignOwner(team)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode4 \u003d try? JSONEncoder().encode(playerParameter) else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            XCTAssertThrowsError(\"Encode Failed\")"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        decode \u003d try? JSONDecoder().decode(PlayerParameter.self, from: encode4)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertTrue(isEqual(playerParameter: decode, playerParameter), \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testUpdateItemParameter() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test valid update"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var itemParameter \u003d ItemParameter(itemType: .opium, displayName: \"Opium\", weight: 100, isConsumable: true)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        itemParameter.setBuyValue(value: 1234)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        itemParameter.setSellValue(value: 5678)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        itemParameter.setHalfLife(to: 20)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(itemParameter.getBuyValue(), 1234, \"BuyValue is not successfully updated.\")"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(itemParameter.getSellValue(), 5678, \"SellValue is not successfully updated.\")"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(itemParameter.getHalfLife(), 20, \"HalfLife is not successfully updated.\")"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test invalid update"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        itemParameter.setBuyValue(value: -1234)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        itemParameter.setSellValue(value: -5678)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        itemParameter.setHalfLife(to: -20)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(itemParameter.getBuyValue(), 1234, \"BuyValue should not be updated to invalid value.\")"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(itemParameter.getSellValue(), 5678, \"SellValue should not be updated to invalid value.\")"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(itemParameter.getHalfLife(), 20, \"HalfLift should not be updated to invalid value.\")"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodableItemParameter() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let itemParameter \u003d ItemParameter(itemType: .opium, displayName: \"Opium\", weight: 100, isConsumable: true)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode \u003d try? JSONEncoder().encode(itemParameter) else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            XCTAssertThrowsError(\"Encode Failed\")"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let decode \u003d try? JSONDecoder().decode(ItemParameter.self, from: encode)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertTrue(isEqual(itemParameter: decode, itemParameter), \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodableGameParameter() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let gameParameter \u003d GameParameter(map: Map(map: \"map\", bounds: Rect(originX: 0, originY: 0, height: 100, width: 100)), teams: [\"team1\", \"team2\"])"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode \u003d try? JSONEncoder().encode(gameParameter) else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            XCTAssertThrowsError(\"Encode Failed\")"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let decode \u003d try? JSONDecoder().decode(GameParameter.self, from: encode)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertTrue(isEqual(gameParameter: decode, gameParameter), \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func isEqual(playerParameter: PlayerParameter?, _ rhs: PlayerParameter) -\u003e Bool {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let lhs \u003d playerParameter else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return lhs.getName() \u003d\u003d rhs.getName() \u0026\u0026 lhs.getTeam() \u003d\u003d rhs.getTeam()"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            \u0026\u0026 lhs.getMoney() \u003d\u003d rhs.getMoney()"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func isEqual(node lhsNode: Node?, _ rhsNode: Node?) -\u003e Bool {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let lhs \u003d lhsNode, let rhs \u003d rhsNode else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return lhsNode \u003d\u003d nil \u0026\u0026 rhsNode \u003d\u003d nil"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return lhs.frame \u003d\u003d rhs.frame \u0026\u0026 lhs.name \u003d\u003d rhs.name"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func isEqual(itemParameter: ItemParameter?, _ rhs: ItemParameter) -\u003e Bool {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let lhs \u003d itemParameter else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return lhs.getBuyValue() \u003d\u003d rhs.getBuyValue() \u0026\u0026 lhs.getSellValue() \u003d\u003d rhs.getSellValue()"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            \u0026\u0026 lhs.getHalfLife() \u003d\u003d rhs.getHalfLife() \u0026\u0026 lhs.displayName \u003d\u003d rhs.displayName"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            \u0026\u0026 lhs.isConsumable \u003d\u003d rhs.isConsumable \u0026\u0026 lhs.unitWeight \u003d\u003d rhs.unitWeight \u0026\u0026 lhs.itemType \u003d\u003d rhs.itemType"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func isEqual(gameParameter: GameParameter?, _ rhs: GameParameter) -\u003e Bool {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let lhs \u003d gameParameter else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard lhs.playerParameters.count \u003d\u003d rhs.playerParameters.count, lhs.upgrades.count \u003d\u003d rhs.upgrades.count else {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for parameter in lhs.playerParameters {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let index \u003d rhs.playerParameters.firstIndex(where: { isEqual(playerParameter: $0, parameter) }) else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return false"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            rhs.playerParameters.remove(at: index)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if !rhs.playerParameters.isEmpty {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for upgrade in lhs.upgrades {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let index \u003d rhs.upgrades.firstIndex(where: { isEqual(upgrade: $0, upgrade) }) else {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return false"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            rhs.upgrades.remove(at: index)"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if !rhs.upgrades.isEmpty {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return lhs.eventParameters \u003d\u003d rhs.eventParameters \u0026\u0026 lhs.itemParameters \u003d\u003d rhs.itemParameters"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "             \u0026\u0026 lhs.numOfTurn \u003d\u003d rhs.numOfTurn \u0026\u0026 lhs.timeLimit \u003d\u003d rhs.timeLimit"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            \u0026\u0026 lhs.teams \u003d\u003d rhs.teams \u0026\u0026 isEqual(map: lhs.map, rhs.map)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func isEqual(upgrade: Upgrade?, _ rhs: Upgrade) -\u003e Bool {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let lhs \u003d upgrade else {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return lhs.name \u003d\u003d rhs.name \u0026\u0026 lhs.cost \u003d\u003d rhs.cost \u0026\u0026 lhs.type \u003d\u003d rhs.type"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func isEqual(map: Map?, _ rhs: Map) -\u003e Bool {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let lhs \u003d map else {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // check same nodes"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let lhsNodes \u003d Set\u003cNode\u003e(lhs.getNodes())"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var rhsNodes \u003d Set\u003cNode\u003e(rhs.getNodes())"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for node in lhsNodes {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            rhsNodes.remove(node)"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if !rhsNodes.isEmpty {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // check same path"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let lhsPaths \u003d Set\u003cPath\u003e(lhs.getAllPaths())"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var rhsPaths \u003d Set\u003cPath\u003e(rhs.getAllPaths())"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for path in lhsPaths {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            rhsPaths.remove(path)"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if !rhsPaths.isEmpty {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return lhs.map \u003d\u003d rhs.map \u0026\u0026 lhs.bounds \u003d\u003d rhs.bounds"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 201,
      "henry": 1
    }
  },
  {
    "path": "SailingThroughHistoryTests/GameParameter/ItemTest.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  ItemTest.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 4/15/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class ItemTest: XCTestCase {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override func setUp() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // Put setup code here. This method is called before the invocation of each test method in the class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override func tearDown() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // Put teardown code here. This method is called after the invocation of each test method in the class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testExample() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // This is an example of a functional test case."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // Use XCTAssert and related functions to verify your tests produce the correct results."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testPerformanceExample() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // This is an example of a performance test case."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.measure {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            // Put the code you want to measure the time of here."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 33
    }
  },
  {
    "path": "SailingThroughHistoryTests/GameParameter/MapTest.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  MapTest.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 4/13/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class MapTest: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var map: Map \u003d Map(map: \"\", bounds: Rect(originX: 0, originY: 0, height: 1000, width: 1024))"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var sea: Sea \u003d Sea(name: \"sea\", originX: 0, originY: 0)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var pirateSea: Sea \u003d {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let sea \u003d Sea(name: \"pirateSea\", originX: 100, originY: 100)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        sea.add(object: PirateIsland(in: sea))"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return sea"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var NPCport: SailingThroughHistory.Port \u003d Port(team: nil, name: \"port\", originX: 20, originY: 20)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var selfport: SailingThroughHistory.Port \u003d Port(team: Team(name: \"testTeam\"), originX: 40, originY: 40)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override func setUp() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        Node.nextID \u003d 0"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        Node.reuseID \u003d []"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map \u003d Map(map: \"\", bounds: Rect(originX: 0, originY: 0, height: 1000, width: 1024))"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        sea \u003d Sea(name: \"sea\", originX: 0, originY: 0)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        pirateSea \u003d Sea(name: \"pirateSea\", originX: 100, originY: 100)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let pirate \u003d PirateIsland(in: pirateSea)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        pirateSea.add(object: pirate)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        NPCport \u003d Port(team: nil, name: \"port\", originX: 20, originY: 20)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        selfport \u003d Port(team: Team(name: \"testTeam\"), originX: 40, originY: 40)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testUpdateMap() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let map \u003d Map(map: \"worldmap1815\", bounds: Rect(originX: 0, originY: 0, height: 100, width: 100))"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test udpate map"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.changeBackground(\"\", with: Rect(originX: 100, originY: 100, height: 100, width: 100))"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(map.map, \"\", \"Map is not successfully updated\")"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(map.bounds, Rect(originX: 100, originY: 100, height: 100, width: 100), \"Bounds is not successfully updated\")"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testUpdateNodePath() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        setUp()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test add node"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let node1 \u003d Sea(name: \"sea1\", originX: 0, originY: 0)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.addNode(node1)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var nodes \u003d Set\u003cNode\u003e()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        nodes.insert(node1)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(map.getNodes(), nodes, \"Node is not successfully added\")"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test add path"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let node2 \u003d Sea(name: \"sea2\", originX: 10, originY: 10)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let pirate \u003d PirateIsland(in: node2)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        node2.add(object: pirate)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.addNode(node2)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        nodes.insert(node2)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let path \u003d Path(from: node1, to: node2)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.add(path: path)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var paths \u003d Set\u003cPath\u003e()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        paths.insert(path)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(map.getAllPaths(), paths, \"Path is not successfully added\")"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(map.getPaths(of: node1), [path], \"Path is not added to node1\")"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(map.getPaths(of: node2), [path], \"Path is not added to node2\")"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test remove node"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.add(path: path)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        paths.insert(path)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.removeNode(node1)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        nodes.remove(node1)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        paths.remove(path)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(map.getNodes(), nodes, \"Node is not successfully removed\")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(map.getAllPaths(), paths, \"Path is not successfully removed\")"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(map.getPaths(of: node2), [], \"Path is not successfully removed from node2\")"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test remove path"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.removePath(path)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        paths.remove(path)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(map.getNodes(), nodes, \"Node is not successfully removed\")"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(map.getAllPaths(), paths, \"Path is not successfully removed\")"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(map.getPaths(of: node1), [], \"Path is not successfully removed from node1\")"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(map.getPaths(of: node2), [], \"Path is not successfully removed from node2\")"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testUpdateObject() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        setUp()"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test add object"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var objects \u003d [GameObject]()"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let ship \u003d ShipUI(ship: Ship(node: sea, suppliesConsumed: []))"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.addGameObject(gameObject: ship)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        objects.append(ship)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(map.gameObjects.value, objects, \"Objects are not successfully added\")"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodableMap() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        setUp()"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode \u003d try? JSONEncoder().encode(map) else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            XCTAssertThrowsError(\"Encode Failed\")"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let decode \u003d try? JSONDecoder().decode(Map.self, from: encode)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertTrue(isEqual(map: decode, map), \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodableMapFull() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        setUp()"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.addNode(sea)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.addNode(pirateSea)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.addNode(selfport)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.addNode(NPCport)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.add(path: Path(from: sea, to: pirateSea))"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.add(path: Path(from: pirateSea, to: NPCport))"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.add(path: Path(from: NPCport, to: sea))"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.addGameObject(gameObject: PirateIsland(in: pirateSea))"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.addGameObject(gameObject: ShipUI(ship: Ship(node: selfport, suppliesConsumed: [])))"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode \u003d try? JSONEncoder().encode(map) else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            XCTAssertThrowsError(\"Encode Failed\")"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let decode \u003d try? JSONDecoder().decode(Map.self, from: encode)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertTrue(isEqual(map: decode, map), \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodableMapWithSea() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test map with sea"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        setUp()"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.addNode(sea)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode \u003d try? JSONEncoder().encode(map) else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            XCTAssertThrowsError(\"Encode Failed\")"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let decode \u003d try? JSONDecoder().decode(Map.self, from: encode)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertTrue(isEqual(map: decode, map), \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        print(String(data: encode, encoding: String.Encoding.utf8) ?? \"Data could not be printed\")"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodableMapWithPirate() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        setUp()"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.addNode(pirateSea)"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode \u003d try? JSONEncoder().encode(map) else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            XCTAssertThrowsError(\"Encode Failed\")"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let decode \u003d try? JSONDecoder().decode(Map.self, from: encode)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertTrue(isEqual(map: decode, map), \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        print(String(data: encode, encoding: String.Encoding.utf8) ?? \"Data could not be printed\")"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodableMapWithNPCPort() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        setUp()"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.addNode(NPCport)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode \u003d try? JSONEncoder().encode(map) else {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            XCTAssertThrowsError(\"Encode Failed\")"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let decode \u003d try? JSONDecoder().decode(Map.self, from: encode)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertTrue(isEqual(map: decode, map), \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        print(String(data: encode, encoding: String.Encoding.utf8) ?? \"Data could not be printed\")"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodableMapWithPlayerPort() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test map with player owned port added"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        setUp()"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.addNode(selfport)"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode \u003d try? JSONEncoder().encode(map) else {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            XCTAssertThrowsError(\"Encode Failed\")"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let decode \u003d try? JSONDecoder().decode(Map.self, from: encode)"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertTrue(isEqual(map: decode, map), \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodableMapWithPath() {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test map with path added"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.addNode(sea)"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.addNode(pirateSea)"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.add(path: Path(from: sea, to: pirateSea))"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode \u003d try? JSONEncoder().encode(map) else {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            XCTAssertThrowsError(\"Encode Failed\")"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let decode \u003d try? JSONDecoder().decode(Map.self, from: encode)"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertTrue(isEqual(map: decode, map), \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func isEqual(map: Map?, _ rhs: Map) -\u003e Bool {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let lhs \u003d map else {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // check same nodes"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let lhsNodes \u003d Set\u003cNode\u003e(lhs.getNodes())"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var rhsNodes \u003d Set\u003cNode\u003e(rhs.getNodes())"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for node in lhsNodes {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            rhsNodes.remove(node)"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if !rhsNodes.isEmpty {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // check same path"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let lhsPaths \u003d Set\u003cPath\u003e(lhs.getAllPaths())"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var rhsPaths \u003d Set\u003cPath\u003e(rhs.getAllPaths())"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for path in lhsPaths {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            rhsPaths.remove(path)"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if !rhsPaths.isEmpty {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return lhs.map \u003d\u003d rhs.map \u0026\u0026 lhs.bounds \u003d\u003d rhs.bounds"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 220
    }
  },
  {
    "path": "SailingThroughHistoryTests/GameParameter/NodeTest.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  NodeTest.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 4/13/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class NodeTest: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var sea: Sea \u003d Sea(name: \"sea\", originX: 0, originY: 0)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var pirateSea: Sea \u003d {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let sea \u003d Sea(name: \"pirateSea\", originX: 100, originY: 100)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        sea.add(object: PirateIsland(in: sea))"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return sea"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var NPCport: SailingThroughHistory.Port \u003d Port(team: nil, name: \"port\", originX: 20, originY: 20)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var selfport: SailingThroughHistory.Port \u003d Port(team: Team(name: \"testTeam\"), originX: 40, originY: 40)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override func setUp() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        Node.nextID \u003d 0"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        Node.reuseID \u003d []"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        sea \u003d Sea(name: \"sea\", originX: 0, originY: 0)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        pirateSea \u003d Sea(name: \"pirateSea\", originX: 100, originY: 100)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let pirate \u003d PirateIsland(in: pirateSea)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        pirateSea.add(object: pirate)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        NPCport \u003d Port(team: nil, name: \"port\", originX: 20, originY: 20)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        selfport \u003d Port(team: Team(name: \"testTeam\"), originX: 40, originY: 40)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testUpdateNode() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let sea \u003d Sea(name: \"pirateSea\", originX: 100, originY: 100)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let objects \u003d [PirateIsland(in: sea), PirateIsland(in: sea)]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        objects.forEach { sea.add(object: $0) }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(sea.objects, objects, \"Objects update failed.\")"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodableSea() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode \u003d try? JSONEncoder().encode(sea) else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            XCTAssertThrowsError(\"Encode Failed\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let decode \u003d try? JSONDecoder().decode(Sea.self, from: encode)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(sea, decode, \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodableSeaWithObjects() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode \u003d try? JSONEncoder().encode(pirateSea) else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            XCTAssertThrowsError(\"Encode Failed\")"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let decode \u003d try? JSONDecoder().decode(Sea.self, from: encode)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(pirateSea, decode, \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodableNPCPort() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode \u003d try? JSONEncoder().encode(NPCport) else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            XCTAssertThrowsError(\"Encode Failed\")"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let decode \u003d try? JSONDecoder().decode(Port.self, from: encode)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(NPCport, decode, \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodableSelfPort() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode \u003d try? JSONEncoder().encode(selfport) else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            XCTAssertThrowsError(\"Encode Failed\")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let decode \u003d try? JSONDecoder().decode(Port.self, from: encode)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(selfport, decode, \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 79
    }
  },
  {
    "path": "SailingThroughHistoryTests/GameParameter/TeamTest.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  TeamTest.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 4/13/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class TeamTest: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var team \u003d Team(name: \"testTeam\")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var sea \u003d Sea(name: \"sea\", originX: 0, originY: 100)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var npcPort \u003d SailingThroughHistory.Port(team: nil, name: \"NPCport\", originX: 0, originY: 100)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var selfPort \u003d SailingThroughHistory.Port(team: Team(name: \"testTeam\"), originX: 100, originY: 100)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override func setUp() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        Node.nextID \u003d 0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        Node.reuseID \u003d []"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        team \u003d Team(name: \"testTeam\")"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        sea \u003d Sea(name: \"sea\", originX: 0, originY: 100)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testUpdateTeam() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let team \u003d Team(name: \"testTeam\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let originMoney \u003d team.money.value"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        team.updateMoney(by: 100)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(team.money.value, originMoney + 100, \"Money is not successfully updated.\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        team.updateMoney(by: -100)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(team.money.value, originMoney, \"Money is not successfully updated.\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let sea \u003d Sea(name: \"sea\", originX: 0, originY: 100)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        team.start(from: sea)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(team.startingNode, sea, \"StartingNode is not successfully updated.\")"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let port \u003d SailingThroughHistory.Port(team: nil, name: \"port\", originX: 100, originY: 10)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        team.start(from: port)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(team.startingNode, port, \"StartingNode is not successfully updated.\")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodableTeamWithoutNode() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        team.updateMoney(by: 100)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        check(team)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodableTeamWithSea() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        setUp()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test sea without objects"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        team.start(from: sea)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        check(team)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test sea with objects"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        sea.add(object: PirateIsland(in: sea))"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        check(team)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodableTeamWithPort() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        team.start(from: npcPort)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        check(team)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        team.start(from: selfPort)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        check(team)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func check(_ team: Team) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode \u003d try? JSONEncoder().encode(team) else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertThrowsError(\"Encode Failed\")"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let decode \u003d try? JSONDecoder().decode(Team.self, from: encode)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        print(String(data: encode, encoding: String.Encoding.utf8) ?? \"Data could not be printed\")"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertTrue(isEqual(team: decode, team), \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func isEqual(team: Team?, _ rhs: Team) -\u003e Bool {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let lhs \u003d team else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return lhs.name \u003d\u003d rhs.name"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            \u0026\u0026 lhs.startId \u003d\u003d rhs.startId \u0026\u0026 lhs.money.value \u003d\u003d rhs.money.value"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 84
    }
  },
  {
    "path": "SailingThroughHistoryTests/GameState/ShipItemStorageUnitTests.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  ShipItemStorageUnitTests.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "class ShipItemStorageUnitTests: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testGetPurchasableItemTypes() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "        //getPurchasableItemTypes() -\u003e [ItemType]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testGetMaxPurchaseAmount() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "        //func getMaxPurchaseAmount(itemParameter: ItemParameter) -\u003e Int"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testBuyItem() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "        //func buyItem(itemType: ItemType, quantity: Int) throws"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testSellItem() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        //func sellItem(item: GenericItem) throws"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testSell() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "        //func sell(itemType: ItemType, quantity: Int) throws"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testRemoveItem() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "        //func removeItem(by itemType: ItemType, with quantity: Int) -\u003e Int"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 36
    }
  },
  {
    "path": "SailingThroughHistoryTests/GameState/ShipNavigatableUnitTests.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  ShipNavigatableUnitTests.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "class ShipNavigatableUnitTests: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testGetNodesInRange() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "        //func getNodesInRange(roll: Int, speedMultiplier: Double, map: Map) -\u003e [Node]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testMove() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "        //func move(node: Node)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testCanDock() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "        //func canDock() -\u003e Bool"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testDock() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        //func dock() throws -\u003e Port"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 28
    }
  },
  {
    "path": "SailingThroughHistoryTests/GameState/ShipPirateWeatherUnitTests.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  ShipPirateWeatherUnitTests.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "class ShipPirateWeatherUnitTests: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testStartPirateChase() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "        //func startPirateChase()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testGetWeatherModifier() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "        //func getWeatherModifier() -\u003e Double"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 20
    }
  },
  {
    "path": "SailingThroughHistoryTests/GameState/ShipUnitTests.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  ShipUnitTests.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "class ShipUnitTests: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    let speedMultiplier \u003d 1.0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var node \u003d NodeStub(name: \"testNode\", id: 0)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    var items \u003d [GenericItemStub]()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    var suppliesConsumed \u003d [GenericItemStub]()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    override func setUp() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "        super.setUp()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "        node \u003d NodeStub(name: \"testNode\", id: 0)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "        items \u003d [GenericItemStub]()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "        let item1 \u003d GenericItemStub(name: \"TestItem1\", itemType: .opium, quantity: 1)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "        items.append(item1)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        suppliesConsumed \u003d [GenericItemStub]()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "        let consumed1 \u003d GenericItemStub(name: \"TestConsume1\", itemType: .food, quantity: 1)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "        suppliesConsumed.append(consumed1)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testConstructor() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "        //init(node: Node, suppliesConsumed: [GenericItem])"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let ship \u003d Ship(node: node, suppliesConsumed: suppliesConsumed)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(ship.nodeId, node.identifier)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertTrue(testTwoGenericItemArray(ship.suppliesConsumed, suppliesConsumed))"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(ship.isChasedByPirates, false)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(ship.turnsToBeingCaught, 0)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "        //subscribeToItems(with: updateCargoWeight)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": "        //shipObject \u003d ShipUI(ship: self)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testEncodeDecode() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": "        let ship1 \u003d Ship(node: node, suppliesConsumed: [])"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship1.items.value \u003d items"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": "        let shipChassis \u003d BiggerShipUpgrade()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": "        let auxiliaryUpgrade \u003d MercernaryUpgrade()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship1.shipChassis \u003d shipChassis"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship1.auxiliaryUpgrade \u003d auxiliaryUpgrade"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let ship1Encoded \u003d try? JSONEncoder().encode(ship1) else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            XCTFail(\"Encode failed\")"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let ship1Decoded \u003d try? JSONDecoder().decode(Ship.self, from: ship1Encoded) else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            XCTFail(\"Decode failed\")"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertTrue(testTwoGenericItemArray(ship1Decoded.items.value, ship1.items.value))"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(ship1Decoded.nodeId, ship1.nodeId)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertTrue(testTwoGenericItemArray(ship1Decoded.suppliesConsumed, ship1.suppliesConsumed))"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(ship1Decoded.shipChassis?.name,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "henry"
        },
        "content": "                       ship1.shipChassis?.name)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(ship1Decoded.auxiliaryUpgrade?.name,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "henry"
        },
        "content": "                       ship1.auxiliaryUpgrade?.name)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testStartTurn() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testEndTurn() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "henry"
        },
        "content": "        //func endTurn(speedMultiplier: Double) -\u003e [InfoMessage]"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "henry"
        },
        "content": "        let ship1 \u003d Ship(node: node, suppliesConsumed: [])"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "henry"
        },
        "content": "        let pirateTimer1 \u003d 10"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship1.items.value \u003d items"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship1.isChasedByPirates \u003d true"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship1.turnsToBeingCaught \u003d pirateTimer1"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "henry"
        },
        "content": "        let messages1 \u003d ship1.endTurn(speedMultiplier: speedMultiplier)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertTrue(testTwoGenericItemArray(ship1.items.value, items))"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(ship1.isChasedByPirates, true)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(ship1.turnsToBeingCaught, pirateTimer1 - 1)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "henry"
        },
        "content": "        let ship2 \u003d Ship(node: node, suppliesConsumed: [])"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship2.items.value \u003d items"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship2.isChasedByPirates \u003d true"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship2.turnsToBeingCaught \u003d 1"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "henry"
        },
        "content": "        let messages2 \u003d ship2.endTurn(speedMultiplier: speedMultiplier)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertTrue(testTwoGenericItemArray(ship2.items.value, [GenericItem]()))"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(ship2.isChasedByPirates, false)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(ship2.turnsToBeingCaught, 0)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "henry"
        },
        "content": "        //messages.append(InfoMessage(title: \"Pirates!\", message: \"You have been caught by pirates!. You lost all your cargo\"))"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "henry"
        },
        "content": "        let ship3 \u003d Ship(node: node, suppliesConsumed: suppliesConsumed)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "henry"
        },
        "content": "        let money3 \u003d 1000"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "henry"
        },
        "content": "        let owner3 \u003d GenericPlayerStub()"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "henry"
        },
        "content": "        owner3.money.value \u003d money3"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship3.items.value \u003d suppliesConsumed.map { $0.copy() }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "henry"
        },
        "content": "        let messages3 \u003d ship3.endTurn(speedMultiplier: speedMultiplier)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertTrue(testTwoGenericItemArray(ship3.items.value, [GenericItem]()))"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(ship3.owner?.money.value, money3)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "henry"
        },
        "content": "        //owner?.updateMoney(by: -deficit * parameter.getBuyValue())"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "henry"
        },
        "content": "        /*messages.append(InfoMessage(title: \"deficit!\","
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "henry"
        },
        "content": "                                    message: \"You have exhausted \\(parameter.displayName) and have a deficit of \\(deficit) and paid for it.\"))*/"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "henry"
        },
        "content": "        // decay remaining items"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "henry"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "henry"
        },
        "content": "        for item in items.value {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "henry"
        },
        "content": "            guard let lostQuantity \u003d item.decayItem(with: speedMultiplier) else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "henry"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "henry"
        },
        "content": "            messages.append(InfoMessage(title: \"Lost Item\","
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "henry"
        },
        "content": "                                        message: \"You have lost \\(lostQuantity) of \\(item.itemParameter?.displayName ?? \"\") from decay and have \\(item.quantity) remaining!\"))"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "henry"
        },
        "content": "        }*/"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "henry"
        },
        "content": "    override class func tearDown() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "henry"
        },
        "content": "        Node.nextID \u003d 0"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "henry"
        },
        "content": "        Node.reuseID.removeAll()"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "henry"
        },
        "content": "    private func testTwoGenericItemArray(_ array1: [GenericItem], _ array2: [GenericItem]) -\u003e Bool {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard array1.count \u003d\u003d array2.count else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "henry"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "henry"
        },
        "content": "        for (item1, item2) in zip(array1, array2) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "henry"
        },
        "content": "            guard item1 \u003d\u003d item2 else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "henry"
        },
        "content": "                return false"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "henry"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 130,
      "Jason Chong": 6
    }
  },
  {
    "path": "SailingThroughHistoryTests/GameState/ShipUpgradableUnitTests.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  ShipUpgradableUnitTests.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "class ShipUpgradableUnitTests: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testInstallUpgrade() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "        //func installUpgrade(upgrade: Upgrade) -\u003e (Bool, InfoMessage?)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 16
    }
  },
  {
    "path": "SailingThroughHistoryTests/InterfaceTest.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  InterfaceTest.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 23/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "/*"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class InterfaceTest: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var bounds: Rect {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let frame \u003d Rect(originX: 0, originY: 0,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                               height: 0, width: 0) else {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                fatalError(\"Invalid bounds\")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return frame"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var objectFrame: Rect {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let frame \u003d Rect(originX: 0, originY: 0,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                               height: 0, width: 0) else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                fatalError(\"Invalid objectFrame\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return frame"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var frame2: Rect {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let frame \u003d Rect(originX: 0, originY: 0,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                               height: 1, width: 1) else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                fatalError(\"Invalid frame2\")"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return frame"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private lazy var object \u003d GameObject(image: \"\", frame: objectFrame)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private lazy var object2 \u003d GameObject(image: \"\", frame: frame2)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private lazy var interface \u003d Interface(players: [], bounds: bounds)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func testInit() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertTrue(interface.players.isEmpty, \"Interface initialized with no \" +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            \"players contain players.\")"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(bounds, interface.bounds, \"Interface was not initialized\" +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            \"with the input bounds.\")"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func testAdd() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.add(object: object)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.broadcastInterfaceChanges(withDuration: 0)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(interface.objectFrames.getFrame(for: object), objectFrame, \"GameObject was not added properly.\")"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.add(object: object)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.broadcastInterfaceChanges(withDuration: 0)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(interface.objectFrames.getFrame(for: object), objectFrame,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                       \"GameObject was removed after being added again.\")"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.add(object: object2)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.broadcastInterfaceChanges(withDuration: 0)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(interface.objectFrames.getFrame(for: object), objectFrame,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                       \"GameObject was removed after being added again.\")"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(interface.objectFrames.getFrame(for: object2), frame2, \"Second game object\" +"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            \" was not added properly.\")"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        object.frame \u003d frame2"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.add(object: object)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.broadcastInterfaceChanges(withDuration: 0)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertNotEqual(interface.objectFrames.getFrame(for: object), frame2,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                       \"Duplicate object add caused frame to change.\")"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func testUpdatePosition() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.updatePosition(of: object)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.broadcastInterfaceChanges(withDuration: 0)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertNil(interface.objectFrames.getFrame(for: object), \"Non existant game object was added after move.\")"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.add(object: object)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.broadcastInterfaceChanges(withDuration: 0)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        object.frame \u003d frame2"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.updatePosition(of: object)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.broadcastInterfaceChanges(withDuration: 0)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(interface.objectFrames.getFrame(for: object), frame2, \"Frame was not updated properly.\")"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.add(object: object2)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.broadcastInterfaceChanges(withDuration: 0)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        object2.frame \u003d objectFrame"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.updatePosition(of: object2)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.broadcastInterfaceChanges(withDuration: 0)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(interface.objectFrames.getFrame(for: object2), objectFrame, \"Frame was not updated properly.\")"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(interface.objectFrames.getFrame(for: object), frame2, \"Wrong frame was updated\")"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func testRemove() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.add(object: object)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.broadcastInterfaceChanges(withDuration: 0)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.remove(object: object2)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.broadcastInterfaceChanges(withDuration: 0)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(interface.objectFrames.getFrame(for: object), objectFrame, \"Wrong object was affected by remove\")"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.add(object: object2)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.broadcastInterfaceChanges(withDuration: 0)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.remove(object: object2)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.broadcastInterfaceChanges(withDuration: 0)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertNil(interface.objectFrames.getFrame(for: object2), \"Object not removed properly\")"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.remove(object: object)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.broadcastInterfaceChanges(withDuration: 0)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertNil(interface.objectFrames.getFrame(for: object), \"Object not removed properly\")"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func testAddRemove() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.add(object: object2)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.broadcastInterfaceChanges(withDuration: 0)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.remove(object: object2)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.broadcastInterfaceChanges(withDuration: 0)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.add(object: object2)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        interface.broadcastInterfaceChanges(withDuration: 0)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(interface.objectFrames.getFrame(for: object2), frame2, \"Wrong object was affected by remove\")"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// TODO: Tests for path."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "*/"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 2,
      "Jason Chong": 126
    }
  },
  {
    "path": "SailingThroughHistoryTests/SailingThroughHistoryTests.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistoryTests.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 14/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class SailingThroughHistoryTests: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override func setUp() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        // Put setup code here. This method is called before the invocation of each test method in the class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override func tearDown() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        // Put teardown code here. This method is called after the invocation of each test method in the class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func testExample() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        // This is an example of a functional test case."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        // Use XCTAssert and related functions to verify your tests produce the correct results."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func testPerformanceExample() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        // This is an example of a performance test case."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.measure {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            // Put the code you want to measure the time of here."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 34
    }
  },
  {
    "path": "SailingThroughHistoryTests/TurnSystemTest.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  TurnSystemTest.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 30/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class TurnSystemTest: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func functionalityTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // construct a turnsystem"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // construct a network stub, for single player probably"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // construct some dummy map"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // start the game"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // make some actions"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // check that the state of turnsystem is correct"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // check that the data in turnsystem is correct"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 22
    }
  },
  {
    "path": "SailingThroughHistoryUITests/SailingThroughHistoryUITests.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistoryUITests.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistoryUITests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 14/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class SailingThroughHistoryUITests: XCTestCase {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override func setUp() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        // Put setup code here. This method is called before the invocation of each test method in the class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        // In UI tests it is usually best to stop immediately when a failure occurs."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        continueAfterFailure \u003d false"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCUIApplication().launch()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override func tearDown() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        // Put teardown code here. This method is called after the invocation of each test method in the class."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func testExample() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        // Use recording to get started writing UI tests."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        // Use XCTAssert and related functions to verify your tests produce the correct results."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 32
    }
  }
]
